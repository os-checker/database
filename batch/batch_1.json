{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (fb4aebddd 2024-09-30)",
          "commit_hash": "fb4aebddd18d258046ddb51fd41589295259a0fa",
          "commit_date": "2024-09-30",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.0"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-none",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "1.78",
            "profile": null,
            "targets": [
              "riscv32imac-unknown-none-elf",
              "thumbv6m-none-eabi",
              "thumbv7em-none-eabi",
              "thumbv7em-none-eabihf",
              "thumbv7m-none-eabi",
              "thumbv8m.main-none-eabihf",
              "wasm32-unknown-unknown"
            ],
            "components": [
              "rust-src",
              "rustfmt",
              "llvm-tools"
            ],
            "toml_path": "/home/runner/check/batch_1/AsyncModules/embassy-priority/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2022-08-08",
            "profile": "minimal",
            "targets": [
              "riscv64imac-unknown-none-elf"
            ],
            "components": [
              "rust-src",
              "llvm-tools-preview",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/Byte-OS/lose-net-stack/example/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2023-12-01",
            "profile": "minimal",
            "targets": [
              "riscv64gc-unknown-none-elf"
            ],
            "components": [
              "rust-src",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/Byte-OS/polyhal/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2023-12-01",
            "profile": "minimal",
            "targets": [
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-none"
            ],
            "components": [
              "rust-src",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/Byte-OS/polyhal/example/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2024-05-02",
            "profile": "minimal",
            "targets": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-none"
            ],
            "components": [
              "rust-src",
              "llvm-tools",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/Starry-OS/Starry/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2024-05-02",
            "profile": "minimal",
            "targets": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-none"
            ],
            "components": [
              "rust-src",
              "llvm-tools",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/arceos-org/arceos/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2023-02-23",
            "profile": "minimal",
            "targets": [
              "riscv64imac-unknown-none-elf"
            ],
            "components": [
              "rustfmt",
              "llvm-tools-preview"
            ],
            "toml_path": "/home/runner/check/batch_1/elliott10/e1000-driver/rust-toolchain",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2024-01-31",
            "profile": "minimal",
            "targets": [
              "riscv64gc-unknown-none-elf"
            ],
            "components": [
              "rustfmt",
              "llvm-tools-preview"
            ],
            "toml_path": "/home/runner/check/batch_1/elliott10/e1000-driver/examples/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2024-01-31",
            "profile": "minimal",
            "targets": [
              "riscv64gc-unknown-none-elf"
            ],
            "components": [
              "rustfmt",
              "llvm-tools-preview"
            ],
            "toml_path": "/home/runner/check/batch_1/elliott10/lwext4_rust/examples/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1727767142750,
        "finish": 1727767364646,
        "duration_ms": 221895,
        "git_time": "2024-10-01 15:15:46 +0800",
        "git_sha": "3a6ec3bee02e0a95621f6bf6cbb9eafccf33c9d5"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Mirai",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "mirai": [
          "Mirai"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "AsyncModules",
        "repo": "embassy-priority"
      },
      {
        "user": "Byte-OS",
        "repo": "lose-net-stack"
      },
      {
        "user": "Byte-OS",
        "repo": "polyhal"
      },
      {
        "user": "Starry-OS",
        "repo": "Starry"
      },
      {
        "user": "arceos-org",
        "repo": "arceos"
      },
      {
        "user": "elliott10",
        "repo": "e1000-driver"
      },
      {
        "user": "elliott10",
        "repo": "lwext4_rust"
      },
      {
        "user": "guoweikang",
        "repo": "osl"
      }
    ],
    "packages": [
      {
        "name": "embassy-boot",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-boot-nrf",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-boot-rp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-boot-stm32",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-embedded-hal",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-executor",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-executor-macros",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-futures",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-hal-internal",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-adin1110",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-driver-channel",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-enc28j60",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-esp-hosted",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-ppp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-tuntap",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-wiznet",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-nrf",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-rp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-stm32",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-stm32-wpan",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-sync",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-time",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-time-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-time-queue-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-dfu",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-logger",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-synopsys-otg",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "example",
        "repo": {
          "repo_idx": 1,
          "user": "Byte-OS",
          "repo": "lose-net-stack"
        }
      },
      {
        "name": "lose-net-stack",
        "repo": {
          "repo_idx": 1,
          "user": "Byte-OS",
          "repo": "lose-net-stack"
        }
      },
      {
        "name": "example",
        "repo": {
          "repo_idx": 2,
          "user": "Byte-OS",
          "repo": "polyhal"
        }
      },
      {
        "name": "polyhal",
        "repo": {
          "repo_idx": 2,
          "user": "Byte-OS",
          "repo": "polyhal"
        }
      },
      {
        "name": "polyhal-macro",
        "repo": {
          "repo_idx": 2,
          "user": "Byte-OS",
          "repo": "polyhal"
        }
      },
      {
        "name": "arceos-bwbench",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-display",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-echoserver",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-exception",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-helloworld",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-httpclient",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-httpserver",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-memtest",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-parallel",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-priority",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-shell",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-sleep",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-tls",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-udpserver",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-yield",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "axlibc",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "bwbench-client",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "deptool",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "mingo",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "monolithic_userboot",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-helloworld",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-httpclient",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-httpserver",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-shell",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos_api",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos_posix_api",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axalloc",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axconfig",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axdisplay",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axdma",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axdriver",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axfeat",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axfs",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axhal",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axlibc",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axlog",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axmm",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axnet",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axruntime",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axstd",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axsync",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axtask",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "bwbench-client",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "deptool",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "mingo",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "e1000-driver",
        "repo": {
          "repo_idx": 5,
          "user": "elliott10",
          "repo": "e1000-driver"
        }
      },
      {
        "name": "e1000-driver-test",
        "repo": {
          "repo_idx": 5,
          "user": "elliott10",
          "repo": "e1000-driver"
        }
      },
      {
        "name": "lwext4_rust",
        "repo": {
          "repo_idx": 6,
          "user": "elliott10",
          "repo": "lwext4_rust"
        }
      },
      {
        "name": "lwext4_rust_examples",
        "repo": {
          "repo_idx": 6,
          "user": "elliott10",
          "repo": "lwext4_rust"
        }
      },
      {
        "name": "osl",
        "repo": {
          "repo_idx": 7,
          "user": "guoweikang",
          "repo": "osl"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 487,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1870,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1829,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1864,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1865,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1852,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1900,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1830,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 4824,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1843,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 4658,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2292,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2237,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2268,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 3076,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2287,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2196,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2182,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2221,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2215,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 152,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 154,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 803,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 152,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 149,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 154,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 719,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 9490,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 9254,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 9312,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 9328,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 12879,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 9331,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 9266,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 9429,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 9455,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 803,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9490,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9455,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9254,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9429,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9266,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9331,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 12879,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9328,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9312,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 179,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 174,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 176,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 177,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 178,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 177,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1346,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 178,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 179,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 869,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 11276,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 11673,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 11622,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 11702,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 11501,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 11482,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 11539,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 28953,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 11773,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1346,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 11276,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 11501,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1219,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1268,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1199,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1280,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1195,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1225,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 83169,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1248,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 82741,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1592,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1553,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1602,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1573,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1565,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 3354,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1548,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1643,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1642,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1642,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1602,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1553,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 82741,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1195,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1280,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1643,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1199,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1592,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1268,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1548,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1225,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3354,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1565,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 83169,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1573,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1248,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1219,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 120,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1650,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1644,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1643,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1655,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 2850,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1650,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1631,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1645,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1634,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 3133,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1825,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1908,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1871,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1886,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1880,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2359,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1835,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1877,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1857,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 7099,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 258,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 259,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 259,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 262,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 259,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 254,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 260,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 256,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 1,
      "duration_ms": 9359,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 226,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 226,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 216,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 226,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 205,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 211,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 234,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6785,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 225,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 259,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 258,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 262,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 259,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7099,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 259,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 254,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 260,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 256,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 107,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 5908,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 105,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 107,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 76,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 65,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 64,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 64,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6327,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 64,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 64,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 56,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 64,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 64,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 219,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 219,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 218,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 368,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 220,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 220,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 217,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 214,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 218,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 354,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 156,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 163,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 162,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 163,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 204,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 149,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 162,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 159,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 591,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 586,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 587,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 593,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 586,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 592,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 573,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 567,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1223,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 4,
      "duration_ms": 1782,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 691,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 707,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 714,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1123,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 678,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 648,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 647,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 690,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 676,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 113,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 115,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 114,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 113,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 113,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 114,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 114,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1154,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1113,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1116,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1126,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1142,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1140,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 2594,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1140,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1123,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 5,
      "duration_ms": 3267,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1444,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1414,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2475,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1413,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1425,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1436,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1426,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1451,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1451,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1414,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 3267,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1142,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1126,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1426,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1116,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1444,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1113,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1436,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1140,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1425,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2594,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1413,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1140,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2475,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1123,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1154,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1769,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1722,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1730,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1738,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1760,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1742,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1734,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1726,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 3177,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 5375,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2022,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2043,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2044,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2075,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2056,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2096,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2077,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2486,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1730,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1722,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1760,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1738,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1769,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1742,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1734,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1726,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3177,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 101,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 102,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 101,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 99,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 148,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 148,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 146,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 151,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 150,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 152,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 559,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 148,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 151,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 341,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 152,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 103,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 103,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 101,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 101,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 100,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1301,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1333,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1307,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1303,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1280,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1312,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1280,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1786,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1297,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 2271,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1617,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1606,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1608,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1581,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1573,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1552,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1559,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1909,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1585,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 106,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 107,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1525,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1503,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1535,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1544,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1502,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1535,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 2139,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1512,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1529,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 2870,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1621,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1643,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1633,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1664,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1595,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1562,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1594,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1617,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2160,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1998,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1980,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 6491,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2017,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1986,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2000,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1981,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2018,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2005,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 8063,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2247,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2271,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2299,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6039,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2289,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2194,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2236,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2306,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2271,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 8063,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1435,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1495,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 4685,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1444,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1468,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1447,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1393,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1526,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1374,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 6430,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1680,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1797,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1801,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1742,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1800,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 4542,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1865,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1773,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1862,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 100,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 95,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 95,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 95,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 98,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 96,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 96,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2297,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 305,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1732,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 276,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 276,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 280,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 469,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 274,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 279,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 1443,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 283,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 247,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 289,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 711,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 620,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3330,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 285,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 286,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 293,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 711,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 286,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 279,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 293,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 1443,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 285,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1732,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 469,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 276,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 289,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 274,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 620,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 280,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 276,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 283,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 305,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 247,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1485,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1500,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1528,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1508,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1506,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1515,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2311,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1507,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1528,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 3031,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1859,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1834,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1795,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1811,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1859,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2229,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1923,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1938,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1796,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 251,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 243,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 242,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 242,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 243,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 241,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 243,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 242,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 243,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 163,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 162,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1233,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 162,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 1315,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 9271,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 9162,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 9183,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 9209,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 9020,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 9223,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 9053,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 13135,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 9107,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9162,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9107,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 13135,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9053,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9223,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9020,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9271,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9209,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1233,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9183,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 193,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 192,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 192,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 192,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 192,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 193,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 191,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 193,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 192,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 180,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 174,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 179,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 181,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1057,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 179,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 182,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 180,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 183,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 676,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 9031,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 10764,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 11110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 10797,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 10088,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 35150,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 10143,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 10127,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 10561,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1057,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9031,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 10088,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 10127,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 504,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 506,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 503,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 504,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 505,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 503,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 560,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 508,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 505,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 5986,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1149,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1315,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1127,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1115,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1145,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1126,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1147,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1119,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 5362,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 5853,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1430,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1757,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1465,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1393,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1432,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1414,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1454,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1467,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1467,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1757,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1430,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 5362,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1115,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1127,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1454,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1315,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 5853,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1149,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1414,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1145,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1432,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1126,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1393,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1147,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1465,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1119,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 5986,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 121,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 119,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 120,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 119,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 119,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 119,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 130,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 122,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1394,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1695,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 6664,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1404,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1391,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1407,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1383,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1391,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1382,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 6534,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1760,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1727,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1889,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1775,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1698,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6396,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1803,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1769,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1803,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1803,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1889,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1727,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 6534,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1391,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1404,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1769,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6664,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1760,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1695,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1803,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1407,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6396,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1383,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1698,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1391,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1775,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1382,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1394,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 134,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 134,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 134,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 145,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 134,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 133,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 134,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 133,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 133,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1431,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1398,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1449,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1443,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2006,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1484,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1500,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1487,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1495,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 2314,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1546,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1574,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1583,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1576,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1596,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1857,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1525,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1535,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1577,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1120,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1214,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1171,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1153,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1191,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1140,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 2189,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1112,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1141,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 10,
      "duration_ms": 2835,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1419,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1382,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1888,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1439,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1358,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1348,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1335,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1390,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1349,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 135,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 134,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 135,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 136,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 135,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 136,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 129,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 135,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 873,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 937,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 90,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 98,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 796,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 135,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 134,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 135,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 136,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 135,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 136,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 129,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 135,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 873,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 271,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 88,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 88,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 88,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 184,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 87,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 86,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 77,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 87,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 88,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 127,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2442,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2425,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2475,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2503,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2456,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2441,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 8227,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2426,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2453,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 2,
      "duration_ms": 10835,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 2985,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 3029,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 3027,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 3037,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 3018,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 8264,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3017,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 3037,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 2954,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1927,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1933,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1905,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1918,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1970,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1951,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1906,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 4142,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1888,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 1,
      "duration_ms": 4743,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2467,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2458,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2396,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2591,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2466,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 3318,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2474,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2487,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2494,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2494,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2396,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2458,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 4743,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1970,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1918,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2487,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1905,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2467,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1933,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2474,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1951,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3318,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1906,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2466,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4142,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2591,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1888,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1927,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 160,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 160,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 158,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 314,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 353,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 154,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 104,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2264,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2306,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2312,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2288,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 7856,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2305,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2214,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2192,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2202,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 7739,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 2999,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 3047,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 3084,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 3070,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 3072,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 8404,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3054,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 3059,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 3037,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 141,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 141,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 145,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 142,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 141,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 141,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 144,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 143,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 140,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1833,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1847,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1821,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1841,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1827,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1857,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1839,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 2613,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1806,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 4223,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1781,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1753,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1754,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1831,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1810,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2064,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1806,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1807,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1801,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1821,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1847,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1827,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1841,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1833,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1857,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1839,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2613,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1806,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 10,
      "duration_ms": 1188,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 11,
      "duration_ms": 43280,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 1255,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1255,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lose-net-stack -- --emit=json",
      "count": 100,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lose-net-stack -- --emit=json",
      "count": 100,
      "duration_ms": 99,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 13,
      "duration_ms": 318,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 13,
      "duration_ms": 287,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 12,
      "duration_ms": 1620,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 273,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 257,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 318,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 287,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1955,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1946,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 6485,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1833,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 3146,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 2011,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 7199,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 1,
      "duration_ms": 2701,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2784,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 2683,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4770,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 3244,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2701,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2683,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3244,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 106,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 4257,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 23,
      "duration_ms": 2859,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 11,
      "duration_ms": 1893,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 9,
      "duration_ms": 816,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 4675,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3555,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 2461,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 1,
      "duration_ms": 899,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2025,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 129,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 129,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 127,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 3953,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 62,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 0,
      "duration_ms": 61,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-bwbench -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 47623,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 16123,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 21307,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 16123,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-display -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2231,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 6425,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 4905,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 6425,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-echoserver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 328,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 619,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2044,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-exception -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 311,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 1,
      "duration_ms": 583,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1847,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-helloworld -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 311,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 576,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1847,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpclient -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 319,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 597,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1904,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpserver -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 331,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 618,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1999,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-memtest -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 692,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 3485,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2550,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-parallel -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 335,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 1616,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2096,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-priority -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 956,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2051,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-shell -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 390,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 868,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-sleep -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 321,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 594,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1958,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-tls -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 7838,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 927,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 10449,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 927,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-udpserver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 319,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 599,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1957,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-yield -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 317,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 754,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1950,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 23946,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 3569,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 25479,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 3569,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p bwbench-client -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1713,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 637,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2293,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1713,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 637,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p deptool -- --emit=json",
      "count": 35,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 10,
      "duration_ms": 1539,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 9931,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 3245,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 6,
      "duration_ms": 424,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 241,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 424,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 241,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p monolithic_userboot -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 14635,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 882,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 29019,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 882,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 29019,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-helloworld -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 4809,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 3998,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 204,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpclient -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 214,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 390,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpserver -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 221,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 400,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 299,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-shell -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 284,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 656,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 368,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7796,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 1877,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1575,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3156,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 8872,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 2455,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2016,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4745,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7796,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1877,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8872,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2455,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 120,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 12596,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 867,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 6218,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3007,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 14041,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 1028,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 6608,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3954,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 12596,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 867,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 14041,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1028,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 4656,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 497,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 499,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 497,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 4797,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 580,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 583,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 560,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3849,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 185,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 4264,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 141,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 140,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 142,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6876,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 639,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1411,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2581,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7396,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 748,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1923,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3333,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6876,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 639,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7396,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 748,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7619,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 620,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 817,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2277,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 8108,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 660,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 898,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2949,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7619,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 620,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8108,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 660,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6869,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 540,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1324,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2560,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7184,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 629,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1782,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3307,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6869,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 540,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7184,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 629,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 718,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6712,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1159,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2417,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7448,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 853,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1555,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3166,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 718,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6712,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7448,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 853,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 120,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 712,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7438,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1917,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 3110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 8020,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 826,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2808,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4701,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 712,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7438,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8020,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 826,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6268,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 419,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 664,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2155,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 6741,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 386,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 639,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2712,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6268,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 419,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6741,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 386,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 15357,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 875,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2733,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2963,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 13933,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 5291,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2308,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3803,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 15357,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 875,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 13933,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 5291,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3838,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 267,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 265,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 270,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 4060,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 250,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 248,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 617,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7602,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 798,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 8065,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 645,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 916,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3005,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 617,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7602,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8065,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 645,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 118,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 116,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 120,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 724,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7943,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2012,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 3380,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 8824,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 847,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 3101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 5380,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 724,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7943,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8824,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 847,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6682,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 721,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1171,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2509,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7290,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 850,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1541,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3150,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6682,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 721,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7290,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 850,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6896,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 760,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1298,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2593,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 890,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7504,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1659,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3285,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6896,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 760,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 890,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7504,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6271,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 410,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 633,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2130,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 6966,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 383,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 647,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2740,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6271,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 410,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6966,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 383,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6174,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 414,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 618,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2054,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 6772,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 386,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 642,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2705,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6174,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 414,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6772,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 386,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p bwbench-client -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1685,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 575,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2259,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1685,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 575,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p deptool -- --emit=json",
      "count": 35,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 10,
      "duration_ms": 1476,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 9878,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 3347,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1367,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1275,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 151,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 153,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 1778,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 1680,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1367,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1275,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 151,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 153,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1778,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1680,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p e1000-driver -- --emit=json",
      "count": 25,
      "duration_ms": 105,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p e1000-driver -- --emit=json",
      "count": 25,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 10,
      "duration_ms": 963,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 10,
      "duration_ms": 327,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 298,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 232,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 963,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 327,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 82,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p e1000-driver-test -- --emit=json",
      "count": 18,
      "duration_ms": 101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 82,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 13,
      "duration_ms": 2424,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 82,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2526,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lwext4_rust -- --emit=json",
      "count": 18,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lwext4_rust -- --emit=json",
      "count": 18,
      "duration_ms": 122,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2298,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 532,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 1553,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 821,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 582,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2298,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 532,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 1553,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 821,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 582,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lwext4_rust_examples -- --emit=json",
      "count": 17,
      "duration_ms": 105,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3630,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 3406,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3630,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3406,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p osl -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 14859,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 6,
      "duration_ms": 9561,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 7097,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 14859,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 9561,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7097,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-09-30",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 56,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded volatile-register v0.2.2\n  Downloaded bare-metal v0.2.5\n  Downloaded semver v0.9.0\n  Downloaded vcell v0.1.3\n  Downloaded cortex-m-rt v0.7.3\n  Downloaded semver-parser v0.7.0\n  Downloaded cortex-m-rt-macros v0.7.0\n  Downloaded bitfield v0.13.2\n  Downloaded rustc_version v0.2.3\n  Downloaded num-traits v0.2.19\n  Downloaded half v2.4.1\n  Downloaded bytemuck v1.18.0\n  Downloaded cortex-m v0.7.7\n  Downloaded syn v1.0.109\n  Downloaded fixed v1.28.0\n  Downloaded bitflags v2.6.0\n  Downloaded az v1.2.1\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling fixed v1.28.0\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 58,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling fixed v1.28.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 59,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 60,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 61,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling signature v2.2.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\n"
    },
    {
      "cmd_idx": 62,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 63,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling semver-parser v0.7.0\n   Compiling version_check v0.9.5\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling semver v0.9.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling proc-macro2 v1.0.86\n   Compiling cfg-if v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling rustc_version v0.2.3\n   Compiling embedded-hal v0.2.7\n   Compiling generic-array v0.14.7\n   Compiling unicode-ident v1.0.13\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling document-features v0.2.10\n   Compiling cortex-m v0.7.7\n   Compiling autocfg v1.4.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling syn v1.0.109\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.37\n   Compiling embedded-storage v0.3.1\n   Compiling az v1.2.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 64,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 65,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 85,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 86,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 87,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 88,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 89,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 90,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 91,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 92,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 93,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 94,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded dirs-sys-next v0.1.2\n  Downloaded codespan-reporting v0.11.1\n  Downloaded is-terminal v0.4.13\n  Downloaded ena v0.14.3\n  Downloaded crunchy v0.2.2\n  Downloaded lock_api v0.4.12\n  Downloaded proc-macro-error-attr v1.0.4\n  Downloaded atomic-polyfill v1.0.3\n  Downloaded tiny-keccak v2.0.2\n  Downloaded term v0.7.0\n  Downloaded precomputed-hash v0.1.1\n  Downloaded rp2040-boot2 v0.3.0\n  Downloaded parking_lot_core v0.9.10\n  Downloaded pio-parser v0.2.2\n  Downloaded termcolor v1.4.1\n  Downloaded unicode-xid v0.2.6\n  Downloaded rp-pac v6.0.0\n  Downloaded petgraph v0.6.5\n  Downloaded string_cache v0.8.7\n  Downloaded scopeguard v1.2.0\n  Downloaded proc-macro-error v1.0.4\n  Downloaded pio-proc v0.2.2\n  Downloaded paste v1.0.15\n  Downloaded parking_lot v0.12.3\n  Downloaded num_enum_derive v0.5.11\n  Downloaded lalrpop-util v0.19.12\n  Downloaded itertools v0.10.5\n  Downloaded fixedbitset v0.4.2\n  Downloaded embedded-hal-nb v1.0.0\n  Downloaded bit-set v0.5.3\n  Downloaded ascii-canvas v3.0.0\n  Downloaded phf_shared v0.10.0\n  Downloaded new_debug_unreachable v1.0.6\n  Downloaded lalrpop v0.19.12\n  Downloaded dirs-next v2.0.0\n  Downloaded crc-any v2.5.0\n  Downloaded diff v0.1.13\n  Downloaded debug-helper v0.3.13\n  Downloaded arrayvec v0.7.6\n  Downloaded pio v0.2.1\n  Downloaded bit-vec v0.6.3\n  Downloaded siphasher v0.3.11\n  Downloaded num_enum v0.5.11\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 95,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling typenum v1.17.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling atomic-polyfill v1.0.3\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling fixed v1.28.0\n   Compiling rp-pac v6.0.0\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling arrayvec v0.7.6\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-rp v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp)\n   Compiling pio v0.2.1\n   Compiling digest v0.10.7\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-boot-rp v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-rp)\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp/src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 96,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n   Compiling typenum v1.17.0\n   Compiling void v1.0.2\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:00Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T04:56:01Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:14Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:08Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling atomic-polyfill v1.0.3\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling rp-pac v6.0.0\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T04:56:22Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling arrayvec v0.7.6\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-rp v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp)\n   Compiling pio v0.2.1\n   Compiling digest v0.10.7\n   Compiling embedded-hal-nb v1.0.0\n   Compiling signature v2.2.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-boot-rp v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-rp)\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> /home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp/src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 125,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5618b7e21225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x5618b7e3f53b - core::fmt::write::h0c46818975380aad\n     2:     0x5618b7e1f09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x5618b7e20ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x5618b7e22369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x5618b7e220ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x5618b7e22823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x5618b7e226cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x5618b7e216e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x5618b7e22437 - rust_begin_unwind\n    10:     0x5618b7e3e763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x5618b7e05e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x5618b7e03a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x5618b7e04986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x5618b7e049d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x5618b7e1c51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x5618b7e049b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x5618b7e05f05 - main\n    18:     0x7f34f2829d90 - <unknown>\n    19:     0x7f34f2829e40 - __libc_start_main\n    20:     0x5618b7e022c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 126,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling syn v1.0.109\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55cd5094f225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55cd5096d53b - core::fmt::write::h0c46818975380aad\n     2:     0x55cd5094d09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55cd5094effe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55cd50950369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55cd509500ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55cd50950823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55cd509506cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55cd5094f6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55cd50950437 - rust_begin_unwind\n    10:     0x55cd5096c763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55cd50933e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55cd50931a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55cd50932986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55cd509329d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55cd5094a51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55cd509329b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55cd50933f05 - main\n    18:     0x7f8e60c29d90 - <unknown>\n    19:     0x7f8e60c29e40 - __libc_start_main\n    20:     0x55cd509302c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 127,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55eb61007225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55eb6102553b - core::fmt::write::h0c46818975380aad\n     2:     0x55eb6100509f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55eb61006ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55eb61008369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55eb610080ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55eb61008823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55eb610086cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55eb610076e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55eb61008437 - rust_begin_unwind\n    10:     0x55eb61024763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55eb60febe3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55eb60fe9a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55eb60fea986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55eb60fea9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55eb6100251d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55eb60fea9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55eb60febf05 - main\n    18:     0x7fa4c5429d90 - <unknown>\n    19:     0x7fa4c5429e40 - __libc_start_main\n    20:     0x55eb60fe82c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 128,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling proc-macro2 v1.0.86\n    Checking nb v0.1.3\n   Compiling semver v0.9.0\n    Checking embedded-hal v0.2.7\n    Checking byteorder v1.5.0\n   Compiling rustc_version v0.2.3\n   Compiling heapless v0.8.0\n   Compiling unicode-ident v1.0.13\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\n   Compiling bare-metal v0.2.5\n   Compiling version_check v0.9.5\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling generic-array v0.14.7\n    Checking futures-util v0.3.30\n   Compiling quote v1.0.37\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling document-features v0.2.10\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n   Compiling syn v1.0.109\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling bitfield v0.13.2\n   Compiling autocfg v1.4.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c1922a04b80612de/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 129,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking nb v0.1.3\n    Checking pin-utils v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 130,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking nb v0.1.3\n    Checking futures-task v0.3.30\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n    Checking volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 131,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5630a8cb1225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x5630a8ccf53b - core::fmt::write::h0c46818975380aad\n     2:     0x5630a8caf09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x5630a8cb0ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x5630a8cb2369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x5630a8cb20ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x5630a8cb2823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x5630a8cb26cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x5630a8cb16e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x5630a8cb2437 - rust_begin_unwind\n    10:     0x5630a8cce763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x5630a8c95e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x5630a8c93a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x5630a8c94986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x5630a8c949d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x5630a8cac51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x5630a8c949b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x5630a8c95f05 - main\n    18:     0x7f1f9d829d90 - <unknown>\n    19:     0x7f1f9d829e40 - __libc_start_main\n    20:     0x5630a8c922c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 132,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 133,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling num-traits v0.2.19\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55e633215225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55e63323353b - core::fmt::write::h0c46818975380aad\n     2:     0x55e63321309f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55e633214ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55e633216369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55e6332160ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55e633216823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55e6332166cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55e6332156e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55e633216437 - rust_begin_unwind\n    10:     0x55e633232763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55e6331f9e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55e6331f7a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55e6331f8986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55e6331f89d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55e63321051d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55e6331f89b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55e6331f9f05 - main\n    18:     0x7f5dee429d90 - <unknown>\n    19:     0x7f5dee429e40 - __libc_start_main\n    20:     0x55e6331f62c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 134,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking nb v0.1.3\n    Checking futures-task v0.3.30\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n    Checking volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 135,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55d0b16da225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55d0b16f853b - core::fmt::write::h0c46818975380aad\n     2:     0x55d0b16d809f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55d0b16d9ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55d0b16db369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55d0b16db0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55d0b16db823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55d0b16db6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55d0b16da6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55d0b16db437 - rust_begin_unwind\n    10:     0x55d0b16f7763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55d0b16bee3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55d0b16bca63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55d0b16bd986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55d0b16bd9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55d0b16d551d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55d0b16bd9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55d0b16bef05 - main\n    18:     0x7fa02ac29d90 - <unknown>\n    19:     0x7fa02ac29e40 - __libc_start_main\n    20:     0x55d0b16bb2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 136,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking futures-task v0.3.30\n    Checking embedded-hal v0.2.7\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 137,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling nb v1.1.0\n   Compiling proc-macro2 v1.0.86\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n   Compiling byteorder v1.5.0\n   Compiling rustc_version v0.2.3\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling version_check v0.9.5\n   Compiling futures-task v0.3.30\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling quote v1.0.37\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling syn v1.0.109\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling document-features v0.2.10\n   Compiling cortex-m-rt v0.7.3\n   Compiling bitfield v0.13.2\n   Compiling autocfg v1.4.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x558c19d52225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x558c19d7053b - core::fmt::write::h0c46818975380aad\n     2:     0x558c19d5009f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x558c19d51ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x558c19d53369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x558c19d530ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x558c19d53823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x558c19d536cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x558c19d526e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x558c19d53437 - rust_begin_unwind\n    10:     0x558c19d6f763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x558c19d36e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x558c19d34a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x558c19d35986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x558c19d359d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x558c19d4d51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x558c19d359b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x558c19d36f05 - main\n    18:     0x7f6679a29d90 - <unknown>\n    19:     0x7f6679a29e40 - __libc_start_main\n    20:     0x558c19d332c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 138,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking nb v0.1.3\n    Checking futures-task v0.3.30\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 139,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x558824eae225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x558824ecc53b - core::fmt::write::h0c46818975380aad\n     2:     0x558824eac09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x558824eadffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x558824eaf369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x558824eaf0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x558824eaf823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x558824eaf6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x558824eae6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x558824eaf437 - rust_begin_unwind\n    10:     0x558824ecb763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x558824e92e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x558824e90a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x558824e91986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x558824e919d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x558824ea951d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x558824e919b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x558824e92f05 - main\n    18:     0x7f25fc829d90 - <unknown>\n    19:     0x7f25fc829e40 - __libc_start_main\n    20:     0x558824e8f2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 140,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/embassy-rs/stm32-data-generated`\n Downloading crates ...\n  Downloaded stm32-fmc v0.3.2\n  Downloaded embedded-can v0.4.1\n  Downloaded sdio-host v0.5.0\n  Downloaded bit_field v0.10.2\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n   Compiling proc-macro2 v1.0.86\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling semver v0.9.0\n    Checking byteorder v1.5.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustc_version v0.2.3\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling version_check v0.9.5\n    Checking critical-section v1.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling generic-array v0.14.7\n    Checking futures-util v0.3.30\n   Compiling quote v1.0.37\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking cfg-if v1.0.0\n   Compiling litrs v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling bitfield v0.13.2\n   Compiling document-features v0.2.10\n   Compiling autocfg v1.4.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling syn v1.0.109\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 141,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55871f3fa225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55871f41853b - core::fmt::write::h0c46818975380aad\n     2:     0x55871f3f809f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55871f3f9ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55871f3fb369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55871f3fb0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55871f3fb823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55871f3fb6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55871f3fa6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55871f3fb437 - rust_begin_unwind\n    10:     0x55871f417763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55871f3dee3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55871f3dca63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55871f3dd986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55871f3dd9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55871f3f551d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55871f3dd9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55871f3def05 - main\n    18:     0x7f7561629d90 - <unknown>\n    19:     0x7f7561629e40 - __libc_start_main\n    20:     0x55871f3db2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 142,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 143,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 158,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 159,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 160,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 161,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 181,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 181,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 182,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 182,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 183,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 183,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 184,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 184,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 185,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 185,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 186,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 186,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 187,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 187,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 188,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 188,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 189,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 189,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 190,
      "file": "src/raw/waker.rs",
      "kind": "Mirai",
      "raw": "warning: Found waker not created by the Embassy executor. `embassy_time::Timer` only works with the Embassy executor.\n  --> src/raw/waker.rs:42:9\n   |\n42 |         panic!(\"Found waker not created by the Embassy executor. `embassy_time::Timer` only works with the Embassy executor.\")\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 200,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 201,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 202,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 203,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 204,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded ident_case v1.0.1\n  Downloaded darling_macro v0.20.10\n  Downloaded strsim v0.11.1\n  Downloaded fnv v1.0.7\n  Downloaded darling v0.20.10\n  Downloaded darling_core v0.20.10\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\n   Compiling litrs v0.4.1\n    Checking critical-section v1.1.3\n   Compiling document-features v0.2.10\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling embassy-executor-macros v0.4.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor-macros)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 205,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 206,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 207,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 208,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 222,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 222,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 222,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 222,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 222,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 222,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 223,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 223,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 223,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 223,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 223,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 223,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 224,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 224,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 224,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 224,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 224,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 224,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 225,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 225,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 225,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 225,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 225,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 225,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 226,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 226,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 226,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 226,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 226,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 226,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 249,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 249,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 249,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 249,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 250,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 250,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 250,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 250,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 251,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 251,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 251,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 251,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 252,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 252,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 252,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 252,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 253,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 253,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 253,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 253,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 254,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 254,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 254,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 254,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 274,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 274,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 274,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 275,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 275,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 275,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 276,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 276,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 276,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 277,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 277,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 277,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 278,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 278,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 278,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 279,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 279,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 279,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 280,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 280,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 280,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 281,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 281,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 281,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 282,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 282,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 282,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 283,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n   --> src/atomic_ring_buffer.rs:240:55\n    |\n240 |         trace!(\"  ringbuf: push_buf {:?}..{:?}\", end, end + n);\n    |                                                       ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 283,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n   --> src/atomic_ring_buffer.rs:279:70\n    |\n279 |         trace!(\"  ringbuf: push_bufs [{:?}..{:?}, {:?}..{:?}]\", end, end + n0, 0, n1);\n    |                                                                      ^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 283,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n   --> src/atomic_ring_buffer.rs:365:56\n    |\n365 |         trace!(\"  ringbuf: pop_buf {:?}..{:?}\", start, start + n);\n    |                                                        ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 283,
      "file": "src/drop.rs",
      "kind": "Mirai",
      "raw": "warning: boom\n  --> src/drop.rs:54:9\n   |\n54 |         panic!(\"boom\")\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 293,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 294,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 294,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 295,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 295,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 296,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 296,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 297,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 297,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 298,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 298,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 299,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 299,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 300,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 300,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 301,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 301,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 305,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 306,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 307,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 308,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 310,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 311,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Mirai",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 311,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Mirai",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 311,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Mirai",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 311,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Mirai",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 311,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Mirai",
      "raw": "error[E0392]: parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 321,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling no-std-net v0.6.0\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 322,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling cfg-if v1.0.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 323,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 324,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling litrs v0.4.1\n    Checking cfg-if v1.0.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking nb v0.1.3\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling document-features v0.2.10\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n   Compiling embedded-nal-async v0.7.1\n    Checking no-std-net v0.6.0\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 325,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking hash32 v0.3.1\n    Checking nb v0.1.3\n    Checking futures-util v0.3.30\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n    Checking embedded-nal v0.8.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 326,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking cfg-if v1.0.0\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking hash32 v0.3.1\n    Checking nb v0.1.3\n    Checking no-std-net v0.6.0\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 327,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling no-std-net v0.6.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 328,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking cfg-if v1.0.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 329,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling void v1.0.2\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 330,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking cfg-if v1.0.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking critical-section v1.1.3\n   Compiling smoltcp v0.11.0\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-hal v0.2.7\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 331,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling futures-core v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling no-std-net v0.6.0\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 332,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking cfg-if v1.0.0\n    Checking futures-task v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-hal v0.2.7\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 333,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling void v1.0.2\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 334,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded managed v0.8.0\n  Downloaded embedded-nal-async v0.7.1\n  Downloaded bitflags v1.3.2\n  Downloaded embedded-nal v0.8.0\n  Downloaded no-std-net v0.6.0\n  Downloaded smoltcp v0.11.0\n   Compiling heapless v0.8.0\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n    Checking stable_deref_trait v1.2.0\n   Compiling litrs v0.4.1\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n   Compiling document-features v0.2.10\n    Checking futures-util v0.3.30\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking void v1.0.2\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 335,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-core v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 336,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking hash32 v0.3.1\n    Checking nb v0.1.3\n    Checking futures-util v0.3.30\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking void v1.0.2\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 337,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-core v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling nb v0.1.3\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal-async v0.7.1\n   Compiling document-features v0.2.10\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 338,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 339,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.30\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking critical-section v1.1.3\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n   Compiling embedded-nal-async v0.7.1\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 350,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 350,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 350,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 350,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 350,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 350,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 350,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 351,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 351,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 351,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 351,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 351,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 351,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 351,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 352,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 352,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 352,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 352,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 352,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 352,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 352,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 353,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 353,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 353,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 353,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 353,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 353,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 353,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 354,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 354,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 354,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 354,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 354,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 354,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 354,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 355,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 355,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 355,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 355,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 355,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 355,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 355,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 356,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 356,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 356,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 356,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 356,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 356,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 356,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 357,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 357,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 357,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 357,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 357,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 357,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 357,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 368,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking nb v1.1.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 369,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking pin-utils v0.1.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n    Checking embedded-hal v1.0.0\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 370,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 371,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v1.1.0\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 372,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking nb v1.1.0\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling embedded-hal-bus v0.1.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 373,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking hash32 v0.3.1\n    Checking nb v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 374,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 375,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 376,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded bitfield v0.14.0\n  Downloaded embedded-hal-bus v0.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n    Checking nb v0.1.3\n   Compiling embedded-hal-bus v0.1.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n   Compiling document-features v0.2.10\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 377,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 377,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 378,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 378,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 379,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 379,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 380,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 380,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 381,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 381,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 382,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 382,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 383,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 383,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 384,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 384,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 385,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 385,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 386,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 387,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 388,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 389,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 390,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 391,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 392,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 393,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 394,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 405,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 406,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 407,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 408,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 409,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 410,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 411,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 412,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 413,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 414,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 414,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 415,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 415,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 416,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 416,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 417,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 417,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 418,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 418,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 419,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 419,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 420,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 420,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 421,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 421,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 422,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 422,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 442,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 443,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 444,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 445,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 446,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 447,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 470,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 470,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 470,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 470,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 470,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 470,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 471,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 471,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 471,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 471,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 471,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 471,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 472,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 472,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 472,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 472,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 472,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 472,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 473,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 473,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 473,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 473,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 473,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 473,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 474,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 474,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 474,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 474,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 474,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 474,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 475,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 475,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 475,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 475,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 475,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 475,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 476,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 476,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 476,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 476,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 476,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 476,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 477,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1032 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1552 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1560 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 477,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 477,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 477,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 477,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 477,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 478,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 478,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 478,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 478,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 478,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 478,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-esp-hosted, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-esp-hosted\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling unicode-ident v1.0.13\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling syn v1.0.109\n   Compiling anyhow v1.0.89\n    Checking futures-util v0.3.30\n   Compiling quote v1.0.37\n   Compiling litrs v0.4.1\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n   Compiling either v1.13.0\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling document-features v0.2.10\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n   Compiling itertools v0.10.5\n    Checking nb v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling noproto-derive v0.1.0\n    Checking noproto v0.1.0\n    Checking embassy-net-esp-hosted v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-esp-hosted)\nthread 'rustc' panicked at checker/src/body_visitor.rs:2452:14:\nArray length constant to have a known value\nstack backtrace:\n   0:     0x7f7533bda756 - std::backtrace_rs::backtrace::libunwind::trace::h94f8c7122e05c230\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/../../backtrace/src/backtrace/libunwind.rs:104:5\n   1:     0x7f7533bda756 - std::backtrace_rs::backtrace::trace_unsynchronized::h449cc397f38f961a\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   2:     0x7f7533bda756 - std::sys_common::backtrace::_print_fmt::h99e89bb2cec7ce30\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:68:5\n   3:     0x7f7533bda756 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h9d5ec8eb2e1a7700\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:44:22\n   4:     0x7f7533c2d080 - core::fmt::rt::Argument::fmt::h7ef4d083260a0351\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/fmt/rt.rs:142:9\n   5:     0x7f7533c2d080 - core::fmt::write::h2a403cc736abb76d\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/fmt/mod.rs:1120:17\n   6:     0x7f7533bce49f - std::io::Write::write_fmt::h9388093ce47d738a\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/io/mod.rs:1810:15\n   7:     0x7f7533bda534 - std::sys_common::backtrace::_print::he4265a9234d5139f\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:47:5\n   8:     0x7f7533bda534 - std::sys_common::backtrace::print::h5cc27ab6a8643bdb\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:34:9\n   9:     0x7f7533bdd2c7 - std::panicking::default_hook::{{closure}}::hc8257eee467fd46c\n  10:     0x7f7533bdd029 - std::panicking::default_hook::hff02dc68ee5d3c46\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:292:9\n  11:     0x7f753075106c - std[bce8a3935be9b497]::panicking::update_hook::<alloc[55b8802719acf2f0]::boxed::Box<rustc_driver_impl[e32ff1f67578002d]::install_ice_hook::{closure#0}>>::{closure#0}\n  12:     0x7f7533bdda16 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h36f3347658e0b917\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/alloc/src/boxed.rs:2029:9\n  13:     0x7f7533bdda16 - std::panicking::rust_panic_with_hook::hca2e28235e9b1d5c\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:783:13\n  14:     0x7f7533bdd762 - std::panicking::begin_panic_handler::{{closure}}::h12fe0f3c055c0d25\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:657:13\n  15:     0x7f7533bdac56 - std::sys_common::backtrace::__rust_end_short_backtrace::hac29e2e1d1f10185\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys_common/backtrace.rs:171:18\n  16:     0x7f7533bdd4c0 - rust_begin_unwind\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/panicking.rs:645:5\n  17:     0x7f7533c29785 - core::panicking::panic_fmt::h72b9f790277cded1\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/panicking.rs:72:14\n  18:     0x7f7533c29533 - core::panicking::panic_display::h629bd69225983da4\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/panicking.rs:196:5\n  19:     0x7f7533c29533 - core::panicking::panic_str::hd022e8f39dfde25f\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/panicking.rs:171:5\n  20:     0x7f7533c29533 - core::option::expect_failed::h6366f025d7727144\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/option.rs:1980:5\n  21:     0x5643fe474d8b - core::option::Option<T>::expect::h4f6b4c7b965ced18\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/core/src/option.rs:894:21\n  22:     0x5643fe474d8b - mirai::body_visitor::BodyVisitor::get_array_length::h7fb29b5e76c44db4\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:2452:14\n  23:     0x5643fe488edb - mirai::body_visitor::BodyVisitor::try_expand_target_pattern::hbd105a84308878e2\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:2428:26\n  24:     0x5643fe488edb - mirai::body_visitor::BodyVisitor::copy_or_move_elements::hc37b4ea40f809eaf\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:1760:39\n  25:     0x5643fe3cf795 - mirai::block_visitor::BlockVisitor::visit_use::hb15b81a839f380cc\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:1764:29\n  26:     0x5643fe3cc82a - mirai::block_visitor::BlockVisitor::visit_aggregate::h3df15f61b9857ab7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:2594:25\n  27:     0x5643fe3cc82a - mirai::block_visitor::BlockVisitor::visit_rvalue::hdeeb38c6624c95b8\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:1728:17\n  28:     0x5643fe3b7f9c - mirai::block_visitor::BlockVisitor::visit_assign::hf7afa0492b2c5941\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:161:9\n  29:     0x5643fe3b7f9c - mirai::block_visitor::BlockVisitor::visit_statement::h11834c862dc36244\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:117:64\n  30:     0x5643fe3b7f9c - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:90:17\n  31:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  32:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  33:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  34:     0x5643fe3f76dc - mirai::call_visitor::CallVisitor::create_and_cache_function_summary::h80e47f2a9bfb1f3d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:141:31\n  35:     0x5643fe3f96e8 - mirai::call_visitor::CallVisitor::get_function_summary::h3cd474b3261cec17\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:382:21\n  36:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_call::h69db26b81b074506\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:736:32\n  37:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_terminator::he9783d48550eff8a\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:311:18\n  38:     0x5643fe3b8fa4 - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:105:13\n  39:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  40:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  41:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  42:     0x5643fe3f76dc - mirai::call_visitor::CallVisitor::create_and_cache_function_summary::h80e47f2a9bfb1f3d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:141:31\n  43:     0x5643fe3f96e8 - mirai::call_visitor::CallVisitor::get_function_summary::h3cd474b3261cec17\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:382:21\n  44:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_call::h69db26b81b074506\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:736:32\n  45:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_terminator::he9783d48550eff8a\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:311:18\n  46:     0x5643fe3b8fa4 - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:105:13\n  47:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  48:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  49:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  50:     0x5643fe3f76dc - mirai::call_visitor::CallVisitor::create_and_cache_function_summary::h80e47f2a9bfb1f3d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:141:31\n  51:     0x5643fe3f96e8 - mirai::call_visitor::CallVisitor::get_function_summary::h3cd474b3261cec17\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/call_visitor.rs:382:21\n  52:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_call::h69db26b81b074506\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:736:32\n  53:     0x5643fe3bb832 - mirai::block_visitor::BlockVisitor::visit_terminator::he9783d48550eff8a\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:311:18\n  54:     0x5643fe3b8fa4 - mirai::block_visitor::BlockVisitor::visit_basic_block::hf92957b86c1d6a5d\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/block_visitor.rs:105:13\n  55:     0x5643fe4689b8 - mirai::fixed_point_visitor::FixedPointVisitor::visit_basic_block::h432afb0a9490cbb7\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:130:9\n  56:     0x5643fe466ffd - mirai::fixed_point_visitor::FixedPointVisitor::visit_blocks::h6149f1834e690a81\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/fixed_point_visitor.rs:82:21\n  57:     0x5643fe47d4c0 - mirai::body_visitor::BodyVisitor::visit_body::ha7a6616488eafb79\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/body_visitor.rs:217:9\n  58:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_body::{{closure}}::h66c8dca76da6a317\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:185:23\n  59:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_body::hd7d7dc55d19d3cdf\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:173:5\n  60:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_some_bodies::{{closure}}::hfa20b97c6ca7a778\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:127:13\n  61:     0x5643fe439325 - mirai::crate_visitor::CrateVisitor::analyze_some_bodies::h2e3e1dd8e275bd25\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/crate_visitor.rs:71:5\n  62:     0x5643fe49db78 - mirai::callbacks::MiraiCallbacks::analyze_with_mirai::{{closure}}::hc9912b31759cd925\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:174:9\n  63:     0x5643fe49db78 - mirai::callbacks::MiraiCallbacks::analyze_with_mirai::h097b2444caee940f\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:133:5\n  64:     0x5643fe49caaf - <mirai::callbacks::MiraiCallbacks as rustc_driver_impl::Callbacks>::after_analysis::{{closure}}::{{closure}}::hd453b35ab0c4e14e\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:120:26\n  65:     0x5643fe49caaf - rustc_middle::ty::context::GlobalCtxt::enter::{{closure}}::h2f8a428a66468974\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context.rs:666:37\n  66:     0x5643fe49caaf - rustc_middle::ty::context::tls::enter_context::{{closure}}::h73174c3c95f90e07\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context/tls.rs:82:9\n  67:     0x5643fe49caaf - std::thread::local::LocalKey<T>::try_with::h231ab6731c60e2c3\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/thread/local.rs:270:16\n  68:     0x5643fe49caaf - std::thread::local::LocalKey<T>::with::h1a1115e06adc6b84\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/thread/local.rs:246:9\n  69:     0x5643fe49caaf - rustc_middle::ty::context::tls::enter_context::h093207ad7dca8bdd\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context/tls.rs:79:9\n  70:     0x5643fe49caaf - rustc_middle::ty::context::GlobalCtxt::enter::he108b364fd88ebc7\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_middle/src/ty/context.rs:666:9\n  71:     0x5643fe49caaf - rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>::enter::hecbea8068e407bdb\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/compiler/rustc_interface/src/queries.rs:71:9\n  72:     0x5643fe49caaf - <mirai::callbacks::MiraiCallbacks as rustc_driver_impl::Callbacks>::after_analysis::{{closure}}::h448214350c6957de\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:117:9\n  73:     0x5643fe49caaf - <mirai::callbacks::MiraiCallbacks as rustc_driver_impl::Callbacks>::after_analysis::h875b68c3b46b7b75\n                               at /home/runner/work/MIRAI/MIRAI/checker/src/callbacks.rs:101:5\n  74:     0x7f7532a34516 - rustc_interface[6bc3f1fe26159ec6]::interface::run_compiler::<core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>, rustc_driver_impl[e32ff1f67578002d]::run_compiler::{closure#0}>::{closure#0}\n  75:     0x7f75329b5706 - std[bce8a3935be9b497]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_with_globals<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_pool_with_globals<rustc_interface[6bc3f1fe26159ec6]::interface::run_compiler<core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>, rustc_driver_impl[e32ff1f67578002d]::run_compiler::{closure#0}>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>\n  76:     0x7f75329b5533 - <<std[bce8a3935be9b497]::thread::Builder>::spawn_unchecked_<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_with_globals<rustc_interface[6bc3f1fe26159ec6]::util::run_in_thread_pool_with_globals<rustc_interface[6bc3f1fe26159ec6]::interface::run_compiler<core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>, rustc_driver_impl[e32ff1f67578002d]::run_compiler::{closure#0}>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[428442fe84ea1b4e]::result::Result<(), rustc_span[16f9992e6c25b5e]::ErrorGuaranteed>>::{closure#1} as core[428442fe84ea1b4e]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  77:     0x7f7533be7945 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h86a431238d49a3fd\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/alloc/src/boxed.rs:2015:9\n  78:     0x7f7533be7945 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h45a4c3506ac8cdc6\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/alloc/src/boxed.rs:2015:9\n  79:     0x7f7533be7945 - std::sys::unix::thread::Thread::new::thread_start::h42580b3c714a9afd\n                               at /rustc/3cdd004e55c869faa2b7b25efd3becf50346e7d6/library/std/src/sys/unix/thread.rs:108:17\n  80:     0x7f752d294ac3 - <unknown>\n  81:     0x7f752d326850 - <unknown>\n  82:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: please attach the file at `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-esp-hosted/rustc-ice-2024-10-01T05_00_47-10057.txt` to your bug report\n\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -Z always_encode_mir\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\nerror: could not compile `embassy-net-esp-hosted` (lib)\n"
    },
    {
      "cmd_idx": 499,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 499,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 499,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 499,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 499,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 499,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 500,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 500,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 500,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 500,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 500,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 500,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 501,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 501,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 501,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 501,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 501,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 501,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 502,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 502,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 502,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 502,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 502,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 502,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 503,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 503,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 503,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 503,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 503,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 503,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 504,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 504,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 504,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 504,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 504,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 504,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 505,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 505,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 505,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 505,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 505,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 505,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 506,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 506,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 506,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 506,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 506,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 506,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 507,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 507,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 507,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 507,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 507,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 507,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 518,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 519,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 520,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 521,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 522,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 523,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 524,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 525,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 526,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 528,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv6m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 529,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv32imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 530,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 531,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 532,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 533,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
    },
    {
      "cmd_idx": 533,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:47:14\n   |\n47 |         sys::with_description(*self, |desc| {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 533,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:58:14\n   |\n58 |         sys::with_description(*self, |desc| match desc {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 533,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `STRERROR_NAME` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:64:22\n   |\n64 |                 sys::STRERROR_NAME,\n   |                      ^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 533,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `errno` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:95:10\n   |\n95 |     sys::errno()\n   |          ^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 533,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `set_errno` in module `sys`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:100:10\n    |\n100 |     sys::set_errno(err)\n    |          ^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 534,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 535,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 541,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:04:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:04:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 542,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:04:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:04:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:04:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:04:55Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 546,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv32imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 547,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling pin-project-lite v0.2.14\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 548,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 549,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling async-io v1.13.0\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 550,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 551,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 552,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded errno v0.3.9\n  Downloaded fastrand v1.9.0\n  Downloaded io-lifetimes v1.0.11\n  Downloaded async-lock v2.8.0\n  Downloaded waker-fn v1.2.0\n  Downloaded socket2 v0.4.10\n  Downloaded event-listener v2.5.3\n  Downloaded concurrent-queue v2.5.0\n  Downloaded polling v2.8.0\n  Downloaded async-io v1.13.0\n  Downloaded futures-lite v1.13.0\n  Downloaded parking v2.2.1\n  Downloaded rustix v0.37.27\n  Downloaded linux-raw-sys v0.3.8\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 553,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n Downloading crates ...\n  Downloaded instant v0.1.13\n    Checking cfg-if v1.0.0\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n    Checking instant v0.1.13\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\n    Checking fastrand v1.9.0\n   Compiling async-io v1.13.0\n    Checking futures-core v0.3.30\n    Checking waker-fn v1.2.0\n    Checking futures-io v0.3.30\n    Checking event-listener v2.5.3\n    Checking errno v0.3.9\n    Checking parking v2.2.1\nerror: could not compile `errno` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 554,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 555,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n   Compiling parking v2.2.1\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n  = note: `std` is required by `parking` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:53:5\n   |\n53 | use std::sync;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:58:5\n   |\n58 | use std::cell::Cell;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:59:5\n   |\n59 | use std::fmt;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:60:5\n   |\n60 | use std::marker::PhantomData;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:61:5\n   |\n61 | use std::sync::Arc;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:62:5\n   |\n62 | use std::task::{Wake, Waker};\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:63:5\n   |\n63 | use std::time::Duration;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:66:5\n   |\n66 | use std::time::Instant;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0432]: unresolved imports `sync::atomic::AtomicUsize`, `sync::atomic::Ordering::SeqCst`, `sync::Condvar`, `sync::Mutex`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:68:5\n   |\n68 | use sync::atomic::AtomicUsize;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n69 | use sync::atomic::Ordering::SeqCst;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n70 | use sync::{Condvar, Mutex};\n   |            ^^^^^^^  ^^^^^\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:370:23\n    |\n370 |             Err(n) => panic!(\"inconsistent park_timeout state: {}\", n),\n    |                       ^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:400:30\n    |\n400 |                         n => panic!(\"inconsistent park_timeout state: {}\", n),\n    |                              ^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:422:18\n    |\n422 |             _ => panic!(\"inconsistent state in unpark\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::panic;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:367:17\n    |\n367 |                 assert_eq!(old, NOTIFIED, \"park state changed unexpectedly\");\n    |                 ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::assert_eq;\n    |\n\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:132:34\n    |\n132 |         self.unparker.inner.park(None);\n    |                                  ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n52  + use core::option::Option::None;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:153:34\n    |\n153 |         self.unparker.inner.park(Some(duration))\n    |                                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:175:19\n    |\n175 |             .park(Some(instant.saturating_duration_since(Instant::now())))\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:225:6\n    |\n225 | impl Default for Parker {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n52  + use core::default::Default;\n    |\n\nerror[E0405]: cannot find trait `Clone` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:312:6\n    |\n312 | impl Clone for Unparker {\n    |      ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n52  + use core::clone::Clone;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:320:6\n    |\n320 | impl From<Unparker> for Waker {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n52  + use core::convert::From;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:337:29\n    |\n337 |     fn park(&self, timeout: Option<Duration>) -> bool {\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n52  + use core::option::Option;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:348:16\n    |\n348 |         if let Some(dur) = timeout {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:358:13\n    |\n358 |             Ok(_) => {}\n    |             ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::result::Result::Ok;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:360:13\n    |\n360 |             Err(NOTIFIED) => {\n    |             ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::result::Result::Err;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:370:13\n    |\n370 |             Err(n) => panic!(\"inconsistent park_timeout state: {}\", n),\n    |             ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::result::Result::Err;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:389:13\n    |\n389 |             Some(timeout) => {\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function `drop` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:433:9\n    |\n433 |         drop(self.lock.lock().unwrap());\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this function\n    |\n52  + use core::mem::drop;\n    |\n\nerror: requires `sized` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:79:18\n   |\n79 | pub fn pair() -> (Parker, Unparker) {\n   |                  ^^^^^^^^^^^^^^^^^^\n\nerror: requires `sized` lang_item\n\nSome errors have detailed explanations: E0405, E0412, E0425, E0432, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `parking` (lib) due to 29 previous errors\n"
    },
    {
      "cmd_idx": 556,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 557,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling cfg-if v1.0.0\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling instant v0.1.13\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\n   Compiling fastrand v1.9.0\n   Compiling bitflags v1.3.2\n   Compiling event-listener v2.5.3\n   Compiling memchr v2.7.4\n   Compiling waker-fn v1.2.0\n   Compiling log v0.4.22\n   Compiling errno v0.3.9\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:47:14\n   |\n47 |         sys::with_description(*self, |desc| {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:58:14\n   |\n58 |         sys::with_description(*self, |desc| match desc {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find value `STRERROR_NAME` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:64:22\n   |\n64 |                 sys::STRERROR_NAME,\n   |                      ^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `errno` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:95:10\n   |\n95 |     sys::errno()\n   |          ^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `set_errno` in module `sys`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:100:10\n    |\n100 |     sys::set_errno(err)\n    |          ^^^^^^^^^ not found in `sys`\n\nSome errors have detailed explanations: E0425, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `errno` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n[2024-09-29T05:04:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:04:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n"
    },
    {
      "cmd_idx": 558,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 559,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 560,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\n   Compiling cfg-if v1.0.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 561,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling slab v0.4.9\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling polling v2.8.0\n   Compiling rustix v0.37.27\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 562,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling libc v0.2.159\n   Compiling slab v0.4.9\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling polling v2.8.0\n   Compiling rustix v0.37.27\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv6m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 572,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 572,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 572,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 572,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 572,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 572,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 573,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 573,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 573,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 573,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 573,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 573,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 574,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 574,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 574,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 574,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 574,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 574,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 575,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 575,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 575,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 575,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 575,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 575,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 576,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 576,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 576,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 576,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 576,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 576,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 577,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 577,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 577,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 577,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 577,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 577,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 578,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 578,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 578,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 578,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 578,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 578,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 579,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 579,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 579,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 579,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 579,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 579,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 580,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 580,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 580,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 580,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 580,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 580,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 619,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 620,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling cortex-m v0.7.7\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 621,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling semver-parser v0.7.0\n   Compiling proc-macro2 v1.0.86\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling unicode-ident v1.0.13\n   Compiling cfg-if v1.0.0\n   Compiling semver v0.9.0\n   Compiling heapless v0.8.0\n   Compiling rustc_version v0.2.3\n   Compiling hash32 v0.3.1\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling syn v1.0.109\n   Compiling litrs v0.4.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-task v0.3.30\n   Compiling autocfg v1.4.0\n   Compiling cortex-m v0.7.7\n   Compiling futures-util v0.3.30\n   Compiling document-features v0.2.10\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.37\n   Compiling az v1.2.1\n   Compiling embedded-io v0.6.1\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 622,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 623,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling cortex-m v0.7.7\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 624,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\n"
    },
    {
      "cmd_idx": 625,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embedded-storage-async v0.4.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 626,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling cortex-m v0.7.7\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 627,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded nrf51-pac v0.12.2\n  Downloaded nrf9160-pac v0.12.2\n  Downloaded nrf5340-app-pac v0.12.2\n  Downloaded nrf52840-pac v0.12.2\n  Downloaded nrf52833-pac v0.12.2\n  Downloaded nrf52832-pac v0.12.2\n  Downloaded nrf52820-pac v0.12.2\n  Downloaded nrf5340-net-pac v0.12.2\n  Downloaded nrf52811-pac v0.12.2\n  Downloaded nrf52810-pac v0.12.2\n  Downloaded nrf52805-pac v0.12.2\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 628,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 648,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 649,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 650,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 651,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 652,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 653,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 654,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 655,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 656,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 657,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 658,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling void v1.0.2\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cortex-m-rt v0.7.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling stable_deref_trait v1.2.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling volatile-register v0.2.2\n   Compiling embedded-io v0.6.1\n   Compiling bitfield v0.13.2\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rp-pac v6.0.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling atomic-polyfill v1.0.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling num_enum v0.5.11\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling arrayvec v0.7.6\n   Compiling pio v0.2.1\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-rp v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\nerror: statics with a custom `#[link_section]` must be a simple list of bytes on the wasm target with no extra levels of indirection such as references\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rp-pac-6.0.0/src/_vectors.rs:41:1\n   |\n41 | pub static __INTERRUPTS: [Vector; 32] = [\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `rp-pac` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 659,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling void v1.0.2\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling heapless v0.8.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling volatile-register v0.2.2\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io v0.6.1\n   Compiling bitfield v0.13.2\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-storage v0.3.1\n   Compiling atomic-polyfill v1.0.3\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling rp-pac v6.0.0\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-storage-async v0.4.1\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling arrayvec v0.7.6\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling pio v0.2.1\n   Compiling embassy-rp v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 660,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:10Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-29T05:07:11Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:24Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v1.0.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling vcell v0.1.3\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bitfield v0.13.2\n   Compiling embedded-io v0.6.1\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:19Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling fixed v1.28.0\n   Compiling rp-pac v6.0.0\n   Compiling atomic-polyfill v1.0.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embedded-storage-async v0.4.1\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:07:36Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling arrayvec v0.7.6\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling pio v0.2.1\n   Compiling embassy-rp v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 661,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 662,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 663,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 664,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 665,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 666,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 667,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 668,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 669,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 689,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling vcell v0.1.3\n   Compiling futures-util v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5556db2ab6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5556db2ab6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5556db2ab6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5556db2ab6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5556db2c99bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5556db2c99bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5556db2a943f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5556db2ab47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5556db2ab47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5556db2ac7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5556db2ac52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5556db2acca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5556db2acb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5556db2abb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5556db2ac8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5556db2c8be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5556db2900ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5556db28afbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5556db28a5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5556db28a631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5556db2a67dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5556db2a67dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5556db2a67dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5556db2a67dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5556db2a67dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5556db2a67dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5556db2a67dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5556db2a67dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5556db2a67dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5556db28a60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5556db2901ce - main\n    31:     0x7f52b1a29d90 - <unknown>\n    32:     0x7f52b1a29e40 - __libc_start_main\n    33:     0x5556db289f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 690,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling futures-util v0.3.30\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling document-features v0.2.10\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x561e563826a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x561e563826a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x561e563826a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x561e563826a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x561e563a09bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x561e563a09bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x561e5638043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x561e5638247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x561e5638247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x561e563837e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x561e5638352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x561e56383ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x561e56383b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x561e56382b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x561e563838b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x561e5639fbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x561e563670ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x561e56361fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x561e563615be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x561e56361631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x561e5637d7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x561e5637d7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x561e5637d7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x561e5637d7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x561e5637d7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x561e5637d7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x561e5637d7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x561e5637d7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x561e5637d7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x561e5636160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x561e563671ce - main\n    31:     0x7f97f0a29d90 - <unknown>\n    32:     0x7f97f0a29e40 - __libc_start_main\n    33:     0x561e56360f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 691,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5595e8b646a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5595e8b646a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5595e8b646a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5595e8b646a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5595e8b829bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5595e8b829bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5595e8b6243f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5595e8b6447e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5595e8b6447e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5595e8b657e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5595e8b6552d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5595e8b65ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5595e8b65b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5595e8b64b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5595e8b658b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5595e8b81be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5595e8b490ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5595e8b43fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5595e8b435be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5595e8b43631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5595e8b5f7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5595e8b5f7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5595e8b5f7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5595e8b5f7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5595e8b5f7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5595e8b5f7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5595e8b5f7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5595e8b5f7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5595e8b5f7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5595e8b4360a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5595e8b491ce - main\n    31:     0x7f17a8a29d90 - <unknown>\n    32:     0x7f17a8a29e40 - __libc_start_main\n    33:     0x5595e8b42f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 692,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n    Checking nb v1.1.0\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n    Checking nb v0.1.3\n   Compiling bare-metal v0.2.5\n    Checking void v1.0.2\n   Compiling quote v1.0.37\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n   Compiling vcell v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-util v0.3.30\n   Compiling volatile-register v0.2.2\n   Compiling autocfg v1.4.0\n    Checking embedded-io v0.6.1\n   Compiling litrs v0.4.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bitfield v0.13.2\n    Checking embedded-hal v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 693,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 694,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking hash32 v0.3.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 695,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5610b84fa6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5610b84fa6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5610b84fa6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5610b84fa6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5610b85189bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5610b85189bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5610b84f843f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5610b84fa47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5610b84fa47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5610b84fb7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5610b84fb52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5610b84fbca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5610b84fbb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5610b84fab69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5610b84fb8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5610b8517be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5610b84df0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5610b84d9fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5610b84d95be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5610b84d9631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5610b84f57dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5610b84f57dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5610b84f57dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5610b84f57dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5610b84f57dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5610b84f57dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5610b84f57dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5610b84f57dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5610b84f57dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5610b84d960a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5610b84df1ce - main\n    31:     0x7fd448829d90 - <unknown>\n    32:     0x7fd448829e40 - __libc_start_main\n    33:     0x5610b84d8f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 696,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling cortex-m-rt-macros v0.7.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking nb v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking embedded-hal v0.2.7\n    Checking futures-core v0.3.30\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking vcell v0.1.3\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 697,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling nb v1.1.0\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling bare-metal v0.2.5\n   Compiling byteorder v1.5.0\n   Compiling quote v1.0.37\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling vcell v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling volatile-register v0.2.2\n   Compiling embedded-hal-async v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bitfield v0.13.2\n   Compiling litrs v0.4.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55f73299e6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55f73299e6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55f73299e6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55f73299e6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55f7329bc9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55f7329bc9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55f73299c43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55f73299e47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55f73299e47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55f73299f7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55f73299f52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55f73299fca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55f73299fb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55f73299eb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55f73299f8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55f7329bbbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55f7329830ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55f73297dfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55f73297d5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55f73297d631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55f7329997dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55f7329997dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55f7329997dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55f7329997dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55f7329997dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55f7329997dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55f7329997dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55f7329997dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55f7329997dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55f73297d60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55f7329831ce - main\n    31:     0x7ff866029d90 - <unknown>\n    32:     0x7ff866029e40 - __libc_start_main\n    33:     0x55f73297cf45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 698,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-hal v0.2.7\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n    Checking futures-util v0.3.30\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking vcell v0.1.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking volatile-register v0.2.2\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 699,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55ae22d876a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55ae22d876a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55ae22d876a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55ae22d876a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55ae22da59bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55ae22da59bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55ae22d8543f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55ae22d8747e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55ae22d8747e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55ae22d887e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55ae22d8852d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55ae22d88ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55ae22d88b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55ae22d87b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55ae22d888b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55ae22da4be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55ae22d6c0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55ae22d66fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55ae22d665be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55ae22d66631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55ae22d827dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55ae22d827dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55ae22d827dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55ae22d827dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55ae22d827dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55ae22d827dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55ae22d827dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55ae22d827dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55ae22d827dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55ae22d6660a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55ae22d6c1ce - main\n    31:     0x7f84ae829d90 - <unknown>\n    32:     0x7f84ae829e40 - __libc_start_main\n    33:     0x55ae22d65f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 700,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking nb v0.1.3\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking vcell v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 701,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling volatile-register v0.2.2\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55d8bc1596a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55d8bc1596a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55d8bc1596a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55d8bc1596a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55d8bc1779bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55d8bc1779bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55d8bc15743f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55d8bc15947e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55d8bc15947e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55d8bc15a7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55d8bc15a52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55d8bc15aca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55d8bc15ab4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55d8bc159b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55d8bc15a8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55d8bc176be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55d8bc13e0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55d8bc138fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55d8bc1385be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55d8bc138631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55d8bc1547dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55d8bc1547dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55d8bc1547dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55d8bc1547dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55d8bc1547dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55d8bc1547dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55d8bc1547dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55d8bc1547dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55d8bc1547dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55d8bc13860a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55d8bc13e1ce - main\n    31:     0x7fbe10a29d90 - <unknown>\n    32:     0x7fbe10a29e40 - __libc_start_main\n    33:     0x55d8bc137f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 702,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking vcell v0.1.3\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 703,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5574503ee6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5574503ee6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5574503ee6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5574503ee6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55745040c9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55745040c9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5574503ec43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5574503ee47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5574503ee47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5574503ef7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5574503ef52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5574503efca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5574503efb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5574503eeb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5574503ef8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55745040bbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5574503d30ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5574503cdfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5574503cd5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5574503cd631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5574503e97dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5574503e97dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5574503e97dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5574503e97dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5574503e97dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5574503e97dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5574503e97dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5574503e97dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5574503e97dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5574503cd60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5574503d31ce - main\n    31:     0x7f3c6f629d90 - <unknown>\n    32:     0x7f3c6f629e40 - __libc_start_main\n    33:     0x5574503ccf45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 704,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking nb v0.1.3\n    Checking futures-core v0.3.30\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n    Checking futures-util v0.3.30\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 705,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x558c1d8296a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x558c1d8296a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x558c1d8296a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x558c1d8296a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x558c1d8479bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x558c1d8479bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x558c1d82743f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x558c1d82947e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x558c1d82947e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x558c1d82a7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x558c1d82a52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x558c1d82aca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x558c1d82ab4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x558c1d829b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x558c1d82a8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x558c1d846be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x558c1d80e0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x558c1d808fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x558c1d8085be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x558c1d808631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x558c1d8247dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x558c1d8247dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x558c1d8247dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x558c1d8247dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x558c1d8247dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x558c1d8247dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x558c1d8247dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x558c1d8247dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x558c1d8247dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x558c1d80860a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x558c1d80e1ce - main\n    31:     0x7f9fb4629d90 - <unknown>\n    32:     0x7f9fb4629e40 - __libc_start_main\n    33:     0x558c1d807f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 706,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n    Checking futures-util v0.3.30\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 707,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/embassy-rs/stm32-data-generated`\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n    Checking nb v1.1.0\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n    Checking nb v0.1.3\n   Compiling bare-metal v0.2.5\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling quote v1.0.37\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n   Compiling vcell v0.1.3\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling volatile-register v0.2.2\n    Checking futures-util v0.3.30\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bitfield v0.13.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling litrs v0.4.1\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling autocfg v1.4.0\n    Checking cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling document-features v0.2.10\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 708,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 709,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 710,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 711,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 712,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 713,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 714,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 715,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 716,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 736,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling document-features v0.2.10\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55a54cae26a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55a54cae26a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55a54cae26a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55a54cae26a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55a54cb009bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55a54cb009bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55a54cae043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55a54cae247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55a54cae247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55a54cae37e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55a54cae352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55a54cae3ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55a54cae3b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55a54cae2b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55a54cae38b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55a54caffbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55a54cac70ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55a54cac1fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55a54cac15be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55a54cac1631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55a54cadd7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55a54cadd7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55a54cadd7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55a54cadd7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55a54cadd7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55a54cadd7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55a54cadd7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55a54cadd7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55a54cadd7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55a54cac160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55a54cac71ce - main\n    31:     0x7f447e229d90 - <unknown>\n    32:     0x7f447e229e40 - __libc_start_main\n    33:     0x55a54cac0f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 737,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling nb v0.1.3\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling byteorder v1.5.0\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55aa1a6326a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55aa1a6326a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55aa1a6326a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55aa1a6326a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55aa1a6509bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55aa1a6509bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55aa1a63043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55aa1a63247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55aa1a63247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55aa1a6337e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55aa1a63352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55aa1a633ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55aa1a633b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55aa1a632b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55aa1a6338b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55aa1a64fbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55aa1a6170ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55aa1a611fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55aa1a6115be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55aa1a611631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55aa1a62d7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55aa1a62d7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55aa1a62d7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55aa1a62d7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55aa1a62d7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55aa1a62d7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55aa1a62d7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55aa1a62d7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55aa1a62d7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55aa1a61160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55aa1a6171ce - main\n    31:     0x7f72b6229d90 - <unknown>\n    32:     0x7f72b6229e40 - __libc_start_main\n    33:     0x55aa1a610f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 738,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling bitfield v0.13.2\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x558166f636a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x558166f636a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x558166f636a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x558166f636a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x558166f819bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x558166f819bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x558166f6143f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x558166f6347e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x558166f6347e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x558166f647e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x558166f6452d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x558166f64ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x558166f64b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x558166f63b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x558166f648b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x558166f80be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x558166f480ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x558166f42fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x558166f425be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x558166f42631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x558166f5e7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x558166f5e7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x558166f5e7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x558166f5e7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x558166f5e7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x558166f5e7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x558166f5e7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x558166f5e7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x558166f5e7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x558166f4260a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x558166f481ce - main\n    31:     0x7fdc69c29d90 - <unknown>\n    32:     0x7fdc69c29e40 - __libc_start_main\n    33:     0x558166f41f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 739,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling cortex-m v0.7.7\n   Compiling semver-parser v0.7.0\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling proc-macro2 v1.0.86\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n    Checking nb v0.1.3\n   Compiling rustc_version v0.2.3\n    Checking void v1.0.2\n   Compiling syn v1.0.109\n    Checking embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling typenum v1.17.0\n   Compiling quote v1.0.37\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n   Compiling version_check v0.9.5\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n   Compiling generic-array v0.14.7\n    Checking bitfield v0.13.2\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling autocfg v1.4.0\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-io v0.6.1\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling document-features v0.2.10\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 740,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking bitfield v0.13.2\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 741,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking bitfield v0.13.2\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 742,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling bitfield v0.13.2\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embedded-hal-async v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55a86518e6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55a86518e6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55a86518e6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55a86518e6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55a8651ac9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55a8651ac9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55a86518c43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55a86518e47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55a86518e47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55a86518f7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55a86518f52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55a86518fca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55a86518fb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55a86518eb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55a86518f8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55a8651abbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55a8651730ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55a86516dfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55a86516d5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55a86516d631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55a8651897dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55a8651897dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55a8651897dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55a8651897dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55a8651897dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55a8651897dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55a8651897dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55a8651897dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55a8651897dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55a86516d60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55a8651731ce - main\n    31:     0x7f2340029d90 - <unknown>\n    32:     0x7f2340029e40 - __libc_start_main\n    33:     0x55a86516cf45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 743,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/embassy-rs/stm32-data-generated`\n Downloading crates ...\n  Downloaded aligned v0.4.2\n  Downloaded as-slice v0.1.5\n  Downloaded generic-array v0.13.3\n  Downloaded aligned v0.3.5\n  Downloaded cortex-m v0.6.7\n  Downloaded stm32-device-signature v0.3.3\n  Downloaded generic-array v0.12.4\n  Downloaded as-slice v0.2.1\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n   Compiling proc-macro2 v1.0.86\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n    Checking nb v0.1.3\n   Compiling rustc_version v0.2.3\n   Compiling syn v1.0.109\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling typenum v1.17.0\n   Compiling quote v1.0.37\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling version_check v0.9.5\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking bitfield v0.13.2\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling autocfg v1.4.0\n    Checking cfg-if v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 744,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55a9a25826a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55a9a25826a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55a9a25826a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55a9a25826a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55a9a25a09bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55a9a25a09bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55a9a258043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55a9a258247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55a9a258247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55a9a25837e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55a9a258352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55a9a2583ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55a9a2583b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55a9a2582b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55a9a25838b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55a9a259fbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55a9a25670ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55a9a2561fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55a9a25615be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55a9a2561631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55a9a257d7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55a9a257d7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55a9a257d7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55a9a257d7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55a9a257d7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55a9a257d7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55a9a257d7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55a9a257d7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55a9a257d7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55a9a256160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55a9a25671ce - main\n    31:     0x7fdf16629d90 - <unknown>\n    32:     0x7fdf16629e40 - __libc_start_main\n    33:     0x55a9a2560f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 745,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling bare-metal v0.2.5\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking byteorder v1.5.0\n    Checking volatile-register v0.2.2\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking bitfield v0.13.2\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling document-features v0.2.10\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 746,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling bitfield v0.13.2\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embedded-hal-async v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5579899606a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5579899606a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5579899606a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5579899606a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55798997e9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55798997e9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55798995e43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55798996047e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55798996047e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5579899617e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55798996152d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x557989961ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x557989961b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x557989960b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5579899618b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55798997dbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5579899450ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55798993ffbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55798993f5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55798993f631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55798995b7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55798995b7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55798995b7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55798995b7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55798995b7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55798995b7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55798995b7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55798995b7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55798995b7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55798993f60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5579899451ce - main\n    31:     0x7fd03b829d90 - <unknown>\n    32:     0x7fd03b829e40 - __libc_start_main\n    33:     0x55798993ef45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 747,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking bitfield v0.13.2\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 748,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling nb v1.1.0\n   Compiling proc-macro2 v1.0.86\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustc_version v0.2.3\n   Compiling nb v0.1.3\n   Compiling syn v1.0.109\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling typenum v1.17.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling quote v1.0.37\n   Compiling version_check v0.9.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling generic-array v0.14.7\n   Compiling pin-project-lite v0.2.14\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling autocfg v1.4.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55f2afe986a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55f2afe986a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55f2afe986a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55f2afe986a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55f2afeb69bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55f2afeb69bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55f2afe9643f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55f2afe9847e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55f2afe9847e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55f2afe997e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55f2afe9952d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55f2afe99ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55f2afe99b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55f2afe98b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55f2afe998b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55f2afeb5be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55f2afe7d0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55f2afe77fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55f2afe775be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55f2afe77631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55f2afe937dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55f2afe937dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55f2afe937dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55f2afe937dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55f2afe937dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55f2afe937dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55f2afe937dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55f2afe937dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55f2afe937dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55f2afe7760a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55f2afe7d1ce - main\n    31:     0x7f92eba29d90 - <unknown>\n    32:     0x7f92eba29e40 - __libc_start_main\n    33:     0x55f2afe76f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 749,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking volatile-register v0.2.2\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking bitfield v0.13.2\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 750,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.30\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5634429636a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5634429636a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5634429636a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5634429636a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5634429819bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5634429819bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x56344296143f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x56344296347e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x56344296347e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5634429647e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x56344296452d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x563442964ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x563442964b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x563442963b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5634429648b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x563442980be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5634429480ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x563442942fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5634429425be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x563442942631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x56344295e7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x56344295e7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x56344295e7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x56344295e7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x56344295e7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x56344295e7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x56344295e7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x56344295e7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x56344295e7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x56344294260a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5634429481ce - main\n    31:     0x7f6ddb429d90 - <unknown>\n    32:     0x7f6ddb429e40 - __libc_start_main\n    33:     0x563442941f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 751,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking hash32 v0.3.1\n    Checking bitfield v0.13.2\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 752,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.30\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x556f6872c6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x556f6872c6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x556f6872c6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x556f6872c6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x556f6874a9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x556f6874a9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x556f6872a43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x556f6872c47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x556f6872c47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x556f6872d7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x556f6872d52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x556f6872dca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x556f6872db4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x556f6872cb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x556f6872d8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x556f68749be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x556f687110ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x556f6870bfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x556f6870b5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x556f6870b631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x556f687277dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x556f687277dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x556f687277dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x556f687277dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x556f687277dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x556f687277dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x556f687277dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x556f687277dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x556f687277dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x556f6870b60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x556f687111ce - main\n    31:     0x7efd6b629d90 - <unknown>\n    32:     0x7efd6b629e40 - __libc_start_main\n    33:     0x556f6870af45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 753,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n    Checking pin-project-lite v0.2.14\n    Checking bitfield v0.13.2\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 754,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n    Checking bitfield v0.13.2\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 764,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 764,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 765,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 765,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 766,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 766,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 767,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 767,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 768,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 769,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 769,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 770,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 771,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 772,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 772,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 792,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 792,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 792,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 793,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 793,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 793,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 794,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 794,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 794,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 795,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 795,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 795,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 796,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 796,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 796,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 797,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 797,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 797,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 798,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 798,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 798,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 799,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 799,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 799,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 800,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 800,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 800,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to multiply with overflow\n  --> src/duration.rs:37:9\n   |\n37 |         self.ticks * (1_000_000 / GCD_1M) / (TICK_HZ / GCD_1M)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to divide by zero\n  --> src/duration.rs:37:9\n   |\n37 |         self.ticks * (1_000_000 / GCD_1M) / (TICK_HZ / GCD_1M)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to divide by zero\n  --> src/duration.rs:37:22\n   |\n37 |         self.ticks * (1_000_000 / GCD_1M) / (TICK_HZ / GCD_1M)\n   |                      ^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to multiply with overflow\n  --> src/duration.rs:47:27\n   |\n47 |         Duration { ticks: secs * TICK_HZ }\n   |                           ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to multiply with overflow\n  --> src/duration.rs:53:29\n   |\n53 |             ticks: div_ceil(millis * (TICK_HZ / GCD_1K), 1000 / GCD_1K),\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to divide by zero\n  --> src/duration.rs:53:38\n   |\n53 |             ticks: div_ceil(millis * (TICK_HZ / GCD_1K), 1000 / GCD_1K),\n   |                                      ^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to multiply with overflow\n  --> src/duration.rs:61:29\n   |\n61 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1M), 1_000_000 / GCD_1M),\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to divide by zero\n  --> src/duration.rs:61:38\n   |\n61 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1M), 1_000_000 / GCD_1M),\n   |                                      ^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to multiply with overflow\n  --> src/duration.rs:69:29\n   |\n69 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1G), 1_000_000_000 / GCD_1G),\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/duration.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to divide by zero\n  --> src/duration.rs:69:38\n   |\n69 |             ticks: div_ceil(micros * (TICK_HZ / GCD_1G), 1_000_000_000 / GCD_1G),\n   |                                      ^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 820,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 820,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 820,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 821,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 821,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 821,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 822,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 822,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 822,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 823,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 823,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 823,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 824,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 824,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 824,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 825,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 825,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 825,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 826,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 826,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 826,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 827,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 827,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 827,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 828,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 828,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 828,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 839,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 840,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 841,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 842,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 843,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 844,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 845,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 846,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 847,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n   Compiling litrs v0.4.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling document-features v0.2.10\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 885,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 885,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 885,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 885,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 885,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 886,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 886,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 886,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 886,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 886,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 887,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 887,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 887,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 887,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 887,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 888,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 888,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 888,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 888,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 888,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 889,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 889,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 889,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 889,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 889,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 890,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 890,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 890,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 890,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 890,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 891,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 891,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 891,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 891,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 891,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 892,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 892,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 892,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 892,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 892,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 893,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 893,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 893,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 893,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 893,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 894,
      "file": "src/msos.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n   --> src/msos.rs:523:67\n    |\n523 |                 core::mem::size_of::<u16>() * (val.iter().map(|x| x.encode_utf16().count() + 1).sum::<usize>() + 1)\n    |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 894,
      "file": "src/msos.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n   --> src/msos.rs:538:21\n    |\n538 |                     pos += write_utf16(s, &mut buf[pos..]);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 895,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 896,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 897,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 898,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 899,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 900,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 901,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 902,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 903,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:11:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:11:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 913,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 914,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 915,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 916,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 917,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 918,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 919,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 920,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 921,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 922,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 932,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 933,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 934,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling byteorder v1.5.0\n   Compiling pin-utils v0.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 935,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Mirai\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n   Compiling version_check v0.9.5\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: embassy-sync@0.6.0: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n    Checking embedded-hal v1.0.0\n   Compiling document-features v0.2.10\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking digest v0.10.7\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 936,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 937,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 938,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling byteorder v1.5.0\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 939,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 940,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling futures-core v0.3.30\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 941,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 942,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 943,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embedded-storage-async v0.4.1\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 944,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling typenum v1.17.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling version_check v0.9.5\n   Compiling embedded-io-async v0.6.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling document-features v0.2.10\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 945,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 946,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 947,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n   Compiling version_check v0.9.5\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling generic-array v0.14.7\n    Checking futures-util v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking digest v0.10.7\n   Compiling document-features v0.2.10\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 948,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling embedded-io v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 949,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n    Checking critical-section v1.1.3\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embedded-storage-async v0.4.1\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 950,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 988,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 988,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 989,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 989,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 990,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 990,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 991,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 991,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 992,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 992,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 993,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 993,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 994,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 994,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:14:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:14:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 999,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:13:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:50Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1000,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:13:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1001,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:13:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1002,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:13:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1003,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:13:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1004,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:14:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:14:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1005,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-29T05:14:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:14:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1006,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-29T05:13:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-29T05:13:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1016,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1017,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1018,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1019,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1020,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1021,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1022,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1023,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1035,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1036,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1037,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1038,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-util v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1039,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-io v0.6.1\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1040,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1041,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1042,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1043,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embassy-sync v0.6.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/repos/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/dns.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/dns.rs (original lines from 1 to 1)\n+\n+\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 15 to 15)\n-mod net;\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 17 to 17)\n+mod net;\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 20 to 20)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 24 to 24)\n-\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 26 to 26)\n-\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 167 to 167)\n-    if tcp_packet.data_len > 10 && tcp_packet.data[..4] == [0x47,0x45,0x54, 0x20] {\n+    if tcp_packet.data_len > 10 && tcp_packet.data[..4] == [0x47, 0x45, 0x54, 0x20] {\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 180 to 180)\n-            net.send(&reply_packet.build_data()).expect(\"can't send reply packet\");\n+            net.send(&reply_packet.build_data())\n+                .expect(\"can't send reply packet\");\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 187 to 187)\n-        net.send(&reply_packet.build_data()).expect(\"can't send reply packet\");\n+        net.send(&reply_packet.build_data())\n+            .expect(\"can't send reply packet\");\n"
    },
    {
      "cmd_idx": 1044,
      "file": "src/virtio_impls.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/lose-net-stack/example/src/virtio_impls.rs (original lines from 51 to 51)\n+\n"
    },
    {
      "cmd_idx": 1045,
      "file": "/home/runner/check/repos-default/Byte-OS/lose-net-stack/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused `#[macro_use]` import\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/lib.rs:13:1\n   |\n13 | #[macro_use]\n   | ^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "/home/runner/check/repos-default/Byte-OS/lose-net-stack/src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "/home/runner/check/repos-default/Byte-OS/lose-net-stack/src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `println!(\"\")`\n   --> src/net.rs:146:9\n    |\n146 |         println!(\"\");\n    |         ^^^^^^^^^^^^ help: replace it with: `println!()`\n    |\n    = note: `#[warn(clippy::println_empty_string)]` on by default\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#println_empty_string\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n  --> src/net.rs:58:45\n   |\n58 |                     String::from_utf8_lossy(udp_packet.data.as_ref())\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = note: `#[warn(clippy::useless_asref)]` on by default\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n  --> src/net.rs:60:25\n   |\n60 |                 hexdump(udp_packet.data.as_ref());\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n  --> src/net.rs:62:44\n   |\n62 |                 if String::from_utf8_lossy(udp_packet.data.as_ref()) == \"this is a ping!\" {\n   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/net.rs:76:30\n   |\n76 |                     net.send(&reply_data).expect(\"can't send to net\");\n   |                              ^^^^^^^^^^^ help: change this to: `reply_data`\n   |\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n   --> src/net.rs:100:49\n    |\n100 |                         String::from_utf8_lossy(tcp_packet.data.as_ref())\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `tcp_packet.data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n   --> src/net.rs:103:29\n    |\n103 |                     hexdump(tcp_packet.data.as_ref());\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `tcp_packet.data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1045,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/net.rs:136:20\n    |\n136 |                 if c >= 0x20 && c <= 0x7e {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n    |\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n\n"
    },
    {
      "cmd_idx": 1046,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:31:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:31:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1047,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2022-08-08, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/Byte-OS/lose-net-stack/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\nwarning: `/home/runner/check/repos-default/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/repos-default/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n    Updating crates.io index\n Downloading crates ...\n  Downloaded spinning_top v0.2.4\n  Downloaded spin v0.5.2\n  Downloaded proc-macro2 v1.0.51\n  Downloaded unicode-ident v1.0.6\n  Downloaded zerocopy v0.6.1\n  Downloaded syn v1.0.109\n  Downloaded zerocopy-derive v0.3.2\n  Downloaded virtio-drivers v0.3.0\n  Downloaded spin v0.9.4\n  Downloaded scopeguard v1.1.0\n  Downloaded quote v1.0.23\n  Downloaded log v0.4.17\n  Downloaded linked_list_allocator v0.9.1\n  Downloaded lazy_static v1.4.0\n  Downloaded byteorder v1.4.3\n  Downloaded bitflags v1.3.2\n  Downloaded autocfg v1.1.0\n  Downloaded lock_api v0.4.9\n   Compiling proc-macro2 v1.0.51\n   Compiling autocfg v1.1.0\n   Compiling quote v1.0.23\n   Compiling unicode-ident v1.0.6\n   Compiling syn v1.0.109\n   Compiling log v0.4.17\n   Compiling scopeguard v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.4.3\nerror[E0635]: unknown feature `proc_macro_span_shrink`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.51/src/lib.rs:92:30\n   |\n92 |     feature(proc_macro_span, proc_macro_span_shrink)\n   |                              ^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling lock_api v0.4.9\n[2024-09-28T15:31:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:31:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling spin v0.5.2\n   Compiling lose-net-stack v0.1.0 (/home/runner/check/repos-default/Byte-OS/lose-net-stack)\nwarning: unused `#[macro_use]` import\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/lib.rs:13:1\n   |\n13 | #[macro_use]\n   | ^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `proc-macro2` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nwarning: variable does not need to be mutable\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\nwarning: variable does not need to be mutable\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\nwarning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\nwarning: constant `IP_PROTOCAL_IGMP` is never used\n  --> /home/runner/check/repos-default/Byte-OS/lose-net-stack/src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\nwarning: `lose-net-stack` (lib) generated 5 warnings (run `cargo fix --lib -p lose-net-stack` to apply 2 suggestions)\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 1 to 1)\n-use core::fmt::{Display, Debug};\n+use core::fmt::{Debug, Display};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 3 to 3)\n-use alloc::{string::String, format};\n+use alloc::{format, string::String};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 18 to 18)\n-        format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n+        format!(\n+            \"{}.{}.{}.{}\",\n+            (self.0 >> 24) & 0xff,\n+            (self.0 >> 16) & 0xff,\n+            (self.0 >> 8) & 0xff,\n+            self.0 & 0xff\n+        )\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 50 to 50)\n-        format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n+        format!(\n+            \"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\",\n+            self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5]\n+        )\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 62 to 62)\n-        f.debug_tuple(\"MacAddress\").field(&self.to_string()).finish()\n+        f.debug_tuple(\"MacAddress\")\n+            .field(&self.to_string())\n+            .finish()\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 65 to 65)\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 5 to 5)\n-pub(crate) const ETH_RTYPE_IP: u16 =  0x0800; // Internet protocol\n+pub(crate) const ETH_RTYPE_IP: u16 = 0x0800; // Internet protocol\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 24 to 24)\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 3 to 3)\n-mod net;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 6 to 6)\n+mod net;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 20 to 20)\n-pub use net::TcpFlags;\n+use consts::*;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 24 to 24)\n+pub use net::TcpFlags;\n+use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 27 to 27)\n-use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 32 to 32)\n-use consts::*;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 37 to 38)\n-    pub ip:  IPv4,\n-    pub mac: MacAddress\n+    pub ip: IPv4,\n+    pub mac: MacAddress,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 43 to 46)\n-        Self {\n-            ip,\n-            mac\n-        }\n+        Self { ip, mac }\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 49 to 51)\n-    fn analysis_udp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let udp_header = unsafe{data_ptr_iter.next::<UDP>()}.unwrap();\n-        let data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_udp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let udp_header = unsafe { data_ptr_iter.next::<UDP>() }.unwrap();\n+        let data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 54 to 62)\n-        Packet::UDP(packets::udp::UDPPacket { \n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: udp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: udp_header.dport.to_be(), \n-            data_len, \n-            data: &data[..data_len]\n+        Packet::UDP(packets::udp::UDPPacket {\n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: udp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: udp_header.dport.to_be(),\n+            data_len,\n+            data: &data[..data_len],\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 66 to 67)\n-    fn analysis_tcp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let tcp_header = unsafe{data_ptr_iter.next::<TCP>()}.unwrap();\n+    fn analysis_tcp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let tcp_header = unsafe { data_ptr_iter.next::<TCP>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 69 to 69)\n-        let data = &unsafe{data_ptr_iter.get_curr_arr()}[offset..];\n+        let data = &unsafe { data_ptr_iter.get_curr_arr() }[offset..];\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 73 to 78)\n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: tcp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: tcp_header.dport.to_be(), \n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: tcp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: tcp_header.dport.to_be(),\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 89 to 90)\n-    fn analysis_icmp(&self, data_ptr_iter: UnsafeRefIter, _ip_header: &Ip, _eth_header: &Eth) -> Packet {\n-        let _data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_icmp(\n+        &self,\n+        data_ptr_iter: UnsafeRefIter,\n+        _ip_header: &Ip,\n+        _eth_header: &Eth,\n+    ) -> Packet {\n+        let _data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 96 to 96)\n-        let ip_header = unsafe{data_ptr_iter.next::<Ip>()}.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next::<Ip>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 99 to 99)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 103 to 103)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 115 to 115)\n-        let arp_header = unsafe{data_ptr_iter.next::<Arp>()}.unwrap();\n+        let arp_header = unsafe { data_ptr_iter.next::<Arp>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 122 to 126)\n-                IPv4::from_u32(arp_header.spa.to_be()), \n-                MacAddress::new(arp_header.sha), \n-                IPv4::from_u32(arp_header.tpa.to_be()), \n-                MacAddress::new(arp_header.tha), \n-                rtype\n+                IPv4::from_u32(arp_header.spa.to_be()),\n+                MacAddress::new(arp_header.sha),\n+                IPv4::from_u32(arp_header.tpa.to_be()),\n+                MacAddress::new(arp_header.tha),\n+                rtype,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 133 to 133)\n-        let eth_header = unsafe{data_ptr_iter.next::<Eth>()}.unwrap();\n+        let eth_header = unsafe { data_ptr_iter.next::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 137 to 137)\n-            _ => Packet::None // Unsupported type\n+            _ => Packet::None, // Unsupported type\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 9 to 9)\n-    pub(crate) rtype: u16      // packet type, arp or ip\n+    pub(crate) rtype: u16,     // packet type, arp or ip\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 15 to 23)\n-    pub(crate) httype: u16, // Hardware type\n-    pub(crate) pttype: u16, // Protocol type, For IPv4, this has the value 0x0800.\n-    pub(crate) hlen: u8,    // Hardware length: Ethernet address length is 6.\n-    pub(crate) plen: u8,    // Protocol length: IPv4 address length is 4.\n-    pub(crate) op: u16,     // Operation: 1 for request, 2 for reply.\n-    pub(crate) sha: [u8; 6],// Sender hardware address\n-    pub(crate) spa: u32,    // Sender protocol address\n-    pub(crate) tha: [u8; 6],// Target hardware address\n-    pub(crate) tpa: u32     // Target protocol address\n+    pub(crate) httype: u16,  // Hardware type\n+    pub(crate) pttype: u16,  // Protocol type, For IPv4, this has the value 0x0800.\n+    pub(crate) hlen: u8,     // Hardware length: Ethernet address length is 6.\n+    pub(crate) plen: u8,     // Protocol length: IPv4 address length is 4.\n+    pub(crate) op: u16,      // Operation: 1 for request, 2 for reply.\n+    pub(crate) sha: [u8; 6], // Sender hardware address\n+    pub(crate) spa: u32,     // Sender protocol address\n+    pub(crate) tha: [u8; 6], // Target hardware address\n+    pub(crate) tpa: u32,     // Target protocol address\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 30 to 39)\n-    pub(crate) vhl: u8,    // version << 4 | header length >> 2\n-    pub(crate) tos: u8,    // type of service\n-    pub(crate) len: u16,   // total length, packet length\n-    pub(crate) id: u16,    // identification, can combine all packets\n-    pub(crate) off: u16,   // fragment offset field, packet from\n-    pub(crate) ttl: u8,    // time to live\n-    pub(crate) pro: u8,    // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n-    pub(crate) sum: u16,   // checksum,\n-    pub(crate) src: u32,   // souce ip\n-    pub(crate) dst: u32    // destination ip\n+    pub(crate) vhl: u8,  // version << 4 | header length >> 2\n+    pub(crate) tos: u8,  // type of service\n+    pub(crate) len: u16, // total length, packet length\n+    pub(crate) id: u16,  // identification, can combine all packets\n+    pub(crate) off: u16, // fragment offset field, packet from\n+    pub(crate) ttl: u8,  // time to live\n+    pub(crate) pro: u8,  // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n+    pub(crate) sum: u16, // checksum,\n+    pub(crate) src: u32, // souce ip\n+    pub(crate) dst: u32, // destination ip\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 49 to 49)\n-    pub(crate) sum: u16    // checksum\n+    pub(crate) sum: u16,   // checksum\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 69 to 73)\n-    pub(crate) sport: u16, // souce port\n-    pub(crate) dport: u16, // destination port\n-    pub(crate) seq: u32, // sequence number\n-    pub(crate) ack: u32, // acknowledgement number\n-    pub(crate) offset: u8, // offset, first 4 bytes are tcp header length\n+    pub(crate) sport: u16,      // souce port\n+    pub(crate) dport: u16,      // destination port\n+    pub(crate) seq: u32,        // sequence number\n+    pub(crate) ack: u32,        // acknowledgement number\n+    pub(crate) offset: u8,      // offset, first 4 bytes are tcp header length\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 75 to 77)\n-    pub(crate) win: u16,    // window size\n-    pub(crate) sum: u16,    // checksum\n-    pub(crate) urg: u16,    // urgent pointer\n+    pub(crate) win: u16,        // window size\n+    pub(crate) sum: u16,        // checksum\n+    pub(crate) urg: u16,        // urgent pointer\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 93 to 93)\n-pub(crate) const IP_LEN:  usize = size_of::<Ip>();\n+pub(crate) const IP_LEN: usize = size_of::<Ip>();\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 102 to 102)\n-00 00 00 00 00 00 0a 00 02 0f                         ..........                  \n+00 00 00 00 00 00 0a 00 02 0f                         ..........\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 108 to 108)\n-52 55 0a 00 02 02 0a 00 02 02                         RU........                  \n+52 55 0a 00 02 02 0a 00 02 02                         RU........\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 117 to 117)\n-73 20 61 20 70 69 6e 67 21                            s a ping!                     \n+73 20 61 20 70 69 6e 67 21                            s a ping!\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 121 to 121)\n-74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!   \n+74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 125 to 125)\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 3 to 3)\n+use crate::consts::{\n+    ARP_ETHADDR_LEN, ARP_HRD_ETHER, ARP_OP_REPLY, ARP_OP_REQUEST, BROADCAST_MAC, ETH_RTYPE_ARP,\n+    ETH_RTYPE_IP,\n+};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 5 to 7)\n-use crate::consts::{ARP_OP_REQUEST, ARP_OP_REPLY, ARP_HRD_ETHER, ETH_RTYPE_IP, ARP_ETHADDR_LEN, ETH_RTYPE_ARP, BROADCAST_MAC};\n-use crate::MacAddress;\n-use crate::IPv4;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 9 to 9)\n+use crate::IPv4;\n+use crate::MacAddress;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 14 to 14)\n-    Unsupported\n+    Unsupported,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 22 to 22)\n-            _ => ArpType::Unsupported\n+            _ => ArpType::Unsupported,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 41 to 41)\n-    pub rtype: ArpType\n+    pub rtype: ArpType,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 45 to 46)\n-    pub fn new(sender_ip: IPv4, sender_mac: MacAddress, target_ip: IPv4, target_mac: MacAddress, rtype: ArpType) -> Self {\n-        ArpPacket { sender_ip, sender_mac, target_ip, target_mac, rtype }\n+    pub fn new(\n+        sender_ip: IPv4,\n+        sender_mac: MacAddress,\n+        target_ip: IPv4,\n+        target_mac: MacAddress,\n+        rtype: ArpType,\n+    ) -> Self {\n+        ArpPacket {\n+            sender_ip,\n+            sender_mac,\n+            target_ip,\n+            target_mac,\n+            rtype,\n+        }\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 55 to 55)\n-        let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let mut eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 64 to 65)\n-        arp_header.hlen = ARP_ETHADDR_LEN as u8;    // mac address len\n-        arp_header.plen = 4;    // ipv4\n+        arp_header.hlen = ARP_ETHADDR_LEN as u8; // mac address len\n+        arp_header.plen = 4; // ipv4\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 67 to 67)\n-        \n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 70 to 70)\n-    \n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 76 to 76)\n-    pub fn reply_packet(&self, local_ip: IPv4, local_mac: MacAddress) -> Result<Self, NetStackErrors> {\n+    pub fn reply_packet(\n+        &self,\n+        local_ip: IPv4,\n+        local_mac: MacAddress,\n+    ) -> Result<Self, NetStackErrors> {\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 80 to 84)\n-                    local_ip, \n-                    local_mac, \n-                    self.sender_ip, \n-                    self.sender_mac, \n-                    ArpType::Reply\n+                    local_ip,\n+                    local_mac,\n+                    self.sender_ip,\n+                    self.sender_mac,\n+                    ArpType::Reply,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 89 to 89)\n-            _ => Err(NetStackErrors::NotRequiredReplyArp)\n+            _ => Err(NetStackErrors::NotRequiredReplyArp),\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 93 to 93)\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 1 to 1)\n-pub mod udp;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 4 to 4)\n+pub mod udp;\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 4 to 4)\n-use crate::utils::{UnsafeRefIter, check_sum};\n+use crate::net::{Eth, Ip, TcpFlags, ETH_LEN, IP_LEN, TCP, TCP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 7 to 7)\n-use crate::net::{TCP_LEN, IP_LEN, ETH_LEN, Eth, Ip, TCP, TcpFlags};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 19 to 24)\n-    pub seq: u32,           // sequence number\n-    pub ack: u32,           // acknowledgement number\n-    pub flags: TcpFlags,    // flags, last 6 are flags(U, A, P, R, S, F)\n-    pub win: u16,           // window size\n-    pub urg: u16,           // urgent pointer\n-    pub data: &'a [u8]      // data buffer\n+    pub seq: u32,        // sequence number\n+    pub ack: u32,        // acknowledgement number\n+    pub flags: TcpFlags, // flags, last 6 are flags(U, A, P, R, S, F)\n+    pub win: u16,        // window size\n+    pub urg: u16,        // urgent pointer\n+    pub data: &'a [u8],  // data buffer\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 27 to 27)\n-impl<'a> TCPPacket<'a>  {\n+impl<'a> TCPPacket<'a> {\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 33 to 36)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let tcp_header = unsafe{data_ptr_iter.next_mut::<TCP>()}.unwrap();\n-        let tcp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let tcp_header = unsafe { data_ptr_iter.next_mut::<TCP>() }.unwrap();\n+        let tcp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 38 to 38)\n-\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 42 to 42)\n-        \n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 48 to 48)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 64 to 64)\n-        \n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 69 to 69)\n-        tcp_header.sum = check_sum(tcp_header as *mut _ as *mut u8, (TCP_LEN + self.data_len) as _, sum); // tcp checksum. zero means no checksum is provided.\n+        tcp_header.sum = check_sum(\n+            tcp_header as *mut _ as *mut u8,\n+            (TCP_LEN + self.data_len) as _,\n+            sum,\n+        ); // tcp checksum. zero means no checksum is provided.\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 74 to 74)\n-    pub fn reply(&self, data: &'a[u8]) -> Self {\n+    pub fn reply(&self, data: &'a [u8]) -> Self {\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 90 to 90)\n-        \n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 108 to 108)\n-            data: TCP_EMPTY_DATA\n+            data: TCP_EMPTY_DATA,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 112 to 112)\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 3 to 4)\n-use crate::consts::{ETH_RTYPE_IP, IP_PROTOCAL_UDP, IP_HEADER_VHL};\n-use crate::net::{UDP, Eth, Ip, UDP_LEN, IP_LEN, ETH_LEN};\n+use crate::consts::{ETH_RTYPE_IP, IP_HEADER_VHL, IP_PROTOCAL_UDP};\n+use crate::net::{Eth, Ip, ETH_LEN, IP_LEN, UDP, UDP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 7 to 7)\n-use crate::utils::{UnsafeRefIter, check_sum};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 18 to 18)\n-    pub data: &'a [u8]\n+    pub data: &'a [u8],\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 22 to 24)\n-    pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n-        dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n-        data_len: usize, data: &'a [u8]) -> Self {\n+    pub fn new(\n+        source_ip: IPv4,\n+        source_mac: MacAddress,\n+        source_port: u16,\n+        dest_ip: IPv4,\n+        dest_mac: MacAddress,\n+        dest_port: u16,\n+        data_len: usize,\n+        data: &'a [u8],\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 33 to 33)\n-            data\n+            data,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 42 to 45)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let udp_header = unsafe{data_ptr_iter.next_mut::<UDP>()}.unwrap();\n-        let udp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let udp_header = unsafe { data_ptr_iter.next_mut::<UDP>() }.unwrap();\n+        let udp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 47 to 47)\n-\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 51 to 51)\n-        \n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 57 to 57)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 65 to 66)\n-        udp_header.sum   = 0; // udp checksum   zero means no checksum is provided.\n-        udp_header.ulen  = ((self.data_len + UDP_LEN) as u16).to_be();\n+        udp_header.sum = 0; // udp checksum   zero means no checksum is provided.\n+        udp_header.ulen = ((self.data_len + UDP_LEN) as u16).to_be();\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 75 to 82)\n-            self.dest_ip, \n-            self.dest_mac, \n-            self.dest_port, \n-            self.source_ip, \n-            self.source_mac, \n-            self.source_port, \n-            data.len(), \n-            data\n+            self.dest_ip,\n+            self.dest_mac,\n+            self.dest_port,\n+            self.source_ip,\n+            self.source_mac,\n+            self.source_port,\n+            data.len(),\n+            data,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 86 to 86)\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 1 to 1)\n-use crate::packets::{udp::UDPPacket, arp::ArpPacket, tcp::TCPPacket};\n+use crate::packets::{arp::ArpPacket, tcp::TCPPacket, udp::UDPPacket};\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 11 to 11)\n-    None\n+    None,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 18 to 18)\n+\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 5 to 5)\n-    end: usize\n+    end: usize,\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 11 to 13)\n-        Self { \n-            ptr: data.as_ptr() as usize, \n-            end: data.as_ptr() as usize + data.len()\n+        Self {\n+            ptr: data.as_ptr() as usize,\n+            end: data.as_ptr() as usize + data.len(),\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 40 to 40)\n-    pub unsafe fn get_curr_arr(&self) -> &'static [u8]{\n+    pub unsafe fn get_curr_arr(&self) -> &'static [u8] {\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 45 to 45)\n-    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8]{\n+    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8] {\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 51 to 52)\n-pub fn check_sum(addr:*mut u8, len:u32, sum: u32) -> u16 {\n-    let mut sum:u32 = sum;\n+pub fn check_sum(addr: *mut u8, len: u32, sum: u32) -> u16 {\n+    let mut sum: u32 = sum;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 55 to 57)\n-    \n-     while nleft > 1 {\n-        sum += unsafe{ *w as u32 };\n+\n+    while nleft > 1 {\n+        sum += unsafe { *w as u32 };\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 65 to 65)\n-     }\n+    }\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 67 to 69)\n-     if nleft == 1 {\n-        sum += unsafe { *(w as *const u8) as u32};\n-     }\n+    if nleft == 1 {\n+        sum += unsafe { *(w as *const u8) as u32 };\n+    }\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 71 to 71)\n+    sum = (sum & 0xFFFF) + (sum >> 16);\n+    sum = sum + (sum >> 16);\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 72 to 73)\n-     sum = (sum & 0xFFFF) + (sum >> 16);\n-     sum = sum + (sum >> 16);\n+    let answer: u16 = !sum as u16;\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 75 to 77)\n-     let answer:u16 = !sum as u16;\n-\n-     answer\n+    answer\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 1 to 1)\n-use core::fmt::{Display, Debug};\n+use core::fmt::{Debug, Display};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 3 to 3)\n-use alloc::{string::String, format};\n+use alloc::{format, string::String};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 18 to 18)\n-        format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n+        format!(\n+            \"{}.{}.{}.{}\",\n+            (self.0 >> 24) & 0xff,\n+            (self.0 >> 16) & 0xff,\n+            (self.0 >> 8) & 0xff,\n+            self.0 & 0xff\n+        )\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 50 to 50)\n-        format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n+        format!(\n+            \"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\",\n+            self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5]\n+        )\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 62 to 62)\n-        f.debug_tuple(\"MacAddress\").field(&self.to_string()).finish()\n+        f.debug_tuple(\"MacAddress\")\n+            .field(&self.to_string())\n+            .finish()\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 65 to 65)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 5 to 5)\n-pub(crate) const ETH_RTYPE_IP: u16 =  0x0800; // Internet protocol\n+pub(crate) const ETH_RTYPE_IP: u16 = 0x0800; // Internet protocol\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 24 to 24)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 3 to 3)\n-mod net;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 6 to 6)\n+mod net;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 20 to 20)\n-pub use net::TcpFlags;\n+use consts::*;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 24 to 24)\n+pub use net::TcpFlags;\n+use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 27 to 27)\n-use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 32 to 32)\n-use consts::*;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 37 to 38)\n-    pub ip:  IPv4,\n-    pub mac: MacAddress\n+    pub ip: IPv4,\n+    pub mac: MacAddress,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 43 to 46)\n-        Self {\n-            ip,\n-            mac\n-        }\n+        Self { ip, mac }\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 49 to 51)\n-    fn analysis_udp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let udp_header = unsafe{data_ptr_iter.next::<UDP>()}.unwrap();\n-        let data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_udp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let udp_header = unsafe { data_ptr_iter.next::<UDP>() }.unwrap();\n+        let data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 54 to 62)\n-        Packet::UDP(packets::udp::UDPPacket { \n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: udp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: udp_header.dport.to_be(), \n-            data_len, \n-            data: &data[..data_len]\n+        Packet::UDP(packets::udp::UDPPacket {\n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: udp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: udp_header.dport.to_be(),\n+            data_len,\n+            data: &data[..data_len],\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 66 to 67)\n-    fn analysis_tcp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let tcp_header = unsafe{data_ptr_iter.next::<TCP>()}.unwrap();\n+    fn analysis_tcp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let tcp_header = unsafe { data_ptr_iter.next::<TCP>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 69 to 69)\n-        let data = &unsafe{data_ptr_iter.get_curr_arr()}[offset..];\n+        let data = &unsafe { data_ptr_iter.get_curr_arr() }[offset..];\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 73 to 78)\n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: tcp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: tcp_header.dport.to_be(), \n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: tcp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: tcp_header.dport.to_be(),\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 89 to 90)\n-    fn analysis_icmp(&self, data_ptr_iter: UnsafeRefIter, _ip_header: &Ip, _eth_header: &Eth) -> Packet {\n-        let _data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_icmp(\n+        &self,\n+        data_ptr_iter: UnsafeRefIter,\n+        _ip_header: &Ip,\n+        _eth_header: &Eth,\n+    ) -> Packet {\n+        let _data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 96 to 96)\n-        let ip_header = unsafe{data_ptr_iter.next::<Ip>()}.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next::<Ip>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 99 to 99)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 103 to 103)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 115 to 115)\n-        let arp_header = unsafe{data_ptr_iter.next::<Arp>()}.unwrap();\n+        let arp_header = unsafe { data_ptr_iter.next::<Arp>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 122 to 126)\n-                IPv4::from_u32(arp_header.spa.to_be()), \n-                MacAddress::new(arp_header.sha), \n-                IPv4::from_u32(arp_header.tpa.to_be()), \n-                MacAddress::new(arp_header.tha), \n-                rtype\n+                IPv4::from_u32(arp_header.spa.to_be()),\n+                MacAddress::new(arp_header.sha),\n+                IPv4::from_u32(arp_header.tpa.to_be()),\n+                MacAddress::new(arp_header.tha),\n+                rtype,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 133 to 133)\n-        let eth_header = unsafe{data_ptr_iter.next::<Eth>()}.unwrap();\n+        let eth_header = unsafe { data_ptr_iter.next::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 137 to 137)\n-            _ => Packet::None // Unsupported type\n+            _ => Packet::None, // Unsupported type\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 9 to 9)\n-    pub(crate) rtype: u16      // packet type, arp or ip\n+    pub(crate) rtype: u16,     // packet type, arp or ip\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 15 to 23)\n-    pub(crate) httype: u16, // Hardware type\n-    pub(crate) pttype: u16, // Protocol type, For IPv4, this has the value 0x0800.\n-    pub(crate) hlen: u8,    // Hardware length: Ethernet address length is 6.\n-    pub(crate) plen: u8,    // Protocol length: IPv4 address length is 4.\n-    pub(crate) op: u16,     // Operation: 1 for request, 2 for reply.\n-    pub(crate) sha: [u8; 6],// Sender hardware address\n-    pub(crate) spa: u32,    // Sender protocol address\n-    pub(crate) tha: [u8; 6],// Target hardware address\n-    pub(crate) tpa: u32     // Target protocol address\n+    pub(crate) httype: u16,  // Hardware type\n+    pub(crate) pttype: u16,  // Protocol type, For IPv4, this has the value 0x0800.\n+    pub(crate) hlen: u8,     // Hardware length: Ethernet address length is 6.\n+    pub(crate) plen: u8,     // Protocol length: IPv4 address length is 4.\n+    pub(crate) op: u16,      // Operation: 1 for request, 2 for reply.\n+    pub(crate) sha: [u8; 6], // Sender hardware address\n+    pub(crate) spa: u32,     // Sender protocol address\n+    pub(crate) tha: [u8; 6], // Target hardware address\n+    pub(crate) tpa: u32,     // Target protocol address\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 30 to 39)\n-    pub(crate) vhl: u8,    // version << 4 | header length >> 2\n-    pub(crate) tos: u8,    // type of service\n-    pub(crate) len: u16,   // total length, packet length\n-    pub(crate) id: u16,    // identification, can combine all packets\n-    pub(crate) off: u16,   // fragment offset field, packet from\n-    pub(crate) ttl: u8,    // time to live\n-    pub(crate) pro: u8,    // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n-    pub(crate) sum: u16,   // checksum,\n-    pub(crate) src: u32,   // souce ip\n-    pub(crate) dst: u32    // destination ip\n+    pub(crate) vhl: u8,  // version << 4 | header length >> 2\n+    pub(crate) tos: u8,  // type of service\n+    pub(crate) len: u16, // total length, packet length\n+    pub(crate) id: u16,  // identification, can combine all packets\n+    pub(crate) off: u16, // fragment offset field, packet from\n+    pub(crate) ttl: u8,  // time to live\n+    pub(crate) pro: u8,  // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n+    pub(crate) sum: u16, // checksum,\n+    pub(crate) src: u32, // souce ip\n+    pub(crate) dst: u32, // destination ip\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 49 to 49)\n-    pub(crate) sum: u16    // checksum\n+    pub(crate) sum: u16,   // checksum\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 69 to 73)\n-    pub(crate) sport: u16, // souce port\n-    pub(crate) dport: u16, // destination port\n-    pub(crate) seq: u32, // sequence number\n-    pub(crate) ack: u32, // acknowledgement number\n-    pub(crate) offset: u8, // offset, first 4 bytes are tcp header length\n+    pub(crate) sport: u16,      // souce port\n+    pub(crate) dport: u16,      // destination port\n+    pub(crate) seq: u32,        // sequence number\n+    pub(crate) ack: u32,        // acknowledgement number\n+    pub(crate) offset: u8,      // offset, first 4 bytes are tcp header length\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 75 to 77)\n-    pub(crate) win: u16,    // window size\n-    pub(crate) sum: u16,    // checksum\n-    pub(crate) urg: u16,    // urgent pointer\n+    pub(crate) win: u16,        // window size\n+    pub(crate) sum: u16,        // checksum\n+    pub(crate) urg: u16,        // urgent pointer\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 93 to 93)\n-pub(crate) const IP_LEN:  usize = size_of::<Ip>();\n+pub(crate) const IP_LEN: usize = size_of::<Ip>();\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 102 to 102)\n-00 00 00 00 00 00 0a 00 02 0f                         ..........                  \n+00 00 00 00 00 00 0a 00 02 0f                         ..........\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 108 to 108)\n-52 55 0a 00 02 02 0a 00 02 02                         RU........                  \n+52 55 0a 00 02 02 0a 00 02 02                         RU........\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 117 to 117)\n-73 20 61 20 70 69 6e 67 21                            s a ping!                     \n+73 20 61 20 70 69 6e 67 21                            s a ping!\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 121 to 121)\n-74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!   \n+74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 125 to 125)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 3 to 3)\n+use crate::consts::{\n+    ARP_ETHADDR_LEN, ARP_HRD_ETHER, ARP_OP_REPLY, ARP_OP_REQUEST, BROADCAST_MAC, ETH_RTYPE_ARP,\n+    ETH_RTYPE_IP,\n+};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 5 to 7)\n-use crate::consts::{ARP_OP_REQUEST, ARP_OP_REPLY, ARP_HRD_ETHER, ETH_RTYPE_IP, ARP_ETHADDR_LEN, ETH_RTYPE_ARP, BROADCAST_MAC};\n-use crate::MacAddress;\n-use crate::IPv4;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 9 to 9)\n+use crate::IPv4;\n+use crate::MacAddress;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 14 to 14)\n-    Unsupported\n+    Unsupported,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 22 to 22)\n-            _ => ArpType::Unsupported\n+            _ => ArpType::Unsupported,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 41 to 41)\n-    pub rtype: ArpType\n+    pub rtype: ArpType,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 45 to 46)\n-    pub fn new(sender_ip: IPv4, sender_mac: MacAddress, target_ip: IPv4, target_mac: MacAddress, rtype: ArpType) -> Self {\n-        ArpPacket { sender_ip, sender_mac, target_ip, target_mac, rtype }\n+    pub fn new(\n+        sender_ip: IPv4,\n+        sender_mac: MacAddress,\n+        target_ip: IPv4,\n+        target_mac: MacAddress,\n+        rtype: ArpType,\n+    ) -> Self {\n+        ArpPacket {\n+            sender_ip,\n+            sender_mac,\n+            target_ip,\n+            target_mac,\n+            rtype,\n+        }\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 55 to 55)\n-        let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let mut eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 64 to 65)\n-        arp_header.hlen = ARP_ETHADDR_LEN as u8;    // mac address len\n-        arp_header.plen = 4;    // ipv4\n+        arp_header.hlen = ARP_ETHADDR_LEN as u8; // mac address len\n+        arp_header.plen = 4; // ipv4\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 67 to 67)\n-        \n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 70 to 70)\n-    \n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 76 to 76)\n-    pub fn reply_packet(&self, local_ip: IPv4, local_mac: MacAddress) -> Result<Self, NetStackErrors> {\n+    pub fn reply_packet(\n+        &self,\n+        local_ip: IPv4,\n+        local_mac: MacAddress,\n+    ) -> Result<Self, NetStackErrors> {\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 80 to 84)\n-                    local_ip, \n-                    local_mac, \n-                    self.sender_ip, \n-                    self.sender_mac, \n-                    ArpType::Reply\n+                    local_ip,\n+                    local_mac,\n+                    self.sender_ip,\n+                    self.sender_mac,\n+                    ArpType::Reply,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 89 to 89)\n-            _ => Err(NetStackErrors::NotRequiredReplyArp)\n+            _ => Err(NetStackErrors::NotRequiredReplyArp),\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 93 to 93)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 1 to 1)\n-pub mod udp;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 4 to 4)\n+pub mod udp;\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 4 to 4)\n-use crate::utils::{UnsafeRefIter, check_sum};\n+use crate::net::{Eth, Ip, TcpFlags, ETH_LEN, IP_LEN, TCP, TCP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 7 to 7)\n-use crate::net::{TCP_LEN, IP_LEN, ETH_LEN, Eth, Ip, TCP, TcpFlags};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 19 to 24)\n-    pub seq: u32,           // sequence number\n-    pub ack: u32,           // acknowledgement number\n-    pub flags: TcpFlags,    // flags, last 6 are flags(U, A, P, R, S, F)\n-    pub win: u16,           // window size\n-    pub urg: u16,           // urgent pointer\n-    pub data: &'a [u8]      // data buffer\n+    pub seq: u32,        // sequence number\n+    pub ack: u32,        // acknowledgement number\n+    pub flags: TcpFlags, // flags, last 6 are flags(U, A, P, R, S, F)\n+    pub win: u16,        // window size\n+    pub urg: u16,        // urgent pointer\n+    pub data: &'a [u8],  // data buffer\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 27 to 27)\n-impl<'a> TCPPacket<'a>  {\n+impl<'a> TCPPacket<'a> {\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 33 to 36)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let tcp_header = unsafe{data_ptr_iter.next_mut::<TCP>()}.unwrap();\n-        let tcp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let tcp_header = unsafe { data_ptr_iter.next_mut::<TCP>() }.unwrap();\n+        let tcp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 38 to 38)\n-\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 42 to 42)\n-        \n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 48 to 48)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 64 to 64)\n-        \n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 69 to 69)\n-        tcp_header.sum = check_sum(tcp_header as *mut _ as *mut u8, (TCP_LEN + self.data_len) as _, sum); // tcp checksum. zero means no checksum is provided.\n+        tcp_header.sum = check_sum(\n+            tcp_header as *mut _ as *mut u8,\n+            (TCP_LEN + self.data_len) as _,\n+            sum,\n+        ); // tcp checksum. zero means no checksum is provided.\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 74 to 74)\n-    pub fn reply(&self, data: &'a[u8]) -> Self {\n+    pub fn reply(&self, data: &'a [u8]) -> Self {\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 90 to 90)\n-        \n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 108 to 108)\n-            data: TCP_EMPTY_DATA\n+            data: TCP_EMPTY_DATA,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 112 to 112)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 3 to 4)\n-use crate::consts::{ETH_RTYPE_IP, IP_PROTOCAL_UDP, IP_HEADER_VHL};\n-use crate::net::{UDP, Eth, Ip, UDP_LEN, IP_LEN, ETH_LEN};\n+use crate::consts::{ETH_RTYPE_IP, IP_HEADER_VHL, IP_PROTOCAL_UDP};\n+use crate::net::{Eth, Ip, ETH_LEN, IP_LEN, UDP, UDP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 7 to 7)\n-use crate::utils::{UnsafeRefIter, check_sum};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 18 to 18)\n-    pub data: &'a [u8]\n+    pub data: &'a [u8],\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 22 to 24)\n-    pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n-        dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n-        data_len: usize, data: &'a [u8]) -> Self {\n+    pub fn new(\n+        source_ip: IPv4,\n+        source_mac: MacAddress,\n+        source_port: u16,\n+        dest_ip: IPv4,\n+        dest_mac: MacAddress,\n+        dest_port: u16,\n+        data_len: usize,\n+        data: &'a [u8],\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 33 to 33)\n-            data\n+            data,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 42 to 45)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let udp_header = unsafe{data_ptr_iter.next_mut::<UDP>()}.unwrap();\n-        let udp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let udp_header = unsafe { data_ptr_iter.next_mut::<UDP>() }.unwrap();\n+        let udp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 47 to 47)\n-\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 51 to 51)\n-        \n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 57 to 57)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 65 to 66)\n-        udp_header.sum   = 0; // udp checksum   zero means no checksum is provided.\n-        udp_header.ulen  = ((self.data_len + UDP_LEN) as u16).to_be();\n+        udp_header.sum = 0; // udp checksum   zero means no checksum is provided.\n+        udp_header.ulen = ((self.data_len + UDP_LEN) as u16).to_be();\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 75 to 82)\n-            self.dest_ip, \n-            self.dest_mac, \n-            self.dest_port, \n-            self.source_ip, \n-            self.source_mac, \n-            self.source_port, \n-            data.len(), \n-            data\n+            self.dest_ip,\n+            self.dest_mac,\n+            self.dest_port,\n+            self.source_ip,\n+            self.source_mac,\n+            self.source_port,\n+            data.len(),\n+            data,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 86 to 86)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 1 to 1)\n-use crate::packets::{udp::UDPPacket, arp::ArpPacket, tcp::TCPPacket};\n+use crate::packets::{arp::ArpPacket, tcp::TCPPacket, udp::UDPPacket};\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 11 to 11)\n-    None\n+    None,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 18 to 18)\n+\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 5 to 5)\n-    end: usize\n+    end: usize,\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 11 to 13)\n-        Self { \n-            ptr: data.as_ptr() as usize, \n-            end: data.as_ptr() as usize + data.len()\n+        Self {\n+            ptr: data.as_ptr() as usize,\n+            end: data.as_ptr() as usize + data.len(),\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 40 to 40)\n-    pub unsafe fn get_curr_arr(&self) -> &'static [u8]{\n+    pub unsafe fn get_curr_arr(&self) -> &'static [u8] {\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 45 to 45)\n-    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8]{\n+    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8] {\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 51 to 52)\n-pub fn check_sum(addr:*mut u8, len:u32, sum: u32) -> u16 {\n-    let mut sum:u32 = sum;\n+pub fn check_sum(addr: *mut u8, len: u32, sum: u32) -> u16 {\n+    let mut sum: u32 = sum;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 55 to 57)\n-    \n-     while nleft > 1 {\n-        sum += unsafe{ *w as u32 };\n+\n+    while nleft > 1 {\n+        sum += unsafe { *w as u32 };\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 65 to 65)\n-     }\n+    }\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 67 to 69)\n-     if nleft == 1 {\n-        sum += unsafe { *(w as *const u8) as u32};\n-     }\n+    if nleft == 1 {\n+        sum += unsafe { *(w as *const u8) as u32 };\n+    }\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 71 to 71)\n+    sum = (sum & 0xFFFF) + (sum >> 16);\n+    sum = sum + (sum >> 16);\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 72 to 73)\n-     sum = (sum & 0xFFFF) + (sum >> 16);\n-     sum = sum + (sum >> 16);\n+    let answer: u16 = !sum as u16;\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 75 to 77)\n-     let answer:u16 = !sum as u16;\n-\n-     answer\n+    answer\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `UDP` contains a capitalized acronym\n  --> src/net.rs:45:12\n   |\n45 | pub struct UDP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Udp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n  --> src/net.rs:52:1\n   |\n52 | / bitflags! {\n53 | |     // #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n54 | |     pub struct TcpFlags: u8 {\n55 | |         const NONE = 0;\n...  |\n62 | |     }\n63 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TCP` contains a capitalized acronym\n  --> src/net.rs:68:12\n   |\n68 | pub struct TCP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tcp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ICMP` contains a capitalized acronym\n  --> src/net.rs:83:12\n   |\n83 | pub struct ICMP {\n   |            ^^^^ help: consider making the acronym lowercase, except the initial letter: `Icmp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::IPv4` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:17:5\n   |\n17 | /     pub fn to_string(&self) -> String {\n18 | |         format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n19 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::IPv4`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n   = note: `#[deny(clippy::inherent_to_string_shadow_display)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::MacAddress` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:49:5\n   |\n49 | /     pub fn to_string(&self) -> String {\n50 | |         format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n51 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::MacAddress`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n  --> src/packets/udp.rs:22:5\n   |\n22 | /     pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n23 | |         dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n24 | |         data_len: usize, data: &'a [u8]) -> Self {\n   | |________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/udp.rs:68:34\n   |\n68 |         udp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/packets/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/tcp.rs:63:34\n   |\n63 |         tcp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `UDP` contains a capitalized acronym\n  --> src/net.rs:45:12\n   |\n45 | pub struct UDP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Udp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n  --> src/net.rs:52:1\n   |\n52 | / bitflags! {\n53 | |     // #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n54 | |     pub struct TcpFlags: u8 {\n55 | |         const NONE = 0;\n...  |\n62 | |     }\n63 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TCP` contains a capitalized acronym\n  --> src/net.rs:68:12\n   |\n68 | pub struct TCP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tcp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ICMP` contains a capitalized acronym\n  --> src/net.rs:83:12\n   |\n83 | pub struct ICMP {\n   |            ^^^^ help: consider making the acronym lowercase, except the initial letter: `Icmp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::IPv4` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:17:5\n   |\n17 | /     pub fn to_string(&self) -> String {\n18 | |         format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n19 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::IPv4`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n   = note: `#[deny(clippy::inherent_to_string_shadow_display)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::MacAddress` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:49:5\n   |\n49 | /     pub fn to_string(&self) -> String {\n50 | |         format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n51 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::MacAddress`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n  --> src/packets/udp.rs:22:5\n   |\n22 | /     pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n23 | |         dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n24 | |         data_len: usize, data: &'a [u8]) -> Self {\n   | |________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/udp.rs:68:34\n   |\n68 |         udp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/packets/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/tcp.rs:63:34\n   |\n63 |         tcp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/consts.rs",
      "kind": "Mirai",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/consts.rs",
      "kind": "Mirai",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/packets/udp.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/packets/udp.rs:60:27\n   |\n60 |         ip_header.len = ((self.data_len + UDP_LEN + IP_LEN) as u16).to_be(); // toal len\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: possible called `Option::unwrap()` on a `None` value\n  --> src/packets/arp.rs:55:30\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: possible called `Option::unwrap()` on a `None` value\n  --> src/packets/arp.rs:61:30\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/packets/tcp.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/packets/tcp.rs:51:27\n   |\n51 |         ip_header.len = ((self.data_len + TCP_LEN + IP_LEN) as u16).to_be(); // toal len\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:57:9\n   |\n57 |         sum += unsafe{ *w as u32 };\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:62:19\n   |\n62 |             sum = (sum & 0xFFFF) + (sum >> 16);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:63:19\n   |\n63 |             sum = sum + (sum >> 16);\n   |                   ^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:68:9\n   |\n68 |         sum += unsafe { *(w as *const u8) as u32};\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1055,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lose-net-stack, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/lose-net-stack\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking lose-net-stack v0.1.0 (/home/runner/check/batch_1/Byte-OS/lose-net-stack)\nerror: could not compile `lose-net-stack` (lib) due to 3 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 1056,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lose-net-stack, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/lose-net-stack\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking lose-net-stack v0.1.0 (/home/runner/check/batch_1/Byte-OS/lose-net-stack)\nerror: could not compile `lose-net-stack` (lib) due to 3 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 1063,
      "file": "/home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused macro definition: `PerCPUReservedOffset`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\n"
    },
    {
      "cmd_idx": 1063,
      "file": "/home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1063,
      "file": "/home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `PerCPUReserved` is never constructed\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1063,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1063,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1063,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1063,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1064,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1064,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1064,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1064,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1065,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1065,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1065,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1065,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1066,
      "file": "/home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused macro definition: `PerCPUReservedOffset`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\n"
    },
    {
      "cmd_idx": 1066,
      "file": "/home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1066,
      "file": "/home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `PerCPUReserved` is never constructed\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1066,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1066,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1066,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1066,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "/home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:32:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:24Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1070,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:32:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1071,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:32:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1072,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:32:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1073,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:32:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1074,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:32:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1075,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none\n   Compiling scopeguard v1.2.0\n   Compiling bit_field v0.10.2\n   Compiling lock_api v0.4.11\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.6.0\n   Compiling byteorder v1.5.0\n   Compiling log v0.4.22\n   Compiling loongArch64 v0.2.4\n   Compiling zerocopy v0.7.35\n[2024-09-28T15:32:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling fdt v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling buddy_system_allocator v0.9.1\n   Compiling polyhal v0.1.3 (/home/runner/check/repos-default/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/debug_console/loongarch64.rs:5:11\n  |\n5 | #[cfg(not(board = \"2k1000\"))]\n  |           ^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/debug_console/loongarch64.rs:7:7\n  |\n7 | #[cfg(board = \"2k1000\")]\n  |       ^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n   Compiling virtio-drivers v0.7.5\nwarning: field `0` is never read\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/irq/mod.rs:35:22\n   |\n35 | pub struct IRQVector(pub(crate) usize);\n   |            --------- ^^^^^^^^^^^^^^^^\n   |            |\n   |            field in this struct\n   |\n   = note: `IRQVector` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n35 | pub struct IRQVector(());\n   |                      ~~\n\nwarning: field `0` is never read\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: `polyhal` (lib) generated 9 warnings\n   Compiling example v0.1.0 (/home/runner/check/repos-default/Byte-OS/polyhal/example)\nwarning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"/tmp/rustc3MNxgL/symbols.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-ebd938e7c81d9b95.example.8f63a521bcd07359-cgu.0.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-ebd938e7c81d9b95.example.8f63a521bcd07359-cgu.1.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-ebd938e7c81d9b95.example.8f63a521bcd07359-cgu.2.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-ebd938e7c81d9b95.example.8f63a521bcd07359-cgu.3.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-ebd938e7c81d9b95.09amnmpbzdhtgxxn1cxyxfi5t.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps\" \"-L\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib\" \"-Bstatic\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libvirtio_drivers-c71b4244ead45a74.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libzerocopy-b65a73bda5dd105a.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbyteorder-a6608e82b803455e.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libpolyhal-31311578d444a2c7.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libloongArch64-5e6a7ff73e9045d6.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbitflags-7d4c229935312c2e.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbit_field-f205bae68304904b.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libcfg_if-e5b2c08080a8d0bd.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbitflags-a49aa3b7c7494a35.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libfdt-45db0bc4944b4493.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/liblog-531edc9e0960d321.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbuddy_system_allocator-0f74cc2c33704f4a.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/liballoc-cf622d6ac0c1207e.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libspin-e73be5f20d839958.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/liblock_api-cb5b9691a0c0d257.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libscopeguard-e4c379832e03342e.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/librustc_std_workspace_core-3b1e26e39e9a51e8.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcore-d6c82fdbb3df4fe1.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib\" \"-Bdynamic\" \"--eh-frame-hdr\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib\" \"-o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-ebd938e7c81d9b95\" \"--gc-sections\" \"-Tlinker/linker-loongarch64.ld\"\n  = note: rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvdi2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvsi2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvti2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addtf3.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvdi3.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvsi3.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvti3.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzdi2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzsi2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzti2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-cmpdi2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-cmpti2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzdi2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzsi2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzti2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divdc3.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divsc3.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divtf3.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-extenddftf2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-extendhfsf2.o) is incompatible with /tmp/rustc3MNxgL/symbols.o\n          rust-lld: error: too many errors emitted, stopping now (use --error-limit=0 to see all errors)\n          \n\nwarning: `example` (bin \"example\") generated 1 warning\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1076,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\n   Compiling scopeguard v1.2.0\n   Compiling static_assertions v1.1.0\n   Compiling lock_api v0.4.11\n   Compiling riscv v0.11.1\n   Compiling byteorder v1.5.0\n   Compiling sbi-spec v0.0.4\n   Compiling critical-section v1.1.2\n   Compiling log v0.4.22\n   Compiling bitflags v2.6.0\n   Compiling embedded-hal v1.0.0\n[2024-09-28T15:32:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling zerocopy v0.7.35\n   Compiling sbi-rt v0.0.2\n   Compiling fdt v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling buddy_system_allocator v0.9.1\n   Compiling polyhal v0.1.3 (/home/runner/check/repos-default/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:23:15\n   |\n23 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:39:19\n   |\n39 |         #[cfg(not(c906))]\n   |                   ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:94:15\n   |\n94 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:96:15\n   |\n96 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:98:15\n   |\n98 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:100:15\n    |\n100 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:102:15\n    |\n102 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unused macro definition: `PerCPUReservedOffset`\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n   Compiling virtio-drivers v0.7.5\nwarning: function `parse_dtb_info` is never used\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\nwarning: field `0` is never read\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: struct `PerCPUReserved` is never constructed\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\nwarning: `polyhal` (lib) generated 16 warnings\n   Compiling example v0.1.0 (/home/runner/check/repos-default/Byte-OS/polyhal/example)\nwarning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"/tmp/rustctJWF2N/symbols.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-2abab63482332e67.example.90ac62f59286dc05-cgu.0.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-2abab63482332e67.example.90ac62f59286dc05-cgu.1.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-2abab63482332e67.example.90ac62f59286dc05-cgu.2.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-2abab63482332e67.example.90ac62f59286dc05-cgu.3.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-2abab63482332e67.47rl72u2tkbjyqn8tm9sxjlij.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps\" \"-L\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib\" \"-Bstatic\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libvirtio_drivers-fcf6b8727f2597cf.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libzerocopy-89aac2adc9889c54.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libbyteorder-f161e0329d454c3f.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-89945ae54215c9d4.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libsbi_rt-35b66abd80ea6e3f.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libsbi_spec-7b28f0ef5d1e6a3b.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libriscv-771469dbdf56ac8a.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libcritical_section-c695224287528485.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libembedded_hal-11918fc9ddc2f56a.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libcfg_if-dfe8e9d3ebb4e29e.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libbitflags-e84e155992e8f5f5.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libfdt-ff9e0fb5d8925713.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/liblog-f2956d8a6b25dda3.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libbuddy_system_allocator-41816819844669f8.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/liballoc-fa0aa15e8a57a9a2.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libspin-d535143e1fe0a006.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/liblock_api-61fbf0ef368d8f11.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libscopeguard-332589bf2fdf0e23.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/librustc_std_workspace_core-ee495ab958ee9151.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/libcore-11e6a2c34a93b553.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/libcompiler_builtins-b9e192a8d71bed31.rlib\" \"-Bdynamic\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib\" \"-o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-2abab63482332e67\" \"--gc-sections\"\n  = note: rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-89945ae54215c9d4.polyhal.8f3297a9dc74d8dd-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::hf5eeed50d5c4a310) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-89945ae54215c9d4.rlib\n          >>> referenced by mod.rs:0 (src/components/boot/mod.rs:0)\n          >>>               polyhal-89945ae54215c9d4.polyhal.8f3297a9dc74d8dd-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::hf5eeed50d5c4a310) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-89945ae54215c9d4.rlib\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-89945ae54215c9d4.polyhal.8f3297a9dc74d8dd-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::hf5eeed50d5c4a310) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-89945ae54215c9d4.rlib\n          >>> referenced by mod.rs:0 (src/components/boot/mod.rs:0)\n          >>>               polyhal-89945ae54215c9d4.polyhal.8f3297a9dc74d8dd-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::hf5eeed50d5c4a310) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-89945ae54215c9d4.rlib\n          \n\nwarning: `example` (bin \"example\") generated 1 warning\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1077,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling scopeguard v1.2.0\n   Compiling tock-registers v0.8.1\n   Compiling lock_api v0.4.11\n   Compiling log v0.4.22\n   Compiling bitflags v2.6.0\n   Compiling byteorder v1.5.0\n[2024-09-28T15:32:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling arm_gicv2 v0.1.0\n   Compiling arm_pl011 v0.1.0\n   Compiling zerocopy v0.7.35\n   Compiling spin v0.9.8\n   Compiling aarch64-cpu v9.4.0\n   Compiling fdt v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling buddy_system_allocator v0.9.1\n   Compiling virtio-drivers v0.7.5\n   Compiling polyhal v0.1.3 (/home/runner/check/repos-default/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/repos-default/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/repos-default/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: field `0` is never read\n  --> /home/runner/check/repos-default/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: `polyhal` (lib) generated 6 warnings\n   Compiling example v0.1.0 (/home/runner/check/repos-default/Byte-OS/polyhal/example)\nwarning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"--fix-cortex-a53-843419\" \"/tmp/rustch1vgRA/symbols.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-f84cc6171587dac1.example.471647ee3feeb7a9-cgu.0.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-f84cc6171587dac1.example.471647ee3feeb7a9-cgu.1.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-f84cc6171587dac1.example.471647ee3feeb7a9-cgu.2.rcgu.o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-f84cc6171587dac1.auiby81jszwahwkuay42alg4g.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps\" \"-L\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib\" \"-Bstatic\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libvirtio_drivers-7205d20d3c85167f.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libzerocopy-00f6727730b34584.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbyteorder-6251f93bd70992ab.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-989932b135c95c8b.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libarm_gicv2-9c3e5d2b8b907842.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libarm_pl011-c5b8dedabc130c76.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libaarch64_cpu-ad3948c631827945.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libtock_registers-871317267119ad1e.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libcfg_if-51d5ccf19a0009d3.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbitflags-a5ce44a6c55cc69a.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libfdt-80c4b13ca541a733.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/liblog-fdc3a78364d41b4d.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbuddy_system_allocator-1b5fa0b34d369ebb.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/liballoc-dfa46a1477c2b5e1.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libspin-892e798bcf4d11e9.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/liblock_api-b34245d8f1f66b77.rlib\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libscopeguard-890219094bd4fd6e.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/librustc_std_workspace_core-97b04805942f7790.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcore-9af6731f468db4d1.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcompiler_builtins-ba9ccc0c4e3e7a25.rlib\" \"-Bdynamic\" \"--eh-frame-hdr\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib\" \"-o\" \"/home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-f84cc6171587dac1\" \"--gc-sections\"\n  = note: rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-989932b135c95c8b.polyhal.da7a529a606f201a-cgu.1.rcgu.o:(polyhal::components::boot::clear_bss::hae8a02f58fa008f3) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-989932b135c95c8b.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-989932b135c95c8b.polyhal.da7a529a606f201a-cgu.1.rcgu.o:(polyhal::components::boot::clear_bss::hae8a02f58fa008f3) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-989932b135c95c8b.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-989932b135c95c8b.polyhal.da7a529a606f201a-cgu.1.rcgu.o:(polyhal::components::boot::clear_bss::hae8a02f58fa008f3) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-989932b135c95c8b.rlib\n          >>> referenced 1 more times\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-989932b135c95c8b.polyhal.da7a529a606f201a-cgu.1.rcgu.o:(polyhal::components::boot::clear_bss::hae8a02f58fa008f3) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-989932b135c95c8b.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-989932b135c95c8b.polyhal.da7a529a606f201a-cgu.1.rcgu.o:(polyhal::components::boot::clear_bss::hae8a02f58fa008f3) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-989932b135c95c8b.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-989932b135c95c8b.polyhal.da7a529a606f201a-cgu.1.rcgu.o:(polyhal::components::boot::clear_bss::hae8a02f58fa008f3) in archive /home/runner/check/repos-default/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-989932b135c95c8b.rlib\n          >>> referenced 1 more times\n          \n\nwarning: `example` (bin \"example\") generated 1 warning\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1078,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1078,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1079,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1079,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1080,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1080,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1081,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1081,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/pagetable/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/components/pagetable/riscv64.rs:205:10\n    |\n205 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused macro definition: `PerCPUReservedOffset`\n  --> src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `PerCPUReserved` is never constructed\n --> src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/kcontext/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/riscv64.rs:150:1\n    |\n150 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/kcontext/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/riscv64.rs:166:1\n    |\n166 | / pub unsafe extern \"C\" fn context_switch_pt(\n167 | |     from: *mut KContext,\n168 | |     to: *const KContext,\n169 | |     pt_token: PageTable,\n170 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/pagetable/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/components/pagetable/riscv64.rs:60:9\n   |\n60 | /         return self.flags().contains(PTEFlags::V)\n61 | |             && !(self.flags().contains(PTEFlags::R)\n62 | |                 || self.flags().contains(PTEFlags::W)\n63 | |                 || self.flags().contains(PTEFlags::X));\n   | |______________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n60 ~         self.flags().contains(PTEFlags::V)\n61 +             && !(self.flags().contains(PTEFlags::R)\n62 +                 || self.flags().contains(PTEFlags::W)\n63 ~                 || self.flags().contains(PTEFlags::X))\n   |\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/components/trapframe/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TrapFrame`\n  --> src/components/trapframe/riscv64.rs:64:5\n   |\n64 | /     pub fn new() -> Self {\n65 | |         TrapFrame {\n66 | |             x: [0usize; 32],\n67 | |             sstatus: sstatus::read(),\n...  |\n70 | |         }\n71 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n61 + impl Default for TrapFrame {\n62 +     fn default() -> Self {\n63 +         Self::new()\n64 +     }\n65 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1082,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `Entry`, `HandlerFunc`\n --> src/components/arch/x86_64/idt.rs:2:31\n  |\n2 | use x86_64::structures::idt::{Entry, HandlerFunc, InterruptDescriptorTable};\n  |                               ^^^^^  ^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `Entry`, `HandlerFunc`\n --> src/components/arch/x86_64/idt.rs:2:31\n  |\n2 | use x86_64::structures::idt::{Entry, HandlerFunc, InterruptDescriptorTable};\n  |                               ^^^^^  ^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/pagetable/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/components/pagetable/x86_64.rs:179:10\n    |\n179 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/timer/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n --> src/components/timer/x86_64.rs:6:34\n  |\n6 | static mut CPU_FREQ_MHZ: usize = 4000_000_000;\n  |                                  ^^^^^^^^^^^^ help: consider: `4_000_000_000`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n  = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/components/arch/x86_64/idt.rs:22:13\n   |\n22 |         let mut idt = Self(InterruptDescriptorTable::new());\n   |             ----^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `NUM_INT` is never used\n --> src/components/arch/x86_64/idt.rs:4:7\n  |\n4 | const NUM_INT: usize = 256;\n  |       ^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/trapframe/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods `save` and `restore` are never used\n  --> src/components/trapframe/x86_64.rs:28:19\n   |\n26 | impl FxsaveArea {\n   | --------------- methods in this implementation\n27 |     #[inline]\n28 |     pub(crate) fn save(&mut self) {\n   |                   ^^^^\n...\n33 |     pub(crate) fn restore(&self) {\n   |                   ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/trapframe/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods `save` and `restore` are never used\n  --> src/components/trapframe/x86_64.rs:28:19\n   |\n26 | impl FxsaveArea {\n   | --------------- methods in this implementation\n27 |     #[inline]\n28 |     pub(crate) fn save(&mut self) {\n   |                   ^^^^\n...\n33 |     pub(crate) fn restore(&self) {\n   |                   ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/arch/x86_64/gdt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> src/components/arch/x86_64/gdt.rs:102:23\n    |\n102 |         tss.call_once(|| TaskStateSegment::new());\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `TaskStateSegment::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/components/arch/x86_64/idt.rs:35:9\n   |\n22 |         let mut idt = Self(InterruptDescriptorTable::new());\n   |         ---------------------------------------------------- unnecessary `let` binding\n...\n35 |         idt\n   |         ^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n22 ~         \n23 | \n ...\n34 |         }\n35 ~         Self(InterruptDescriptorTable::new())\n   |\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/boot/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from an integer to a pointer\n  --> src/components/boot/x86_64.rs:65:19\n   |\n65 |         let ptr = mem::transmute(addr | VIRT_ADDR_START as u64);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(addr | VIRT_ADDR_START as u64) as *const u8`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n   = note: `#[warn(clippy::useless_transmute)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/boot/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n   --> src/components/boot/x86_64.rs:145:5\n    |\n145 | //     CpuId::new().get_feature_info().map(|features| {\n146 | ||         // Add OSXSave flag to cr4 register if supported\n147 | ||         if features.has_xsave() {\n148 | ||             unsafe {\n...   ||\n156 | ||         }\n157 | ||     });\n    | ||______^- help: try: `if let Some(features) = CpuId::new().get_feature_info() { ... }`\n    |  |______|\n    | \n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n    = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/boot/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `filter` for `Some` followed by `unwrap`\n   --> src/components/boot/x86_64.rs:186:10\n    |\n186 |           .filter(Option::is_some)\n    |  __________^\n187 | |         .map(Option::unwrap)\n    | |____________________________^ help: consider using `flatten` instead: `flatten()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_filter_map\n    = note: `#[warn(clippy::option_filter_map)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/instruction/x86_64/shutdown.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n --> src/components/instruction/x86_64/shutdown.rs:6:5\n  |\n6 |     loop {}\n  |     ^^^^^^^\n  |\n  = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n  = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/kcontext/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/x86_64.rs:149:1\n    |\n149 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/kcontext/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/x86_64.rs:170:1\n    |\n170 | / pub unsafe extern \"C\" fn context_switch_pt(\n171 | |     from: *mut KContext,\n172 | |     to: *const KContext,\n173 | |     pt_token: PageTable,\n174 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/pagetable/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/components/pagetable/x86_64.rs:64:1\n   |\n64 | impl Into<MappingFlags> for PTEFlags {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<components::pagetable::x86_64::PTEFlags>`\n   |\n64 ~ impl From<PTEFlags> for MappingFlags {\n65 ~     fn from(val: PTEFlags) -> Self {\n66 |         let mut res = MappingFlags::empty();\n67 ~         if val.contains(PTEFlags::RW) {\n68 |             res |= MappingFlags::W\n69 |         };\n70 ~         if val.contains(PTEFlags::US) {\n71 |             res |= MappingFlags::U\n72 |         };\n73 ~         if val.contains(PTEFlags::A) {\n74 |             res |= MappingFlags::A;\n75 |         }\n76 ~         if val.contains(PTEFlags::D) {\n77 |             res |= MappingFlags::D;\n78 |         }\n79 ~         if !val.contains(PTEFlags::XD) {\n   |\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/pagetable/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/components/pagetable/x86_64.rs:136:58\n    |\n136 |         pml4[0x1ff] = PTE((_boot_mapping_pdpt as usize - VIRT_ADDR_START as usize) | 0x3);\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `VIRT_ADDR_START`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1083,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/components/pagetable/aarch64.rs:206:10\n    |\n206 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/arch/aarch64/psci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n   --> src/components/arch/aarch64/psci.rs:98:5\n    |\n98  | /     loop {\n99  | |         // crate::arch::halt();\n100 | |     }\n    | |_____^\n    |\n    = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n    = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/kcontext/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/aarch64.rs:127:1\n    |\n127 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/kcontext/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/aarch64.rs:143:1\n    |\n143 | / pub unsafe extern \"C\" fn context_switch_pt(\n144 | |     from: *mut KContext,\n145 | |     to: *const KContext,\n146 | |     pt_token: PageTable,\n147 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/components/pagetable/aarch64.rs:17:32\n   |\n17 |         self.0 = (ppn << 10) | flags.bits() as usize;\n   |                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `flags.bits()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/components/pagetable/aarch64.rs:42:30\n   |\n42 |         Self(ppn.to_addr() | flags.bits() as usize)\n   |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `flags.bits()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/components/pagetable/aarch64.rs:67:1\n   |\n67 | impl Into<MappingFlags> for PTEFlags {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<components::pagetable::aarch64::PTEFlags>`\n   |\n67 ~ impl From<PTEFlags> for MappingFlags {\n68 ~     fn from(val: PTEFlags) -> Self {\n69 ~         if val.is_empty() {\n70 |             return MappingFlags::empty();\n ...\n73 | \n74 ~         if !val.contains(PTEFlags::AP_RO) {\n75 |             flags |= MappingFlags::W;\n76 |         }\n77 ~         if !val.contains(PTEFlags::UXN) || !val.contains(PTEFlags::PXN) {\n78 |             flags |= MappingFlags::X;\n79 |         }\n80 ~         if val.contains(PTEFlags::AP_EL0) {\n81 |             flags |= MappingFlags::U;\n82 |         }\n83 ~         if val.contains(PTEFlags::AF) {\n84 |             flags |= MappingFlags::A;\n85 |         }\n86 ~         if !val.contains(PTEFlags::NG) {\n   |\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1084,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/boot/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `DebugConsole`\n --> src/components/boot/loongarch64.rs:6:48\n  |\n6 |         debug_console::{display_info, println, DebugConsole},\n  |                                                ^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/kcontext/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/loongarch64.rs:134:1\n    |\n134 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/kcontext/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/loongarch64.rs:150:1\n    |\n150 | / pub unsafe extern \"C\" fn context_switch_pt(\n151 | |     from: *mut KContext,\n152 | |     to: *const KContext,\n153 | |     pt_token: PageTable,\n154 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/multicore/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting function pointer `crate::components::boot::_start_secondary` to `u64`\n --> src/components/multicore/loongarch64.rs:5:19\n  |\n5 |     csr_mail_send(crate::components::boot::_start_secondary as _, hart_id, 0);\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate::components::boot::_start_secondary as usize`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#fn_to_numeric_cast\n  = note: `#[warn(clippy::fn_to_numeric_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/components/timer/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/components/timer/loongarch64.rs:8:38\n  |\n8 | static FREQ: Lazy<usize> = Lazy::new(|| get_timer_freq());\n  |                                      ^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `get_timer_freq`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1085,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1086,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:32:58Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:32:58Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1087,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:33:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:33:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1088,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:33:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:33:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1089,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:33:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:33:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1105,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:34:38Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-09-28T15:34:38Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1106,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos-bwbench, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/net/bwbench\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.16\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.2.6\n   Compiling quote v1.0.36\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.72\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.18\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.17\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1111,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos-display, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/display\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling num-traits v0.2.19\n   Compiling az v1.2.1\n    Checking byteorder v1.5.0\n    Checking micromath v2.1.0\n    Checking float-cmp v0.9.0\n    Checking embedded-graphics-core v0.4.0\n    Checking embedded-graphics v0.8.1\n    Checking arceos-display v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry/apps/display)\nerror: could not compile `arceos-display` (bin \"arceos-display\")\n"
    },
    {
      "cmd_idx": 1118,
      "file": "apps/exception/src/main.rs",
      "kind": "Mirai",
      "raw": "warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> apps/exception/src/main.rs:13:9\n   |\n13 |         asm!(\"int3\");\n   |         ^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1155,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1156,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos-tls, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/task/tls\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling rustversion v1.0.17\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#d7d646ca)\n    Checking static_assertions v1.1.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1166,
      "file": "tools/axlibc/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> tools/axlibc/build.rs:44:15\n   |\n44 |           .args(&[\n   |  _______________^\n45 | |             \"-c\",\n46 | |             asm_file.to_str().unwrap(),\n47 | |             \"-o\",\n...  |\n51 | |             \"-mfpu=neon\",\n52 | |         ])\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\nhelp: change this to\n   |\n44 ~         .args([\n45 +             \"-c\",\n46 +             asm_file.to_str().unwrap(),\n47 +             \"-o\",\n48 +             asm_out_file.to_str().unwrap(),\n49 +             \"-target\",\n50 +             \"aarch64-unknown-none\",\n51 +             \"-mfpu=neon\",\n52 ~         ])\n   |\n\n"
    },
    {
      "cmd_idx": 1166,
      "file": "tools/axlibc/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> tools/axlibc/build.rs:60:15\n   |\n60 |           .args(&[\n   |  _______________^\n61 | |             \"crus\",\n62 | |             lib_out_file.to_str().unwrap(),\n63 | |             asm_out_file.to_str().unwrap(),\n64 | |         ])\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n60 ~         .args([\n61 +             \"crus\",\n62 +             lib_out_file.to_str().unwrap(),\n63 +             asm_out_file.to_str().unwrap(),\n64 ~         ])\n   |\n\n"
    },
    {
      "cmd_idx": 1168,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:36:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:36:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:36:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:36:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:36:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:36:26Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1169,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/axlibc\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.72\n    Checking bitflags v1.3.2\n    Checking log v0.4.22\n    Checking raw-cpuid v10.7.0\n   Compiling rustversion v1.0.17\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1171,
      "file": "src/device.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1174,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n     Locking 36 packages to latest compatible versions\n      Adding windows-core v0.52.0 (latest: v0.58.0)\n Downloading crates ...\n  Downloaded iana-time-zone v0.1.61\n  Downloaded chrono v0.4.38\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.38\n    Checking bwbench-client v0.1.0 (/home/runner/check/repos-default/Starry-OS/Starry/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"
    },
    {
      "cmd_idx": 1175,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=bwbench-client, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/bwbench_client\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/tools/bwbench_client/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/d2_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/mermaid_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1176,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/Starry-OS/Starry/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1177,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 1181,
      "file": "src/panic_wait.rs",
      "kind": "Clippy(Error)",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1181,
      "file": "src/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1181,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1181,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1181,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1181,
      "file": "unkonwn-but-maybe-important",
      "kind": "Clippy(Error)",
      "raw": "error: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\n"
    },
    {
      "cmd_idx": 1182,
      "file": "src/panic_wait.rs",
      "kind": "Mirai",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1182,
      "file": "src/cpu.rs",
      "kind": "Mirai",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1182,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1182,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1182,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1182,
      "file": "unkonwn-but-maybe-important",
      "kind": "Mirai",
      "raw": "error: language item required, but not found: `eh_personality`\n  |\n  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n\n"
    },
    {
      "cmd_idx": 1184,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 7 previous errors\n"
    },
    {
      "cmd_idx": 1185,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 7 previous errors\n"
    },
    {
      "cmd_idx": 1186,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nerror: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1190,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:216:64: 216:80 (#0) after dropped at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:136:21: 136:30 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:212:18: 212:90 (#0) after dropped at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:215:5: 215:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"
    },
    {
      "cmd_idx": 1191,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=monolithic_userboot, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/monolithic_userboot\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling libc v0.2.155\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1192,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/Starry-OS/Starry/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:34:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling unicode-ident v1.0.12\n   Compiling hashbrown v0.14.5\n   Compiling serde v1.0.204\n   Compiling autocfg v1.3.0\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.16\n   Compiling lock_api v0.4.12\n   Compiling indexmap v2.2.6\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.36\n   Compiling syn v2.0.72\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.17\n   Compiling toml_edit v0.22.18\n   Compiling libc v0.2.155\n   Compiling x86 v0.52.0\n   Compiling spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#d7d646ca)\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling unicode-width v0.1.13\n   Compiling kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n   Compiling svgbobdoc v0.3.0\n   Compiling x86_64 v0.15.1\n   Compiling paste v1.0.15\n   Compiling spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#769caa8b)\n   Compiling rlsf v0.2.1\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling x86_64 v0.14.12\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#f54b1eeb)\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling axalloc v0.1.0 (https://github.com/Starry-OS/axalloc.git#da0de65d)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling x2apic v0.4.3\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#47e771d7)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling version_check v0.9.5\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#fdf9d5ef)\n   Compiling nb v1.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#2bd62ee3)\n   Compiling nb v0.1.3\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling ahash v0.7.8\n   Compiling axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#4ae6b15a)\n   Compiling getrandom v0.2.15\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling zerocopy v0.7.35\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:216:64: 216:80 (#0) after dropped at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:136:21: 136:30 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:05Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n   Compiling axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling once_cell v1.19.0\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\n   Compiling zero v0.1.3\n   Compiling xmas-elf v0.9.1\n   Compiling embedded-hal v0.2.7\n   Compiling virtio-drivers v0.7.5\n   Compiling heapless v0.8.0\n   Compiling critical-section v1.1.2\n   Compiling elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n   Compiling hashbrown v0.11.2\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=b7134a3#b7134a31)\n   Compiling num_enum_derive v0.5.11\n   Compiling arch_boot v0.1.0 (https://github.com/Starry-OS/arch_boot.git#af6f0238)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling num_enum v0.5.11\n   Compiling axfs v0.1.0 (https://github.com/Starry-OS/axfs.git#74ba6295)\n   Compiling axfutex v0.1.0 (https://github.com/Starry-OS/axfutex.git#5eee19d0)\n   Compiling axmem v0.1.0 (https://github.com/Starry-OS/axmem.git#2e66a8ad)\n   Compiling axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#6ab9c7a7)\n   Compiling axnet v0.1.0 (https://github.com/Starry-OS/axnet.git#48d68eb8)\n   Compiling axruntime v0.1.0 (https://github.com/Starry-OS/axruntime.git#3ff4e76f)\n   Compiling axfeat v0.1.0 (https://github.com/Starry-OS/axfeat.git#a0d5a481)\n   Compiling linux_syscall_api v0.1.0 (https://github.com/Starry-OS/linux_syscall_api.git#bc828f33)\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:212:18: 212:90 (#0) after dropped at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:215:5: 215:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-28T15:37:11Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n   Compiling axtrap v0.1.0 (https://github.com/Starry-OS/axtrap.git#f2529e64)\n   Compiling axstarry v0.1.0 (https://github.com/Starry-OS/axstarry.git#a60752d1)\n   Compiling monolithic_userboot v0.1.0 (/home/runner/check/repos-default/Starry-OS/Starry/apps/monolithic_userboot)\nerror: linking with `cc` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/self-contained:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"cc\" \"-m64\" \"/tmp/rustcuHAhik/symbols.o\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps\" \"-L\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-e8b7e96e438f08f6.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-B/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/gcc-ld\" \"-fuse-ld=lld\" \"-Wl,--eh-frame-hdr\" \"-Wl,-z,noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/self-contained\" \"-o\" \"/home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\"\n  = note: rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by cpu.rs:3 (src/cpu.rs:3)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::cpu::CPU_ID_WRAPPER::read_current_raw::h13de9f7f52bb28b9)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against symbol '__PERCPU_SELF_PTR'; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by processor.rs:19 (src/processor.rs:19)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axtask::processor::PROCESSOR_WRAPPER::current_ptr::h142daf2a768c6382)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by processor.rs:19 (src/processor.rs:19)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axtask::processor::PROCESSOR_WRAPPER::current_ptr::h142daf2a768c6382)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by current.rs:145 (/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/d7d646c/src/current.rs:145)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(taskctx::current::CURRENT_TASK_PTR_WRAPPER::read_current_raw::h8f18f0e1d3f27e21)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by current.rs:182 (/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/d7d646c/src/current.rs:182)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(taskctx::current::CURRENT_TASK_PTR_WRAPPER::write_current_raw::h8b786b5cc5f571e3)\n          \n          rust-lld: error: undefined symbol: _stext\n          >>> referenced by mem.rs:82 (src/mem.rs:82)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:81 (src/mem.rs:81)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> did you mean: _etext\n          >>> defined in: <internal>\n          \n          rust-lld: error: undefined symbol: _srodata\n          >>> referenced by mem.rs:88 (src/mem.rs:88)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:87 (src/mem.rs:87)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _erodata\n          >>> referenced by mem.rs:89 (src/mem.rs:89)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:87 (src/mem.rs:87)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _sdata\n          >>> referenced by mem.rs:94 (src/mem.rs:94)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:93 (src/mem.rs:93)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: boot_stack\n          >>> referenced by mem.rs:100 (src/mem.rs:100)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:99 (src/mem.rs:99)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: boot_stack_top\n          >>> referenced by mem.rs:101 (src/mem.rs:101)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:99 (src/mem.rs:99)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mem.rs:106 (src/mem.rs:106)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:105 (src/mem.rs:105)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mem.rs:107 (src/mem.rs:107)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:105 (src/mem.rs:105)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: __PERCPU_KERNEL_RSP_OFFSET\n          >>> referenced by context.rs:158 (src/arch/x86_64/context.rs:158)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(first_into_user)\n          >>> referenced by context.rs:205 (src/arch/x86_64/context.rs:205)\n          >>>               /home/runner/check/repos-default/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::arch::x86_64::context::task_context_switch::h7033c5f59ed08aa7)\n          collect2: error: ld returned 1 exit status\n          \n\nerror: could not compile `monolithic_userboot` (bin \"monolithic_userboot\") due to 1 previous error\n"
    },
    {
      "cmd_idx": 1213,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1213,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1213,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1213,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1213,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1214,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1214,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1214,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1214,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1214,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1217,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1218,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1219,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1220,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1221,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded percpu v0.1.3\n  Downloaded rustversion v1.0.14\n  Downloaded axio v0.1.0\n  Downloaded memchr v2.5.0\n  Downloaded unicode-ident v1.0.11\n  Downloaded percpu_macros v0.1.2\n  Downloaded winnow v0.6.18\n  Downloaded syn v2.0.70\n  Downloaded toml_edit v0.22.20\n  Downloaded kernel_guard v0.1.1\n  Downloaded hashbrown v0.14.0\n  Downloaded page_table_entry v0.4.0\n  Downloaded num-traits v0.2.16\n  Downloaded memory_addr v0.3.1\n  Downloaded lock_api v0.4.10\n  Downloaded linkme-impl v0.3.27\n  Downloaded lazyinit v0.2.1\n  Downloaded int_ratio v0.1.0\n  Downloaded indexmap v2.0.0\n  Downloaded axerrno v0.1.0\n  Downloaded handler_table v0.1.1\n  Downloaded crate_interface v0.1.3\n  Downloaded linkme v0.3.27\n  Downloaded kspin v0.1.0\n  Downloaded dw_apb_uart v0.1.0\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.3\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.20\n    Checking memory_addr v0.3.1\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.1.0\n    Checking page_table_entry v0.4.0\n   Compiling num-traits v0.2.16\n    Checking arm_gicv2 v0.1.0\n    Checking arm_pl011 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking int_ratio v0.1.0\n    Checking static_assertions v1.1.0\n    Checking lazyinit v0.2.1\n    Checking handler_table v0.1.1\n   Compiling axerrno v0.1.0\n    Checking axio v0.1.0\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1222,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking memory_addr v0.3.1\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n    Checking dw_apb_uart v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking arm_gicv2 v0.1.0\n    Checking arm_pl011 v0.1.0\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking int_ratio v0.1.0\n    Checking handler_table v0.1.1\n    Checking lazyinit v0.2.1\n    Checking static_assertions v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking axio v0.1.0\n    Checking chrono v0.4.38\n    Checking page_table_entry v0.4.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1223,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling tock-registers v0.8.1\n   Compiling syn v2.0.70\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.20\n   Compiling bitflags v2.6.0\n   Compiling memory_addr v0.3.1\n   Compiling autocfg v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling page_table_entry v0.4.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling arm_pl011 v0.1.0\n   Compiling dw_apb_uart v0.1.0\n   Compiling static_assertions v1.1.0\n   Compiling lazyinit v0.2.1\n   Compiling handler_table v0.1.1\n   Compiling int_ratio v0.1.0\n   Compiling axerrno v0.1.0\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1224,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling bitflags v2.6.0\n   Compiling kernel_guard v0.1.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling kspin v0.1.0\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling memory_addr v0.3.1\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling dw_apb_uart v0.1.0\n   Compiling arm_pl011 v0.1.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling lazyinit v0.2.1\n   Compiling handler_table v0.1.1\n   Compiling int_ratio v0.1.0\n   Compiling static_assertions v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling page_table_entry v0.4.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1229,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1229,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1229,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1229,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1229,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1230,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1230,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1230,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1230,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1230,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1233,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1234,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1235,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:39:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:39:04Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1236,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:39:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:39:04Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1237,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded clang-sys v1.6.1\n  Downloaded shlex v1.1.0\n  Downloaded prettyplease v0.2.12\n  Downloaded regex v1.9.3\n  Downloaded aho-corasick v1.0.4\n  Downloaded which v4.4.0\n  Downloaded regex-automata v0.3.6\n  Downloaded libc v0.2.147\n  Downloaded regex-syntax v0.7.4\n  Downloaded flatten_objects v0.1.0\n  Downloaded itertools v0.10.5\n  Downloaded libloading v0.7.4\n  Downloaded either v1.9.0\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling glob v0.3.1\n   Compiling toml_edit v0.22.20\n   Compiling memchr v2.5.0\n   Compiling percpu v0.1.3\n   Compiling libc v0.2.147\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling num-traits v0.2.16\n   Compiling cfg-if v1.0.0\n   Compiling regex-syntax v0.7.4\n   Compiling minimal-lexical v0.2.1\n   Compiling either v1.9.0\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling libloading v0.7.4\n   Compiling lock_api v0.4.10\n   Compiling bindgen v0.69.4\n   Compiling regex v1.9.3\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling linkme-impl v0.3.27\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling cexpr v0.6.0\n   Compiling itertools v0.10.5\n   Compiling which v4.4.0\n    Checking linkme v0.3.27\n   Compiling rustc-hash v1.1.0\n   Compiling lazy_static v1.5.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1238,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n    Checking scopeguard v1.2.0\n   Compiling shlex v1.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling bitflags v2.6.0\n   Compiling axerrno v0.1.0\n   Compiling log v0.4.21\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1239,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling memchr v2.5.0\n   Compiling libc v0.2.147\n   Compiling toml_edit v0.22.20\n   Compiling glob v0.3.1\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling num-traits v0.2.16\n   Compiling either v1.9.0\n   Compiling regex-syntax v0.7.4\n   Compiling cfg-if v1.0.0\n   Compiling minimal-lexical v0.2.1\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling libloading v0.7.4\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling lock_api v0.4.10\n   Compiling bindgen v0.69.4\n   Compiling regex v1.9.3\n   Compiling cexpr v0.6.0\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling which v4.4.0\n   Compiling linkme v0.3.27\n   Compiling itertools v0.10.5\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1240,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling lazycell v1.3.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling shlex v1.1.0\n   Compiling log v0.4.21\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling bitflags v2.6.0\n   Compiling lazy_static v1.5.0\n   Compiling axerrno v0.1.0\nFor more information about this error, try `rustc --explain E0425`.\n   Compiling rustc-hash v1.1.0\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1245,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1246,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1247,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1248,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1249,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1250,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1251,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1252,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1269,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1269,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1269,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1269,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1269,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1270,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1270,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1270,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1270,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1270,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1273,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1274,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1275,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1276,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1277,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded virtio-drivers v0.7.4\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n    Checking byteorder v1.4.3\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n    Checking axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1278,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking byteorder v1.4.3\n    Checking axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n    Checking axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking zerocopy v0.7.35\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1279,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling byteorder v1.4.3\n   Compiling axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling zerocopy-derive v0.7.35\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling zerocopy v0.7.35\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1280,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling byteorder v1.4.3\n   Compiling axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling zerocopy v0.7.35\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1285,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1285,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1285,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1285,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1285,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1286,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1286,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1286,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1286,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1286,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1289,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1290,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1291,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1292,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1293,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdma\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded page_table_multiarch v0.4.0\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.20\n   Compiling unicode-width v0.1.10\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n    Checking page_table_multiarch v0.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1294,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdma\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n    Checking rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking kspin v0.1.0\n    Checking linkme v0.3.27\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking page_table_multiarch v0.4.0\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1295,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdma\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.20\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling unicode-width v0.1.10\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling page_table_multiarch v0.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling rlsf v0.2.1\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1296,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdma\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n   Compiling rlsf v0.2.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling kspin v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling page_table_multiarch v0.4.0\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1301,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1301,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1301,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1301,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1301,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1302,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1302,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1302,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1302,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1302,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1305,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1306,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1307,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1308,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1309,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling zerocopy-derive v0.7.35\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\n    Checking zerocopy v0.7.35\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1310,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n    Checking zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1311,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling zerocopy-derive v0.7.35\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling linkme-impl v0.3.27\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling zerocopy v0.7.35\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1312,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1317,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1317,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1317,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1317,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1317,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1318,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1318,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1318,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1318,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1318,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1321,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1322,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1323,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1324,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1325,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1326,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1327,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1328,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/api/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1333,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1333,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1333,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1333,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1333,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1334,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1334,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1334,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1334,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1334,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1335,
      "file": "modules/axfs/src/api/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1335,
      "file": "modules/axfs/src/fops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1336,
      "file": "modules/axfs/src/api/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1336,
      "file": "modules/axfs/src/fops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1337,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1338,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1339,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1340,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1341,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling axerrno v0.1.0\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling lock_api v0.4.10\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking zerocopy v0.7.35\n    Checking axfs_vfs v0.1.1\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n    Checking axio v0.1.0\n    Checking spin v0.9.8\n    Checking cap_access v0.1.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1342,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded axfs_vfs v0.1.1\n  Downloaded cap_access v0.1.0\n  Downloaded axfs_devfs v0.1.1\n  Downloaded timer_list v0.1.0\n  Downloaded axfs_ramfs v0.1.1\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling axerrno v0.1.0\n   Compiling toml_edit v0.22.20\n   Compiling percpu v0.1.3\n   Compiling lock_api v0.4.10\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.1\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n    Checking axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\n    Checking axio v0.1.0\n    Checking cap_access v0.1.0\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling zerocopy-derive v0.7.35\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1343,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling lock_api v0.4.10\n   Compiling toml_edit v0.22.20\n   Compiling scopeguard v1.2.0\n   Compiling spin v0.9.8\n   Compiling axfs_vfs v0.1.1\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axfs_devfs v0.1.1\n   Compiling axfs_ramfs v0.1.1\n   Compiling axio v0.1.0\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling cap_access v0.1.0\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling kernel_guard v0.1.1\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1344,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axerrno v0.1.0\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling lock_api v0.4.10\n   Compiling zerocopy v0.7.35\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axfs_vfs v0.1.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1349,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1349,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1349,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1349,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1349,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1350,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1350,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1350,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1350,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1350,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1352,
      "file": "modules/axhal/src/arch/x86_64/context.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TaskContext`\n   --> modules/axhal/src/arch/x86_64/context.rs:148:5\n    |\n148 | /     pub const fn new() -> Self {\n149 | |         Self {\n150 | |             kstack_top: va!(0),\n151 | |             rsp: 0,\n...   |\n155 | |         }\n156 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n146 + impl Default for TaskContext {\n147 +     fn default() -> Self {\n148 +         Self::new()\n149 +     }\n150 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1353,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1354,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1355,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1356,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1357,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1358,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1359,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1360,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1365,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1365,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1365,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1365,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1365,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1366,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1366,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1366,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1366,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1366,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1369,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1370,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1371,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1372,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1373,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling glob v0.3.1\n   Compiling toml_edit v0.22.20\n   Compiling libc v0.2.147\n   Compiling memchr v2.5.0\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling either v1.9.0\n   Compiling regex-syntax v0.7.4\n   Compiling cfg-if v1.0.0\n   Compiling minimal-lexical v0.2.1\n   Compiling percpu v0.1.3\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling libloading v0.7.4\n   Compiling bindgen v0.69.4\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling cexpr v0.6.0\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling regex v1.9.3\n    Checking linkme v0.3.27\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n   Compiling num-traits v0.2.16\n   Compiling lazycell v1.3.0\n   Compiling bitflags v2.6.0\n   Compiling rustc-hash v1.1.0\n   Compiling shlex v1.1.0\n   Compiling lazy_static v1.5.0\n   Compiling log v0.4.21\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1374,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1375,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling glob v0.3.1\n   Compiling toml_edit v0.22.20\n   Compiling memchr v2.5.0\n   Compiling libc v0.2.147\n   Compiling clang-sys v1.6.1\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling prettyplease v0.2.12\n   Compiling cfg-if v1.0.0\n   Compiling percpu v0.1.3\n   Compiling regex-syntax v0.7.4\n   Compiling minimal-lexical v0.2.1\n   Compiling either v1.9.0\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling libloading v0.7.4\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling bindgen v0.69.4\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling cexpr v0.6.0\n   Compiling regex v1.9.3\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling itertools v0.10.5\n   Compiling linkme v0.3.27\n   Compiling which v4.4.0\n   Compiling num-traits v0.2.16\n   Compiling lazycell v1.3.0\n   Compiling shlex v1.1.0\n   Compiling log v0.4.21\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazy_static v1.5.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1376,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bindgen v0.69.4\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling axerrno v0.1.0\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:42:42Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n"
    },
    {
      "cmd_idx": 1385,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1386,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1387,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1388,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1393,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1393,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1393,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1393,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1393,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1394,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1394,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1394,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1394,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1394,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1397,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1398,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1399,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1400,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1401,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axmm\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n    Checking rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking kspin v0.1.0\n    Checking linkme v0.3.27\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1402,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axmm\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.20\n   Compiling unicode-width v0.1.10\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1403,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axmm\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v1.0.109\n   Compiling syn v2.0.70\n   Compiling toml_edit v0.22.20\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.10\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling svgbobdoc v0.3.0\n   Compiling rlsf v0.2.1\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1404,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axmm\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1405,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1406,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1407,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1408,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1409,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1409,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1409,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1409,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1409,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1410,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1410,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1410,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1410,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1410,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1411,
      "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1412,
      "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1413,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1414,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1415,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1416,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-28T15:43:57Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:138:13: 138:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:77:13: 77:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:141:13: 141:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:138:13: 138:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:77:13: 77:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:141:13: 141:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-09-28T15:43:57Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1417,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling lock_api v0.4.10\n    Checking kspin v0.1.0\n    Checking zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n    Checking hash32 v0.2.1\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n    Checking spin v0.9.8\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1418,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded rustc_version v0.4.0\n  Downloaded version_check v0.9.4\n  Downloaded hash32 v0.2.1\n  Downloaded heapless v0.7.16\n  Downloaded thiserror-impl v1.0.47\n  Downloaded defmt-parser v0.3.3\n  Downloaded defmt v0.3.5\n  Downloaded thiserror v1.0.47\n  Downloaded semver v1.0.18\n  Downloaded defmt-macros v0.3.6\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling semver v1.0.18\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling autocfg v1.1.0\n   Compiling lock_api v0.4.10\n   Compiling rustc_version v0.4.0\n   Compiling heapless v0.7.16\n   Compiling axerrno v0.1.0\n    Checking spin v0.9.8\n    Checking hash32 v0.2.1\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n    Checking axdriver_net v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling zerocopy-derive v0.7.35\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1419,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling semver v1.0.18\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling percpu v0.1.3\n   Compiling lock_api v0.4.10\n   Compiling rustc_version v0.4.0\n   Compiling heapless v0.7.16\n   Compiling axerrno v0.1.0\n   Compiling spin v0.9.8\n   Compiling hash32 v0.2.1\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling axdriver v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axdriver)\n   Compiling stable_deref_trait v1.2.0\n   Compiling axdriver_net v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1420,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling lock_api v0.4.10\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling hash32 v0.2.1\n   Compiling stable_deref_trait v1.2.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1425,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1425,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1425,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1425,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1425,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1426,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1426,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1426,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1426,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1426,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1429,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1430,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1431,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1432,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1433,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling toml_edit v0.22.20\n   Compiling percpu v0.1.3\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1434,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1435,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling chrono v0.4.38\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1436,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling num-traits v0.2.16\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1441,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1441,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1441,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1441,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1441,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1442,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1442,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1442,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1442,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1442,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1445,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1446,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1447,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1448,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1449,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking chrono v0.4.38\n    Checking axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1450,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking axio v0.1.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1451,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling axio v0.1.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1452,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/ulib/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling chrono v0.4.38\n   Compiling axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1457,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1457,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1457,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1457,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1457,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1458,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1458,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1458,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1458,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1458,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1461,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1462,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1463,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1464,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1465,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1466,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1467,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1468,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1473,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1473,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1473,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1473,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1473,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1474,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1474,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1474,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1474,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1474,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1477,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1478,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1479,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1480,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:38:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1481,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1482,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1483,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1484,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/modules/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:38:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1486,
      "file": "src/device.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1489,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n     Locking 36 packages to latest compatible versions\n      Adding windows-core v0.52.0 (latest: v0.58.0)\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.38\n    Checking bwbench-client v0.1.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"
    },
    {
      "cmd_idx": 1490,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=bwbench-client, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/bwbench_client\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\nerror: failed to run custom build command for `libc v0.2.159`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/arceos-org/arceos/tools/bwbench_client/target/debug/build/libc-82add201c3d4e665/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.159/build.rs:253:9:\n  Failed to get rustc version\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/d2_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/mermaid_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1491,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/arceos-org/arceos/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 1499,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1499,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1499,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1499,
      "file": "src/cpu.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1500,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1500,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1500,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1500,
      "file": "src/cpu.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1501,
      "file": "src/panic_wait.rs",
      "kind": "Clippy(Error)",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1501,
      "file": "src/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1501,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1501,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1501,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1502,
      "file": "src/panic_wait.rs",
      "kind": "Clippy(Error)",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1502,
      "file": "src/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1502,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1502,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1502,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1507,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded aarch64-cpu v9.0.0\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1508,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1509,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1510,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1511,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nSome errors have detailed explanations: E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 1 warning\nerror: could not compile `mingo` (bin \"kernel\") due to 3 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1512,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nSome errors have detailed explanations: E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 1 warning\nerror: could not compile `mingo` (bin \"kernel\") due to 3 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1513,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1514,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling mingo v0.6.0 (/home/runner/check/repos-default/arceos-org/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1515,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1515,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n"
    },
    {
      "cmd_idx": 1515,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n"
    },
    {
      "cmd_idx": 1515,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1515,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
    },
    {
      "cmd_idx": 1515,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1515,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1515,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: module has the same name as its containing module\n --> src/e1000/mod.rs:1:1\n  |\n1 | mod e1000;\n  | ^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception\n  = note: `#[warn(clippy::module_inception)]` on by default\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `tx_ring`\n   --> src/e1000/e1000.rs:117:18\n    |\n117 |         for i in 0..TX_RING_SIZE {\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n117 |         for <item> in tx_ring.iter_mut().take(TX_RING_SIZE) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `rx_ring`\n   --> src/e1000/e1000.rs:132:18\n    |\n132 |         for i in 0..RX_RING_SIZE {\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n132 |         for <item> in rx_ring.iter_mut().take(RX_RING_SIZE) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> src/e1000/e1000.rs:359:12\n    |\n359 |         if recv_packets.len() > 0 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!recv_packets.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000_const.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n --> src/e1000/e1000_const.rs:5:37\n  |\n5 | pub(crate) const E1000_CTL: usize = 0x00000 / 4; /* Device Control Register - RW */\n  |                                     ^^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n  = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/pci.rs:45:24\n   |\n45 |             pci_config[4 + 0].write(E1000_REGS);\n   |                        ^^^^^ help: consider reducing it to: `4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_tx_ring_pages` should have an upper case name\n  --> src/e1000/e1000.rs:14:7\n   |\n14 | const alloc_tx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_RING_PAGES`\n   |\n   = note: `#[warn(non_upper_case_globals)]` on by default\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_rx_ring_pages` should have an upper case name\n  --> src/e1000/e1000.rs:16:7\n   |\n16 | const alloc_rx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_RING_PAGES`\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_tx_buffer_pages` should have an upper case name\n  --> src/e1000/e1000.rs:19:7\n   |\n19 | const alloc_tx_buffer_pages: usize = ((TX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_BUFFER_PAGES`\n\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_rx_buffer_pages` should have an upper case name\n  --> src/e1000/e1000.rs:20:7\n   |\n20 | const alloc_rx_buffer_pages: usize = ((RX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_BUFFER_PAGES`\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: module has the same name as its containing module\n --> src/e1000/mod.rs:1:1\n  |\n1 | mod e1000;\n  | ^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception\n  = note: `#[warn(clippy::module_inception)]` on by default\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `tx_ring`\n   --> src/e1000/e1000.rs:117:18\n    |\n117 |         for i in 0..TX_RING_SIZE {\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n117 |         for <item> in tx_ring.iter_mut().take(TX_RING_SIZE) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `rx_ring`\n   --> src/e1000/e1000.rs:132:18\n    |\n132 |         for i in 0..RX_RING_SIZE {\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n132 |         for <item> in rx_ring.iter_mut().take(RX_RING_SIZE) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> src/e1000/e1000.rs:359:12\n    |\n359 |         if recv_packets.len() > 0 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!recv_packets.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000_const.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n --> src/e1000/e1000_const.rs:5:37\n  |\n5 | pub(crate) const E1000_CTL: usize = 0x00000 / 4; /* Device Control Register - RW */\n  |                                     ^^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n  = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/pci.rs:45:24\n   |\n45 |             pci_config[4 + 0].write(E1000_REGS);\n   |                        ^^^^^ help: consider reducing it to: `4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_tx_ring_pages` should have an upper case name\n  --> src/e1000/e1000.rs:14:7\n   |\n14 | const alloc_tx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_RING_PAGES`\n   |\n   = note: `#[warn(non_upper_case_globals)]` on by default\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_rx_ring_pages` should have an upper case name\n  --> src/e1000/e1000.rs:16:7\n   |\n16 | const alloc_rx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_RING_PAGES`\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_tx_buffer_pages` should have an upper case name\n  --> src/e1000/e1000.rs:19:7\n   |\n19 | const alloc_tx_buffer_pages: usize = ((TX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_BUFFER_PAGES`\n\n"
    },
    {
      "cmd_idx": 1518,
      "file": "src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_rx_buffer_pages` should have an upper case name\n  --> src/e1000/e1000.rs:20:7\n   |\n20 | const alloc_rx_buffer_pages: usize = ((RX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_BUFFER_PAGES`\n\n"
    },
    {
      "cmd_idx": 1519,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:46:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:46:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1520,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:46:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:46:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1521,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=e1000-driver, checker=Clippy\n// toolchain=nightly-2023-02-23, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/elliott10/e1000-driver\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded log v0.4.22\n  Downloaded volatile v0.3.0\n    Checking volatile v0.3.0\n    Checking log v0.4.22\n    Checking e1000-driver v0.2.0 (/home/runner/check/repos-default/elliott10/e1000-driver)\nerror: could not compile `e1000-driver` due to 2 previous errors; 9 warnings emitted\n"
    },
    {
      "cmd_idx": 1522,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=e1000-driver, checker=Clippy\n// toolchain=nightly-2023-02-23, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/elliott10/e1000-driver\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking volatile v0.3.0\n    Checking log v0.4.22\n    Checking e1000-driver v0.2.0 (/home/runner/check/repos-default/elliott10/e1000-driver)\nerror: could not compile `e1000-driver` due to 2 previous errors; 9 warnings emitted\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1523,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1524,
      "file": "/home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_tx_ring_pages` should have an upper case name\n  --> /home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs:14:7\n   |\n14 | const alloc_tx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_RING_PAGES`\n   |\n   = note: `#[warn(non_upper_case_globals)]` on by default\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "/home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_rx_ring_pages` should have an upper case name\n  --> /home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs:16:7\n   |\n16 | const alloc_rx_ring_pages: usize =\n   |       ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_RING_PAGES`\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "/home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_tx_buffer_pages` should have an upper case name\n  --> /home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs:19:7\n   |\n19 | const alloc_tx_buffer_pages: usize = ((TX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_TX_BUFFER_PAGES`\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "/home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `alloc_rx_buffer_pages` should have an upper case name\n  --> /home/runner/check/repos-default/elliott10/e1000-driver/src/e1000/e1000.rs:20:7\n   |\n20 | const alloc_rx_buffer_pages: usize = ((RX_RING_SIZE * MBUF_SIZE) + (PAGE_SIZE - 1)) / PAGE_SIZE;\n   |       ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to upper case: `ALLOC_RX_BUFFER_PAGES`\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `vec`\n --> src/e1000.rs:1:25\n  |\n1 | use alloc::{boxed::Box, vec};\n  |                         ^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `boxed::Box`, `vec`\n  --> src/main.rs:17:13\n   |\n17 | use alloc::{boxed::Box, format, vec, vec::Vec};\n   |             ^^^^^^^^^^          ^^^\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `boxed::Box`, `vec`\n  --> src/main.rs:17:13\n   |\n17 | use alloc::{boxed::Box, format, vec, vec::Vec};\n   |             ^^^^^^^^^^          ^^^\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/boot/sbi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: value assigned to `ret` is never read\n  --> src/boot/sbi.rs:20:23\n   |\n20 |              lateout(\"x10\") ret,\n   |                             ^^^\n   |\n   = help: maybe it is overwritten before being read?\n   = note: `#[warn(unused_assignments)]` on by default\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: value assigned to `cycle` is never read\n   --> src/e1000.rs:101:13\n    |\n101 |     let mut cycle: u64 = 0;\n    |             ^^^^^\n    |\n    = help: maybe it is overwritten before being read?\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n   --> src/main.rs:151:21\n    |\n151 |                 let mut e1000_device =\n    |                     ----^^^^^^^^^^^^\n    |                     |\n    |                     help: remove this `mut`\n    |\n    = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/boot/sbi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n --> src/boot/sbi.rs:8:2\n  |\n8 |     return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n  = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n  |\n8 -     return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n8 +     sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0)\n  |\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/e1000.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `buf`\n  --> src/e1000.rs:81:14\n   |\n81 |     for i in 0..len {\n   |              ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n   = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n   |\n81 |     for (i, <item>) in buf.iter().enumerate().take(len) {\n   |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1524,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused `core::result::Result` that must be used\n  --> src/main.rs:31:5\n   |\n31 |     logger::init(\"DEBUG\");\n   |     ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\n   = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n31 |     let _ = logger::init(\"DEBUG\");\n   |     +++++++\n\n"
    },
    {
      "cmd_idx": 1525,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:46:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:46:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/ext4fs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/ext4fs.rs (original lines from 96 to 96)\n-\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1526,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1526,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/src/lib.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/ext4fs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/ext4fs.rs (original lines from 96 to 96)\n-\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1527,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1527,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/src/lib.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 1528,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:16:19\n   |\n16 |             .args(&[\"submodule\", \"update\", \"--init\", \"--recursive\"])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"submodule\", \"update\", \"--init\", \"--recursive\"]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n"
    },
    {
      "cmd_idx": 1528,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: spawned process is never `wait()`ed on\n  --> build.rs:22:9\n   |\n22 | /         Command::new(\"git\")\n23 | |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n24 | |             .current_dir(c_path.clone())\n25 | |             .spawn()\n26 | |             .expect(\"failed to execute process: git apply patch\");\n   | |                                                                 ^- help: try: `.wait()`\n   | |_________________________________________________________________|\n   |\n   |\n   = note: not doing so might leave behind zombie processes\n   = note: see https://doc.rust-lang.org/stable/std/process/struct.Child.html#warning\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zombie_processes\n   = note: `#[warn(clippy::zombie_processes)]` on by default\n\n"
    },
    {
      "cmd_idx": 1528,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:23:19\n   |\n23 |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"apply\", lwext4_patch.to_str().unwrap()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1528,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:40:19\n   |\n40 |               .args(&[\n   |  ___________________^\n41 | |                 \"musl-generic\",\n42 | |                 \"-C\",\n43 | |                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 | |             ])\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n40 ~             .args([\n41 +                 \"musl-generic\",\n42 +                 \"-C\",\n43 +                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 ~             ])\n   |\n\n"
    },
    {
      "cmd_idx": 1528,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:45:18\n   |\n45 |             .arg(&format!(\"ARCH={}\", arch))\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!(\"ARCH={}\", arch)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1529,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:16:19\n   |\n16 |             .args(&[\"submodule\", \"update\", \"--init\", \"--recursive\"])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"submodule\", \"update\", \"--init\", \"--recursive\"]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n"
    },
    {
      "cmd_idx": 1529,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: spawned process is never `wait()`ed on\n  --> build.rs:22:9\n   |\n22 | /         Command::new(\"git\")\n23 | |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n24 | |             .current_dir(c_path.clone())\n25 | |             .spawn()\n26 | |             .expect(\"failed to execute process: git apply patch\");\n   | |                                                                 ^- help: try: `.wait()`\n   | |_________________________________________________________________|\n   |\n   |\n   = note: not doing so might leave behind zombie processes\n   = note: see https://doc.rust-lang.org/stable/std/process/struct.Child.html#warning\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zombie_processes\n   = note: `#[warn(clippy::zombie_processes)]` on by default\n\n"
    },
    {
      "cmd_idx": 1529,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:23:19\n   |\n23 |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"apply\", lwext4_patch.to_str().unwrap()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1529,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:40:19\n   |\n40 |               .args(&[\n   |  ___________________^\n41 | |                 \"musl-generic\",\n42 | |                 \"-C\",\n43 | |                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 | |             ])\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n40 ~             .args([\n41 +                 \"musl-generic\",\n42 +                 \"-C\",\n43 +                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 ~             ])\n   |\n\n"
    },
    {
      "cmd_idx": 1529,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:45:18\n   |\n45 |             .arg(&format!(\"ARCH={}\", arch))\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!(\"ARCH={}\", arch)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1531,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-01T01:55:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:55:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1532,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-01T01:55:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:55:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1533,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded printf-compat v0.1.1\n  Downloaded log v0.4.21\n  Downloaded itertools v0.9.0\n  Downloaded either v1.10.0\n  Downloaded cty v0.2.2\n  Downloaded cstr_core v0.2.6\n    Checking either v1.10.0\n    Checking memchr v2.7.2\n    Checking cty v0.2.2\n    Checking bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking log v0.4.21\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking printf-compat v0.1.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-22c51495e4231bf5/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
    },
    {
      "cmd_idx": 1534,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking either v1.10.0\n    Checking memchr v2.7.2\n    Checking cty v0.2.2\n    Checking bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking log v0.4.21\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-22c51495e4231bf5/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1535,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking cty v0.2.2\n    Checking memchr v2.7.2\n    Checking either v1.10.0\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking printf-compat v0.1.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1536,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.2\n   Compiling either v1.10.0\n   Compiling cty v0.2.2\n   Compiling bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n   Compiling log v0.4.21\n[2024-10-01T01:55:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:55:33Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling itertools v0.9.0\n   Compiling cstr_core v0.2.6\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x5617a08a1e65 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5617a08a1e65 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5617a08a1e65 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5617a08a1e65 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5617a08c477b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5617a08c477b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5617a089f73f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5617a08a1c3e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5617a08a1c3e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5617a08a2fa9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5617a08a2ced - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5617a08a3463 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5617a08a330b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5617a08a2329 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5617a08a3077 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5617a08c3913 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5617a08c39bc - core::panicking::panic::h6eb78686f8ac2d4f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:146:5\n    17:     0x5617a0881dc9 - build_script_build::main::hb79145acecc10057\n                                 at /home/runner/check/batch_1/elliott10/lwext4_rust/build.rs:48:9\n    18:     0x5617a0879fab - core::ops::function::FnOnce::call_once::h84e42131003e39e5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    19:     0x5617a087d8ee - std::sys_common::backtrace::__rust_begin_short_backtrace::h19d6e1177e7662f4\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    20:     0x5617a087e011 - std::rt::lang_start::{{closure}}::hc791113ae1b869f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    21:     0x5617a089c5fd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    22:     0x5617a089c5fd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    23:     0x5617a089c5fd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    24:     0x5617a089c5fd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    25:     0x5617a089c5fd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    26:     0x5617a089c5fd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    27:     0x5617a089c5fd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    28:     0x5617a089c5fd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    29:     0x5617a089c5fd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    30:     0x5617a087dfea - std::rt::lang_start::h456336f111e3970b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    31:     0x5617a088264e - main\n    32:     0x7f60ac029d90 - <unknown>\n    33:     0x7f60ac029e40 - __libc_start_main\n    34:     0x5617a08785a5 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1537,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling either v1.10.0\n   Compiling cty v0.2.2\n   Compiling memchr v2.7.2\n   Compiling bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n   Compiling log v0.4.21\n[2024-10-01T01:55:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-01T01:55:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling itertools v0.9.0\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x5561d87fae65 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5561d87fae65 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5561d87fae65 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5561d87fae65 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5561d881d77b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5561d881d77b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5561d87f873f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5561d87fac3e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5561d87fac3e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5561d87fbfa9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5561d87fbced - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5561d87fc463 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5561d87fc30b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5561d87fb329 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5561d87fc077 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5561d881c913 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5561d881c9bc - core::panicking::panic::h6eb78686f8ac2d4f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:146:5\n    17:     0x5561d87dadc9 - build_script_build::main::hb79145acecc10057\n                                 at /home/runner/check/batch_1/elliott10/lwext4_rust/build.rs:48:9\n    18:     0x5561d87d2fab - core::ops::function::FnOnce::call_once::h84e42131003e39e5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    19:     0x5561d87d68ee - std::sys_common::backtrace::__rust_begin_short_backtrace::h19d6e1177e7662f4\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    20:     0x5561d87d7011 - std::rt::lang_start::{{closure}}::hc791113ae1b869f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    21:     0x5561d87f55fd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    22:     0x5561d87f55fd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    23:     0x5561d87f55fd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    24:     0x5561d87f55fd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    25:     0x5561d87f55fd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    26:     0x5561d87f55fd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    27:     0x5561d87f55fd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    28:     0x5561d87f55fd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    29:     0x5561d87f55fd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    30:     0x5561d87d6fea - std::rt::lang_start::h456336f111e3970b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    31:     0x5561d87db64e - main\n    32:     0x7f5e29e29d90 - <unknown>\n    33:     0x7f5e29e29e40 - __libc_start_main\n    34:     0x5561d87d15a5 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/ext4fs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/ext4fs.rs (original lines from 96 to 96)\n-\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1538,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/repos-default/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1540,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-28T15:46:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:46:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1541,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust_examples, checker=Clippy\n// toolchain=nightly-2024-01-31, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/elliott10/lwext4_rust/examples\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/rcore-os/device_tree-rs`\n    Updating git repository `https://github.com/elliott10/pci-rs.git`\n    Updating git repository `https://github.com/rcore-os/virtio-drivers.git`\n Downloading crates ...\n  Downloaded linked_list_allocator v0.10.5\n  Downloaded spinning_top v0.2.5\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n    Checking nb v1.1.0\n    Checking scopeguard v1.2.0\n    Checking cty v0.2.2\n    Checking either v1.13.0\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking memchr v2.7.4\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking nb v0.1.3\n   Compiling riscv v0.8.0\n    Checking byteorder v1.5.0\n   Compiling lock_api v0.4.12\n   Compiling quote v1.0.37\n    Checking void v1.0.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/repos-default/elliott10/lwext4_rust)\n   Compiling syn v2.0.79\n    Checking spinning_top v0.2.5\n    Checking embedded-hal v0.2.7\n    Checking printf-compat v0.1.1\n    Checking bare-metal v1.0.0\n    Checking bit_field v0.10.2\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/repos-default/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos-default/elliott10/lwext4_rust/examples/target/debug/build/lwext4_rust-8d15ae361fc9c16c/build-script-build` (exit status: 101)\n  --- stdout\n  make[1]: Entering directory '/home/runner/check/repos-default/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make[1]: Leaving directory '/home/runner/check/repos-default/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make[1]: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at /home/runner/check/repos-default/elliott10/lwext4_rust/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1542,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust_examples, checker=Lockbud\n// toolchain=nightly-2024-01-31, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/repos-default/elliott10/lwext4_rust/examples\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\nwarning: `/home/runner/check/repos-default/elliott10/lwext4_rust/examples/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/repos-default/elliott10/lwext4_rust/examples/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling scopeguard v1.2.0\n   Compiling either v1.13.0\n   Compiling memchr v2.7.4\n   Compiling nb v1.1.0\n   Compiling log v0.4.22\n[2024-09-28T15:46:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-28T15:46:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling cty v0.2.2\n   Compiling cstr_core v0.2.6\n   Compiling nb v0.1.3\n   Compiling itertools v0.9.0\n   Compiling lock_api v0.4.12\n   Compiling riscv v0.8.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/repos-default/elliott10/lwext4_rust)\n   Compiling printf-compat v0.1.1\n   Compiling embedded-hal v0.2.7\n   Compiling spinning_top v0.2.5\n   Compiling bare-metal v1.0.0\n   Compiling spin v0.9.8\n   Compiling bit_field v0.10.2\n   Compiling bitflags v2.6.0\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/repos-default/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/repos-default/elliott10/lwext4_rust/examples/target/debug/build/lwext4_rust-8d15ae361fc9c16c/build-script-build` (exit status: 101)\n  --- stdout\n  make[1]: Entering directory '/home/runner/check/repos-default/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make[1]: Leaving directory '/home/runner/check/repos-default/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make[1]: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at /home/runner/check/repos-default/elliott10/lwext4_rust/build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x55b250e54e95 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55b250e54e95 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55b250e54e95 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55b250e54e95 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55b250e777ab - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55b250e777ab - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55b250e5276f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55b250e54c6e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55b250e54c6e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55b250e55fd9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55b250e55d1d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55b250e56493 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55b250e5633b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55b250e55359 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55b250e560a7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55b250e76943 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55b250e769ec - core::panicking::panic::h6eb78686f8ac2d4f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:146:5\n    17:     0x55b250e34df9 - build_script_build::main::he4f0cf47eedd3b61\n                                 at /home/runner/check/repos-default/elliott10/lwext4_rust/build.rs:48:9\n    18:     0x55b250e2cfdb - core::ops::function::FnOnce::call_once::hc0247323c4f15412\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    19:     0x55b250e3091e - std::sys_common::backtrace::__rust_begin_short_backtrace::h8a74e0826cff6977\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    20:     0x55b250e31041 - std::rt::lang_start::{{closure}}::hc06e839f93cd31cc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    21:     0x55b250e4f62d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    22:     0x55b250e4f62d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    23:     0x55b250e4f62d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    24:     0x55b250e4f62d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    25:     0x55b250e4f62d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    26:     0x55b250e4f62d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    27:     0x55b250e4f62d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    28:     0x55b250e4f62d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    29:     0x55b250e4f62d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    30:     0x55b250e3101a - std::rt::lang_start::h6e38a92e163993e6\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    31:     0x55b250e3567e - main\n    32:     0x7fd27d229d90 - <unknown>\n    33:     0x7fd27d229e40 - __libc_start_main\n    34:     0x55b250e2b5d5 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1544,
      "file": "src/error.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1544,
      "file": "src/error.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1544,
      "file": "src/error.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1544,
      "file": "src/sync.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\n"
    },
    {
      "cmd_idx": 1544,
      "file": "src/driver/irq.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\n"
    },
    {
      "cmd_idx": 1544,
      "file": "src/driver/irq.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\n"
    },
    {
      "cmd_idx": 1545,
      "file": "src/error.rs",
      "kind": "Mirai",
      "raw": "error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n35 + use derive_builder::export::core::error::Error;\n   |\n35 + use derive_builder::export::core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1545,
      "file": "src/error.rs",
      "kind": "Mirai",
      "raw": "error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n35 + use derive_builder::export::core::error::Error;\n   |\n35 + use derive_builder::export::core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1545,
      "file": "src/error.rs",
      "kind": "Mirai",
      "raw": "error[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n35 + use derive_builder::export::core::error::Error;\n   |\n35 + use derive_builder::export::core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1545,
      "file": "src/sync.rs",
      "kind": "Mirai",
      "raw": "error[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\n"
    },
    {
      "cmd_idx": 1545,
      "file": "src/driver/irq.rs",
      "kind": "Mirai",
      "raw": "error[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\n"
    },
    {
      "cmd_idx": 1545,
      "file": "src/driver/irq.rs",
      "kind": "Mirai",
      "raw": "error[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\n"
    },
    {
      "cmd_idx": 1547,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=osl, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n     Locking 77 packages to latest compatible versions\n Downloading crates ...\n  Downloaded derive_builder_macro v0.20.1\n  Downloaded ident_case v1.0.1\n  Downloaded darling_macro v0.20.10\n  Downloaded darling v0.20.10\n  Downloaded strsim v0.11.1\n  Downloaded derive_builder v0.20.1\n  Downloaded darling_core v0.20.10\n  Downloaded derive_builder_core v0.20.1\n  Downloaded fnv v1.0.7\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.1\n   Compiling derive_builder_macro v0.20.1\n    Checking derive_builder v0.20.1\n    Checking osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror: could not compile `osl` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1548,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=osl, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n   Compiling strsim v0.11.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.1\n   Compiling derive_builder_macro v0.20.1\n    Checking derive_builder v0.20.1\n    Checking osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror: could not compile `osl` (lib) due to 7 previous errors\n"
    },
    {
      "cmd_idx": 1549,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=osl, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.1\n   Compiling derive_builder_macro v0.20.1\n   Compiling derive_builder v0.20.1\n   Compiling osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\nerror[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `osl` (lib) due to 6 previous errors\n"
    }
  ]
}