{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (243d2ca4d 2025-01-06)",
          "commit_hash": "243d2ca4db6f96d2d18aaf3a2381251d38eb6b0b",
          "commit_date": "2025-01-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.6"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-07-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-none",
              "rust-std-loongarch64-unknown-none",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1737750491346,
        "finish": 1737750492780,
        "duration_ms": 1434,
        "git_time": "2025-01-15 15:33:14 +0800",
        "git_sha": "78f7222ac5d4c452fdc3cabe360c2b1390fbe5e6"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "shilei-massclouds",
        "repo": "mm"
      },
      {
        "user": "shilei-massclouds",
        "repo": "mmap"
      }
    ],
    "packages": [
      {
        "name": "mm",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "mm"
        }
      },
      {
        "name": "rt_mm",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "mm"
        }
      },
      {
        "name": "mmap",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "mmap"
        }
      },
      {
        "name": "rt_mmap",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "mmap"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 12,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 12,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 12,
      "duration_ms": 97,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 12902,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 15492,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 34232,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 7903,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 4334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 2492,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 7634,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 7274,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 6082,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 76586,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 76993,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 77801,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 12902,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2492,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7903,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 34232,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7274,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7634,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 15492,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6082,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 291,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 224,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 418,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 7689,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 6065,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 7236,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 78143,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 71825,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 41263,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7689,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6065,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 291,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7236,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 418,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 224,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 35,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 35,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 35,
      "duration_ms": 106,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 122,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 44377,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 46016,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 46136,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 8084,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 4584,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 2625,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 7824,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 7484,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 6287,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 111087,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 109627,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 109783,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 44377,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2625,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8084,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4584,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 46136,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7484,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7824,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 46016,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6287,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 8,
      "duration_ms": 100,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 8,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 8,
      "duration_ms": 99,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 123,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 120,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 122,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 234,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 427,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 342,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 7787,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 6211,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 7522,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 108734,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 110228,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 109557,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7787,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6211,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 234,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 7522,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 342,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 427,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 10 to 10)\n-use core::cell::OnceCell;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 12 to 15)\n-use page_table::paging::pgd_alloc;\n-use page_table::paging::MappingFlags;\n-use page_table::paging::PageTable;\n-use page_table::paging::PagingResult;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 18 to 18)\n+use core::cell::OnceCell;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 20 to 20)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 22 to 22)\n+use page_table::paging::pgd_alloc;\n+use page_table::paging::MappingFlags;\n+use page_table::paging::PageTable;\n+use page_table::paging::PagingResult;\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 31 to 34)\n-pub const VM_NONE: usize =   0x00000000;\n-pub const VM_READ: usize =   0x00000001;\n-pub const VM_WRITE: usize =  0x00000002;\n-pub const VM_EXEC: usize =   0x00000004;\n+pub const VM_NONE: usize = 0x00000000;\n+pub const VM_READ: usize = 0x00000001;\n+pub const VM_WRITE: usize = 0x00000002;\n+pub const VM_EXEC: usize = 0x00000004;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 36 to 36)\n-pub const VM_MAYREAD : usize = 0x00000010;\n+pub const VM_MAYREAD: usize = 0x00000010;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 38 to 38)\n-pub const VM_MAYEXEC : usize = 0x00000040;\n+pub const VM_MAYEXEC: usize = 0x00000040;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 107 to 107)\n-            debug!(\"vma: {:#X} - {:#X}, {:#X}\", vma.vm_start, vma.vm_end, vma.vm_pgoff);\n+            debug!(\n+                \"vma: {:#X} - {:#X}, {:#X}\",\n+                vma.vm_start, vma.vm_end, vma.vm_pgoff\n+            );\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 118 to 118)\n-                .alloc_pages(1, PAGE_SIZE) .unwrap();\n+                .alloc_pages(1, PAGE_SIZE)\n+                .unwrap();\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 124 to 124)\n-                    PAGE_SIZE\n+                    PAGE_SIZE,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 130 to 132)\n-            let flags = MappingFlags::READ | MappingFlags::WRITE |\n-                MappingFlags::EXECUTE | MappingFlags::USER;\n-            pgd.map_region(va.into(), pa.into(), PAGE_SIZE, flags, true).unwrap();\n+            let flags = MappingFlags::READ\n+                | MappingFlags::WRITE\n+                | MappingFlags::EXECUTE\n+                | MappingFlags::USER;\n+            pgd.map_region(va.into(), pa.into(), PAGE_SIZE, flags, true)\n+                .unwrap();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 10 to 10)\n-use core::cell::OnceCell;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 12 to 15)\n-use page_table::paging::pgd_alloc;\n-use page_table::paging::MappingFlags;\n-use page_table::paging::PageTable;\n-use page_table::paging::PagingResult;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 18 to 18)\n+use core::cell::OnceCell;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 20 to 20)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 22 to 22)\n+use page_table::paging::pgd_alloc;\n+use page_table::paging::MappingFlags;\n+use page_table::paging::PageTable;\n+use page_table::paging::PagingResult;\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 31 to 34)\n-pub const VM_NONE: usize =   0x00000000;\n-pub const VM_READ: usize =   0x00000001;\n-pub const VM_WRITE: usize =  0x00000002;\n-pub const VM_EXEC: usize =   0x00000004;\n+pub const VM_NONE: usize = 0x00000000;\n+pub const VM_READ: usize = 0x00000001;\n+pub const VM_WRITE: usize = 0x00000002;\n+pub const VM_EXEC: usize = 0x00000004;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 36 to 36)\n-pub const VM_MAYREAD : usize = 0x00000010;\n+pub const VM_MAYREAD: usize = 0x00000010;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 38 to 38)\n-pub const VM_MAYEXEC : usize = 0x00000040;\n+pub const VM_MAYEXEC: usize = 0x00000040;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 107 to 107)\n-            debug!(\"vma: {:#X} - {:#X}, {:#X}\", vma.vm_start, vma.vm_end, vma.vm_pgoff);\n+            debug!(\n+                \"vma: {:#X} - {:#X}, {:#X}\",\n+                vma.vm_start, vma.vm_end, vma.vm_pgoff\n+            );\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 118 to 118)\n-                .alloc_pages(1, PAGE_SIZE) .unwrap();\n+                .alloc_pages(1, PAGE_SIZE)\n+                .unwrap();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 124 to 124)\n-                    PAGE_SIZE\n+                    PAGE_SIZE,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 130 to 132)\n-            let flags = MappingFlags::READ | MappingFlags::WRITE |\n-                MappingFlags::EXECUTE | MappingFlags::USER;\n-            pgd.map_region(va.into(), pa.into(), PAGE_SIZE, flags, true).unwrap();\n+            let flags = MappingFlags::READ\n+                | MappingFlags::WRITE\n+                | MappingFlags::EXECUTE\n+                | MappingFlags::USER;\n+            pgd.map_region(va.into(), pa.into(), PAGE_SIZE, flags, true)\n+                .unwrap();\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 10 to 10)\n-use core::cell::OnceCell;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 12 to 15)\n-use page_table::paging::pgd_alloc;\n-use page_table::paging::MappingFlags;\n-use page_table::paging::PageTable;\n-use page_table::paging::PagingResult;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 18 to 18)\n+use core::cell::OnceCell;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 20 to 20)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 22 to 22)\n+use page_table::paging::pgd_alloc;\n+use page_table::paging::MappingFlags;\n+use page_table::paging::PageTable;\n+use page_table::paging::PagingResult;\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 31 to 34)\n-pub const VM_NONE: usize =   0x00000000;\n-pub const VM_READ: usize =   0x00000001;\n-pub const VM_WRITE: usize =  0x00000002;\n-pub const VM_EXEC: usize =   0x00000004;\n+pub const VM_NONE: usize = 0x00000000;\n+pub const VM_READ: usize = 0x00000001;\n+pub const VM_WRITE: usize = 0x00000002;\n+pub const VM_EXEC: usize = 0x00000004;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 36 to 36)\n-pub const VM_MAYREAD : usize = 0x00000010;\n+pub const VM_MAYREAD: usize = 0x00000010;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 38 to 38)\n-pub const VM_MAYEXEC : usize = 0x00000040;\n+pub const VM_MAYEXEC: usize = 0x00000040;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 107 to 107)\n-            debug!(\"vma: {:#X} - {:#X}, {:#X}\", vma.vm_start, vma.vm_end, vma.vm_pgoff);\n+            debug!(\n+                \"vma: {:#X} - {:#X}, {:#X}\",\n+                vma.vm_start, vma.vm_end, vma.vm_pgoff\n+            );\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 118 to 118)\n-                .alloc_pages(1, PAGE_SIZE) .unwrap();\n+                .alloc_pages(1, PAGE_SIZE)\n+                .unwrap();\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 124 to 124)\n-                    PAGE_SIZE\n+                    PAGE_SIZE,\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_64/shilei-massclouds/mm/mm/src/lib.rs (original lines from 130 to 132)\n-            let flags = MappingFlags::READ | MappingFlags::WRITE |\n-                MappingFlags::EXECUTE | MappingFlags::USER;\n-            pgd.map_region(va.into(), pa.into(), PAGE_SIZE, flags, true).unwrap();\n+            let flags = MappingFlags::READ\n+                | MappingFlags::WRITE\n+                | MappingFlags::EXECUTE\n+                | MappingFlags::USER;\n+            pgd.map_region(va.into(), pa.into(), PAGE_SIZE, flags, true)\n+                .unwrap();\n"
    },
    {
      "cmd_idx": 6,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=mm, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\ntimestamp=2025-01-10 13:48:42.803492384 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mm v0.1.0 (current)\nerror: running cargo-doc on crate 'mm' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_64/shilei-massclouds/mm/mm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mm v0.1.0\n"
    },
    {
      "cmd_idx": 7,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=mm, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\ntimestamp=2025-01-10 13:48:58.29806843 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mm v0.1.0 (current)\nerror: running cargo-doc on crate 'mm' failed with output:\n-----\n   Compiling toml_edit v0.19.15\n    Checking log v0.4.22\n   Compiling syn v2.0.96\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking nb v1.1.0\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking bitflags v2.7.0\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n   Compiling syn v1.0.109\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling autocfg v1.4.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling svgbobdoc v0.3.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_64/shilei-massclouds/mm/mm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mm v0.1.0\n"
    },
    {
      "cmd_idx": 8,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=mm, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\ntimestamp=2025-01-10 13:49:32.53268296 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mm v0.1.0 (current)\nerror: running cargo-doc on crate 'mm' failed with output:\n-----\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.7.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.2.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking x86_64 v0.14.13\n    Checking static_assertions v1.1.0\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling lock_api v0.4.12\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_64/shilei-massclouds/mm/mm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mm v0.1.0\n"
    },
    {
      "cmd_idx": 18,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-10 13:48:29.900588023 +08:00:00\n    Building mm v0.1.0 (current)\nerror: running cargo-doc on crate 'mm' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_64/shilei-massclouds/mm/mm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mm v0.1.0\n"
    },
    {
      "cmd_idx": 19,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-10 13:49:40.440230262 +08:00:00\n   Compiling log v0.4.22\n   Compiling cfg-if v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling nb v1.1.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling nb v0.1.3\n   Compiling riscv v0.10.1\n   Compiling bitflags v2.7.0\n   Compiling void v1.0.2\n[2025-01-10T05:49:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T05:49:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling static_assertions v1.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling sbi-spec v0.0.4\n   Compiling critical-section v1.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling sbi-rt v0.0.2\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling const-default v1.0.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling rlsf v0.2.1\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 20,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-10 13:49:32.534311869 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n   Compiling log v0.4.22\n[2025-01-10T05:49:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T05:49:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.96\n   Compiling cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling bitflags v2.7.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v1.0.109\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling const-default v1.0.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\n   Compiling static_assertions v1.1.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 21,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none\n// timestamp=2025-01-10 13:49:42.934534973 +08:00:00\n   Compiling log v0.4.22\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.7.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n[2025-01-10T05:49:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T05:49:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling raw-cpuid v11.2.0\n   Compiling x86_64 v0.14.13\n   Compiling static_assertions v1.1.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling const-default v1.0.0\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 22,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2025-01-10 13:48:58.299984345 +08:00:00\n    Building mm v0.1.0 (current)\nerror: running cargo-doc on crate 'mm' failed with output:\n-----\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.7.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.2.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking x86_64 v0.14.13\n    Checking static_assertions v1.1.0\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling lock_api v0.4.12\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_64/shilei-massclouds/mm/mm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mm v0.1.0\n"
    },
    {
      "cmd_idx": 23,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-10 13:49:48.43422738 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n   Compiling syn v2.0.96\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.7.0\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling svgbobdoc v0.3.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking bit_field v0.10.2\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n05:49:55|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 24,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-10 13:49:55.711375662 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n   Compiling syn v2.0.96\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling toml_edit v0.19.15\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.7.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.2.0\n   Compiling syn v1.0.109\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n05:50:03|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 25,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-10 13:48:42.805548359 +08:00:00\n    Building mm v0.1.0 (current)\nerror: running cargo-doc on crate 'mm' failed with output:\n-----\n   Compiling toml_edit v0.19.15\n    Checking log v0.4.22\n   Compiling syn v2.0.96\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking nb v1.1.0\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking bitflags v2.7.0\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n   Compiling syn v1.0.109\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling autocfg v1.4.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling svgbobdoc v0.3.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_64/shilei-massclouds/mm/mm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mm v0.1.0\n"
    },
    {
      "cmd_idx": 26,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=mm, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/mm\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none\n// timestamp=2025-01-10 13:50:03.348309226 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.96\n    Checking bitflags v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n   Compiling toml_edit v0.19.15\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n05:50:09|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 42,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mm, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/rt_mm\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-10 13:50:16.671525817 +08:00:00\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n    Checking bit_field v0.10.2\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking bitflags v2.7.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n05:50:24|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 43,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mm, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/rt_mm\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none\n// timestamp=2025-01-10 13:50:24.363016284 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking bitflags v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling paste v1.0.15\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n05:50:30|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 44,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mm, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/rt_mm\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-10 13:49:47.270985336 +08:00:00\n[2025-01-10T05:49:34Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T05:49:34Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling bit_field v0.10.2\n   Compiling rlsf v0.2.1\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 45,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mm, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/rt_mm\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-10 13:50:09.432688151 +08:00:00\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.7.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking tock-registers v0.8.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking aarch64-cpu v9.4.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking bit_field v0.10.2\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking static_assertions v1.1.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n05:50:16|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 46,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mm, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/rt_mm\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none\n// timestamp=2025-01-10 13:49:47.792367725 +08:00:00\n[2025-01-10T05:49:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T05:49:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling x2apic v0.4.3\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling autocfg v1.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 47,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mm, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mm/rt_mm\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-10 13:49:47.564785379 +08:00:00\n[2025-01-10T05:49:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-10T05:49:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 7 to 7)\n-use axerrno::{LinuxResult, LinuxError, linux_err};\n+use axerrno::{linux_err, LinuxError, LinuxResult};\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 9 to 9)\n+use axhal::arch::flush_tlb;\n+use axhal::arch::user_mode;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 10 to 10)\n+use axhal::arch::TASK_SIZE;\n+#[cfg(target_arch = \"riscv64\")]\n+use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 11 to 11)\n-use axhal::arch::user_mode;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 13 to 13)\n+use capability::Cap;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 14 to 14)\n-use memory_addr::{align_up_4k, align_down_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n+use memory_addr::{align_down_4k, align_up_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 17 to 19)\n-use axhal::arch::TASK_SIZE;\n-use mm::{VM_READ, VM_WRITE, VM_EXEC, VM_SHARED, VM_MAYSHARE};\n-use mm::{VM_MAYREAD, VM_MAYWRITE, VM_MAYEXEC};\n+use mm::{VM_EXEC, VM_MAYSHARE, VM_READ, VM_SHARED, VM_WRITE};\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 21 to 21)\n+use mm::{VM_MAYEXEC, VM_MAYREAD, VM_MAYWRITE};\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 22 to 23)\n-use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n-#[cfg(target_arch = \"riscv64\")]\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 25 to 26)\n-use capability::Cap;\n-use axhal::arch::flush_tlb;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 58 to 58)\n-const MAP_EXECUTABLE: usize= 0x1000;\n+const MAP_EXECUTABLE: usize = 0x1000;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 60 to 60)\n-const MAP_LOCKED: usize    = 0x2000;\n+const MAP_LOCKED: usize = 0x2000;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 76 to 76)\n-const MAP_STACK: usize =    0x020000;\n+const MAP_STACK: usize = 0x020000;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 78 to 78)\n-const MAP_HUGETLB: usize =  0x040000;\n+const MAP_HUGETLB: usize = 0x040000;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 88 to 90)\n-pub const VM_FAULT_OOM:     usize = 0x000001;\n-pub const VM_FAULT_SIGBUS:  usize = 0x000002;\n-pub const VM_FAULT_HWPOISON:usize = 0x000010;\n+pub const VM_FAULT_OOM: usize = 0x000001;\n+pub const VM_FAULT_SIGBUS: usize = 0x000002;\n+pub const VM_FAULT_HWPOISON: usize = 0x000010;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 93 to 93)\n-pub const VM_FAULT_FALLBACK:usize = 0x000800;\n+pub const VM_FAULT_FALLBACK: usize = 0x000800;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 95 to 97)\n-pub const VM_FAULT_ERROR: usize =\n-    VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV | VM_FAULT_HWPOISON |\n-    VM_FAULT_HWPOISON_LARGE | VM_FAULT_FALLBACK;\n+pub const VM_FAULT_ERROR: usize = VM_FAULT_OOM\n+    | VM_FAULT_SIGBUS\n+    | VM_FAULT_SIGSEGV\n+    | VM_FAULT_HWPOISON\n+    | VM_FAULT_HWPOISON_LARGE\n+    | VM_FAULT_FALLBACK;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 99 to 103)\n-const LEGACY_MAP_MASK: usize =\n-    MAP_SHARED | MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS | MAP_DENYWRITE |\n-    MAP_EXECUTABLE | MAP_UNINITIALIZED | MAP_GROWSDOWN | MAP_LOCKED | MAP_NORESERVE |\n-    MAP_POPULATE | MAP_NONBLOCK | MAP_STACK | MAP_HUGETLB | MAP_32BIT |\n-    MAP_HUGE_2MB | MAP_HUGE_1GB;\n+const LEGACY_MAP_MASK: usize = MAP_SHARED\n+    | MAP_PRIVATE\n+    | MAP_FIXED\n+    | MAP_ANONYMOUS\n+    | MAP_DENYWRITE\n+    | MAP_EXECUTABLE\n+    | MAP_UNINITIALIZED\n+    | MAP_GROWSDOWN\n+    | MAP_LOCKED\n+    | MAP_NORESERVE\n+    | MAP_POPULATE\n+    | MAP_NONBLOCK\n+    | MAP_STACK\n+    | MAP_HUGETLB\n+    | MAP_32BIT\n+    | MAP_HUGE_2MB\n+    | MAP_HUGE_1GB;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 193 to 193)\n-    info!(\"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\", va, offset, flags, prot);\n+    info!(\n+        \"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\",\n+        va, offset, flags, prot\n+    );\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 238 to 239)\n-    let mut vm_flags = calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags)\n-        | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n+    let mut vm_flags =\n+        calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags) | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 298 to 302)\n-    locked_mm.vmas.iter().find(|(_, vma)| {\n-        in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n-    }).map(|(key, _)| {\n-        *key\n-    })\n+    locked_mm\n+        .vmas\n+        .iter()\n+        .find(|(_, vma)| {\n+            in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n+        })\n+        .map(|(key, _)| *key)\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 352 to 352)\n-                vma.vm_start, vma.vm_end, gap_end - len\n+                vma.vm_start,\n+                vma.vm_end,\n+                gap_end - len\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 371 to 371)\n-    va: usize, cause: usize, epc: usize, fixup: &mut usize,\n+    va: usize,\n+    cause: usize,\n+    epc: usize,\n+    fixup: &mut usize,\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 386 to 387)\n-        info!(\"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n-            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff);\n+        info!(\n+            \"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n+            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff\n+        );\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 443 to 444)\n-            locked_mm.map_region(va, *pa, PAGE_SIZE_4K, 1)\n-                .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+            locked_mm\n+                .map_region(va, *pa, PAGE_SIZE_4K, 1)\n+                .unwrap_or_else(|e| panic!(\"{:?}\", e));\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 467 to 468)\n-    locked_mm.map_region(va, pa, PAGE_SIZE_4K, 1)\n-        .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+    locked_mm\n+        .map_region(va, pa, PAGE_SIZE_4K, 1)\n+        .unwrap_or_else(|e| panic!(\"{:?}\", e));\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 548 to 550)\n-        EXC_INST_PAGE_FAULT => {\n-            (vma.vm_flags & VM_EXEC) == 0\n-        },\n+        EXC_INST_PAGE_FAULT => (vma.vm_flags & VM_EXEC) == 0,\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 554 to 557)\n-        },\n-        EXC_STORE_PAGE_FAULT => {\n-            (vma.vm_flags & VM_WRITE) == 0\n-        },\n+        }\n+        EXC_STORE_PAGE_FAULT => (vma.vm_flags & VM_WRITE) == 0,\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 598 to 598)\n-        _mmap(brk, offset, PROT_READ | PROT_WRITE, MAP_FIXED | MAP_ANONYMOUS, None, 0).unwrap();\n+        _mmap(\n+            brk,\n+            offset,\n+            PROT_READ | PROT_WRITE,\n+            MAP_FIXED | MAP_ANONYMOUS,\n+            None,\n+            0,\n+        )\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 659 to 659)\n-    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE-va {\n+    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE - va {\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 708 to 708)\n-    oaddr: usize, mut osize: usize, mut nsize: usize, flags: usize, naddr: usize\n+    oaddr: usize,\n+    mut osize: usize,\n+    mut nsize: usize,\n+    flags: usize,\n+    naddr: usize,\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 716 to 717)\n-    error!(\"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n-        oaddr, osize, nsize, flags, naddr);\n+    error!(\n+        \"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n+        oaddr, osize, nsize, flags, naddr\n+    );\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 723 to 723)\n-    assert_eq!(oaddr+osize, area.vm_end);\n+    assert_eq!(oaddr + osize, area.vm_end);\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 753 to 753)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 48,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 756 to 756)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 7 to 7)\n-use axerrno::{LinuxResult, LinuxError, linux_err};\n+use axerrno::{linux_err, LinuxError, LinuxResult};\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 9 to 9)\n+use axhal::arch::flush_tlb;\n+use axhal::arch::user_mode;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 10 to 10)\n+use axhal::arch::TASK_SIZE;\n+#[cfg(target_arch = \"riscv64\")]\n+use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 11 to 11)\n-use axhal::arch::user_mode;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 13 to 13)\n+use capability::Cap;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 14 to 14)\n-use memory_addr::{align_up_4k, align_down_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n+use memory_addr::{align_down_4k, align_up_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 17 to 19)\n-use axhal::arch::TASK_SIZE;\n-use mm::{VM_READ, VM_WRITE, VM_EXEC, VM_SHARED, VM_MAYSHARE};\n-use mm::{VM_MAYREAD, VM_MAYWRITE, VM_MAYEXEC};\n+use mm::{VM_EXEC, VM_MAYSHARE, VM_READ, VM_SHARED, VM_WRITE};\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 21 to 21)\n+use mm::{VM_MAYEXEC, VM_MAYREAD, VM_MAYWRITE};\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 22 to 23)\n-use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n-#[cfg(target_arch = \"riscv64\")]\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 25 to 26)\n-use capability::Cap;\n-use axhal::arch::flush_tlb;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 58 to 58)\n-const MAP_EXECUTABLE: usize= 0x1000;\n+const MAP_EXECUTABLE: usize = 0x1000;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 60 to 60)\n-const MAP_LOCKED: usize    = 0x2000;\n+const MAP_LOCKED: usize = 0x2000;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 76 to 76)\n-const MAP_STACK: usize =    0x020000;\n+const MAP_STACK: usize = 0x020000;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 78 to 78)\n-const MAP_HUGETLB: usize =  0x040000;\n+const MAP_HUGETLB: usize = 0x040000;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 88 to 90)\n-pub const VM_FAULT_OOM:     usize = 0x000001;\n-pub const VM_FAULT_SIGBUS:  usize = 0x000002;\n-pub const VM_FAULT_HWPOISON:usize = 0x000010;\n+pub const VM_FAULT_OOM: usize = 0x000001;\n+pub const VM_FAULT_SIGBUS: usize = 0x000002;\n+pub const VM_FAULT_HWPOISON: usize = 0x000010;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 93 to 93)\n-pub const VM_FAULT_FALLBACK:usize = 0x000800;\n+pub const VM_FAULT_FALLBACK: usize = 0x000800;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 95 to 97)\n-pub const VM_FAULT_ERROR: usize =\n-    VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV | VM_FAULT_HWPOISON |\n-    VM_FAULT_HWPOISON_LARGE | VM_FAULT_FALLBACK;\n+pub const VM_FAULT_ERROR: usize = VM_FAULT_OOM\n+    | VM_FAULT_SIGBUS\n+    | VM_FAULT_SIGSEGV\n+    | VM_FAULT_HWPOISON\n+    | VM_FAULT_HWPOISON_LARGE\n+    | VM_FAULT_FALLBACK;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 99 to 103)\n-const LEGACY_MAP_MASK: usize =\n-    MAP_SHARED | MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS | MAP_DENYWRITE |\n-    MAP_EXECUTABLE | MAP_UNINITIALIZED | MAP_GROWSDOWN | MAP_LOCKED | MAP_NORESERVE |\n-    MAP_POPULATE | MAP_NONBLOCK | MAP_STACK | MAP_HUGETLB | MAP_32BIT |\n-    MAP_HUGE_2MB | MAP_HUGE_1GB;\n+const LEGACY_MAP_MASK: usize = MAP_SHARED\n+    | MAP_PRIVATE\n+    | MAP_FIXED\n+    | MAP_ANONYMOUS\n+    | MAP_DENYWRITE\n+    | MAP_EXECUTABLE\n+    | MAP_UNINITIALIZED\n+    | MAP_GROWSDOWN\n+    | MAP_LOCKED\n+    | MAP_NORESERVE\n+    | MAP_POPULATE\n+    | MAP_NONBLOCK\n+    | MAP_STACK\n+    | MAP_HUGETLB\n+    | MAP_32BIT\n+    | MAP_HUGE_2MB\n+    | MAP_HUGE_1GB;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 193 to 193)\n-    info!(\"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\", va, offset, flags, prot);\n+    info!(\n+        \"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\",\n+        va, offset, flags, prot\n+    );\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 238 to 239)\n-    let mut vm_flags = calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags)\n-        | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n+    let mut vm_flags =\n+        calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags) | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 298 to 302)\n-    locked_mm.vmas.iter().find(|(_, vma)| {\n-        in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n-    }).map(|(key, _)| {\n-        *key\n-    })\n+    locked_mm\n+        .vmas\n+        .iter()\n+        .find(|(_, vma)| {\n+            in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n+        })\n+        .map(|(key, _)| *key)\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 352 to 352)\n-                vma.vm_start, vma.vm_end, gap_end - len\n+                vma.vm_start,\n+                vma.vm_end,\n+                gap_end - len\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 371 to 371)\n-    va: usize, cause: usize, epc: usize, fixup: &mut usize,\n+    va: usize,\n+    cause: usize,\n+    epc: usize,\n+    fixup: &mut usize,\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 386 to 387)\n-        info!(\"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n-            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff);\n+        info!(\n+            \"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n+            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff\n+        );\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 443 to 444)\n-            locked_mm.map_region(va, *pa, PAGE_SIZE_4K, 1)\n-                .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+            locked_mm\n+                .map_region(va, *pa, PAGE_SIZE_4K, 1)\n+                .unwrap_or_else(|e| panic!(\"{:?}\", e));\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 467 to 468)\n-    locked_mm.map_region(va, pa, PAGE_SIZE_4K, 1)\n-        .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+    locked_mm\n+        .map_region(va, pa, PAGE_SIZE_4K, 1)\n+        .unwrap_or_else(|e| panic!(\"{:?}\", e));\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 548 to 550)\n-        EXC_INST_PAGE_FAULT => {\n-            (vma.vm_flags & VM_EXEC) == 0\n-        },\n+        EXC_INST_PAGE_FAULT => (vma.vm_flags & VM_EXEC) == 0,\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 554 to 557)\n-        },\n-        EXC_STORE_PAGE_FAULT => {\n-            (vma.vm_flags & VM_WRITE) == 0\n-        },\n+        }\n+        EXC_STORE_PAGE_FAULT => (vma.vm_flags & VM_WRITE) == 0,\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 598 to 598)\n-        _mmap(brk, offset, PROT_READ | PROT_WRITE, MAP_FIXED | MAP_ANONYMOUS, None, 0).unwrap();\n+        _mmap(\n+            brk,\n+            offset,\n+            PROT_READ | PROT_WRITE,\n+            MAP_FIXED | MAP_ANONYMOUS,\n+            None,\n+            0,\n+        )\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 659 to 659)\n-    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE-va {\n+    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE - va {\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 708 to 708)\n-    oaddr: usize, mut osize: usize, mut nsize: usize, flags: usize, naddr: usize\n+    oaddr: usize,\n+    mut osize: usize,\n+    mut nsize: usize,\n+    flags: usize,\n+    naddr: usize,\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 716 to 717)\n-    error!(\"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n-        oaddr, osize, nsize, flags, naddr);\n+    error!(\n+        \"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n+        oaddr, osize, nsize, flags, naddr\n+    );\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 723 to 723)\n-    assert_eq!(oaddr+osize, area.vm_end);\n+    assert_eq!(oaddr + osize, area.vm_end);\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 753 to 753)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 49,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 756 to 756)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 7 to 7)\n-use axerrno::{LinuxResult, LinuxError, linux_err};\n+use axerrno::{linux_err, LinuxError, LinuxResult};\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 9 to 9)\n+use axhal::arch::flush_tlb;\n+use axhal::arch::user_mode;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 10 to 10)\n+use axhal::arch::TASK_SIZE;\n+#[cfg(target_arch = \"riscv64\")]\n+use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 11 to 11)\n-use axhal::arch::user_mode;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 13 to 13)\n+use capability::Cap;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 14 to 14)\n-use memory_addr::{align_up_4k, align_down_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n+use memory_addr::{align_down_4k, align_up_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 17 to 19)\n-use axhal::arch::TASK_SIZE;\n-use mm::{VM_READ, VM_WRITE, VM_EXEC, VM_SHARED, VM_MAYSHARE};\n-use mm::{VM_MAYREAD, VM_MAYWRITE, VM_MAYEXEC};\n+use mm::{VM_EXEC, VM_MAYSHARE, VM_READ, VM_SHARED, VM_WRITE};\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 21 to 21)\n+use mm::{VM_MAYEXEC, VM_MAYREAD, VM_MAYWRITE};\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 22 to 23)\n-use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n-#[cfg(target_arch = \"riscv64\")]\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 25 to 26)\n-use capability::Cap;\n-use axhal::arch::flush_tlb;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 58 to 58)\n-const MAP_EXECUTABLE: usize= 0x1000;\n+const MAP_EXECUTABLE: usize = 0x1000;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 60 to 60)\n-const MAP_LOCKED: usize    = 0x2000;\n+const MAP_LOCKED: usize = 0x2000;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 76 to 76)\n-const MAP_STACK: usize =    0x020000;\n+const MAP_STACK: usize = 0x020000;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 78 to 78)\n-const MAP_HUGETLB: usize =  0x040000;\n+const MAP_HUGETLB: usize = 0x040000;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 88 to 90)\n-pub const VM_FAULT_OOM:     usize = 0x000001;\n-pub const VM_FAULT_SIGBUS:  usize = 0x000002;\n-pub const VM_FAULT_HWPOISON:usize = 0x000010;\n+pub const VM_FAULT_OOM: usize = 0x000001;\n+pub const VM_FAULT_SIGBUS: usize = 0x000002;\n+pub const VM_FAULT_HWPOISON: usize = 0x000010;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 93 to 93)\n-pub const VM_FAULT_FALLBACK:usize = 0x000800;\n+pub const VM_FAULT_FALLBACK: usize = 0x000800;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 95 to 97)\n-pub const VM_FAULT_ERROR: usize =\n-    VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV | VM_FAULT_HWPOISON |\n-    VM_FAULT_HWPOISON_LARGE | VM_FAULT_FALLBACK;\n+pub const VM_FAULT_ERROR: usize = VM_FAULT_OOM\n+    | VM_FAULT_SIGBUS\n+    | VM_FAULT_SIGSEGV\n+    | VM_FAULT_HWPOISON\n+    | VM_FAULT_HWPOISON_LARGE\n+    | VM_FAULT_FALLBACK;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 99 to 103)\n-const LEGACY_MAP_MASK: usize =\n-    MAP_SHARED | MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS | MAP_DENYWRITE |\n-    MAP_EXECUTABLE | MAP_UNINITIALIZED | MAP_GROWSDOWN | MAP_LOCKED | MAP_NORESERVE |\n-    MAP_POPULATE | MAP_NONBLOCK | MAP_STACK | MAP_HUGETLB | MAP_32BIT |\n-    MAP_HUGE_2MB | MAP_HUGE_1GB;\n+const LEGACY_MAP_MASK: usize = MAP_SHARED\n+    | MAP_PRIVATE\n+    | MAP_FIXED\n+    | MAP_ANONYMOUS\n+    | MAP_DENYWRITE\n+    | MAP_EXECUTABLE\n+    | MAP_UNINITIALIZED\n+    | MAP_GROWSDOWN\n+    | MAP_LOCKED\n+    | MAP_NORESERVE\n+    | MAP_POPULATE\n+    | MAP_NONBLOCK\n+    | MAP_STACK\n+    | MAP_HUGETLB\n+    | MAP_32BIT\n+    | MAP_HUGE_2MB\n+    | MAP_HUGE_1GB;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 193 to 193)\n-    info!(\"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\", va, offset, flags, prot);\n+    info!(\n+        \"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\",\n+        va, offset, flags, prot\n+    );\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 238 to 239)\n-    let mut vm_flags = calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags)\n-        | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n+    let mut vm_flags =\n+        calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags) | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 298 to 302)\n-    locked_mm.vmas.iter().find(|(_, vma)| {\n-        in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n-    }).map(|(key, _)| {\n-        *key\n-    })\n+    locked_mm\n+        .vmas\n+        .iter()\n+        .find(|(_, vma)| {\n+            in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n+        })\n+        .map(|(key, _)| *key)\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 352 to 352)\n-                vma.vm_start, vma.vm_end, gap_end - len\n+                vma.vm_start,\n+                vma.vm_end,\n+                gap_end - len\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 371 to 371)\n-    va: usize, cause: usize, epc: usize, fixup: &mut usize,\n+    va: usize,\n+    cause: usize,\n+    epc: usize,\n+    fixup: &mut usize,\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 386 to 387)\n-        info!(\"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n-            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff);\n+        info!(\n+            \"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n+            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff\n+        );\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 443 to 444)\n-            locked_mm.map_region(va, *pa, PAGE_SIZE_4K, 1)\n-                .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+            locked_mm\n+                .map_region(va, *pa, PAGE_SIZE_4K, 1)\n+                .unwrap_or_else(|e| panic!(\"{:?}\", e));\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 467 to 468)\n-    locked_mm.map_region(va, pa, PAGE_SIZE_4K, 1)\n-        .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+    locked_mm\n+        .map_region(va, pa, PAGE_SIZE_4K, 1)\n+        .unwrap_or_else(|e| panic!(\"{:?}\", e));\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 548 to 550)\n-        EXC_INST_PAGE_FAULT => {\n-            (vma.vm_flags & VM_EXEC) == 0\n-        },\n+        EXC_INST_PAGE_FAULT => (vma.vm_flags & VM_EXEC) == 0,\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 554 to 557)\n-        },\n-        EXC_STORE_PAGE_FAULT => {\n-            (vma.vm_flags & VM_WRITE) == 0\n-        },\n+        }\n+        EXC_STORE_PAGE_FAULT => (vma.vm_flags & VM_WRITE) == 0,\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 598 to 598)\n-        _mmap(brk, offset, PROT_READ | PROT_WRITE, MAP_FIXED | MAP_ANONYMOUS, None, 0).unwrap();\n+        _mmap(\n+            brk,\n+            offset,\n+            PROT_READ | PROT_WRITE,\n+            MAP_FIXED | MAP_ANONYMOUS,\n+            None,\n+            0,\n+        )\n+        .unwrap();\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 659 to 659)\n-    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE-va {\n+    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE - va {\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 708 to 708)\n-    oaddr: usize, mut osize: usize, mut nsize: usize, flags: usize, naddr: usize\n+    oaddr: usize,\n+    mut osize: usize,\n+    mut nsize: usize,\n+    flags: usize,\n+    naddr: usize,\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 716 to 717)\n-    error!(\"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n-        oaddr, osize, nsize, flags, naddr);\n+    error!(\n+        \"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n+        oaddr, osize, nsize, flags, naddr\n+    );\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 723 to 723)\n-    assert_eq!(oaddr+osize, area.vm_end);\n+    assert_eq!(oaddr + osize, area.vm_end);\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 753 to 753)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 50,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 756 to 756)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 54,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=mmap, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\ntimestamp=2025-01-09 18:24:01.859495287 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_17/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
    },
    {
      "cmd_idx": 55,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=mmap, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\ntimestamp=2025-01-09 18:24:47.878798255 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.22\n   Compiling toml_edit v0.19.15\n   Compiling syn v2.0.95\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking nb v1.1.0\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\n    Checking bitflags v2.6.0\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.2.0\n   Compiling syn v1.0.109\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling svgbobdoc v0.3.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_17/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
    },
    {
      "cmd_idx": 56,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=mmap, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\ntimestamp=2025-01-09 18:25:34.024779418 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.2.0\n    Checking static_assertions v1.1.0\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking x86_64 v0.14.13\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n    Checking x2apic v0.4.3\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_17/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
    },
    {
      "cmd_idx": 66,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 18:23:17.481816134 +08:00:00\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_17/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
    },
    {
      "cmd_idx": 67,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:25:42.114324447 +08:00:00\n   Compiling log v0.4.22\n   Compiling cfg-if v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling nb v1.1.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling bitflags v2.6.0\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n[2025-01-09T10:25:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T10:25:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.10.1\n   Compiling static_assertions v1.1.0\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling sbi-rt v0.0.2\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling const-default v1.0.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling rlsf v0.2.1\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 68,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 18:25:34.027688101 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n   Compiling log v0.4.22\n[2025-01-09T10:25:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T10:25:35Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.95\n   Compiling cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v1.0.109\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling const-default v1.0.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 69,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none\n// timestamp=2025-01-09 18:25:44.741766363 +08:00:00\n   Compiling log v0.4.22\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n[2025-01-09T10:25:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T10:25:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling volatile v0.4.6\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling raw-cpuid v11.2.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling x86_64 v0.14.13\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling const-default v1.0.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n   Compiling static_assertions v1.1.0\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 70,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2025-01-09 18:24:47.887829239 +08:00:00\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.2.0\n    Checking static_assertions v1.1.0\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking x86_64 v0.14.13\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n    Checking x2apic v0.4.3\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_17/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
    },
    {
      "cmd_idx": 71,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 18:25:50.560791282 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n   Compiling syn v2.0.95\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.6.0\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking static_assertions v1.1.0\n   Compiling svgbobdoc v0.3.0\n    Checking bit_field v0.10.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking const-default v1.0.0\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n10:25:58|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 72,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:25:58.047945799 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.95\n    Checking bit_field v0.10.2\n    Checking nb v1.1.0\n   Compiling toml_edit v0.19.15\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling riscv v0.10.1\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n   Compiling syn v1.0.109\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n10:26:05|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 73,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:24:01.861623802 +08:00:00\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.22\n   Compiling toml_edit v0.19.15\n   Compiling syn v2.0.95\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking nb v1.1.0\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\n    Checking bitflags v2.6.0\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.2.0\n   Compiling syn v1.0.109\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling svgbobdoc v0.3.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_17/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
    },
    {
      "cmd_idx": 74,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none\n// timestamp=2025-01-09 18:26:05.874782471 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.38\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.95\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling syn v1.0.109\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n10:26:12|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 5 to 6)\n-use core::panic::PanicInfo;\n-use alloc::vec::Vec;\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 8 to 8)\n-use fileops::AT_FDCWD;\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 11 to 11)\n+use alloc::vec::Vec;\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 12 to 12)\n+use core::panic::PanicInfo;\n+use fileops::AT_FDCWD;\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 70 to 70)\n-        _ => {},\n+        _ => {}\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 88 to 88)\n-    info!(\"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\", dfd, fname, flags, mode, ofd, fd);\n+    info!(\n+        \"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\",\n+        dfd, fname, flags, mode, ofd, fd\n+    );\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 110 to 111)\n-    error!(\"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n-          va, len, prot, flags, ofd, offset, result);\n+    error!(\n+        \"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n+        va, len, prot, flags, ofd, offset, result\n+    );\n"
    },
    {
      "cmd_idx": 75,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 117 to 120)\n-    let ret = mmap::mmap(va, len, prot, flags, *fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        });\n+    let ret = mmap::mmap(va, len, prot, flags, *fd, offset).unwrap_or_else(|e| linux_err_from!(e));\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 5 to 6)\n-use core::panic::PanicInfo;\n-use alloc::vec::Vec;\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 8 to 8)\n-use fileops::AT_FDCWD;\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 11 to 11)\n+use alloc::vec::Vec;\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 12 to 12)\n+use core::panic::PanicInfo;\n+use fileops::AT_FDCWD;\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 70 to 70)\n-        _ => {},\n+        _ => {}\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 88 to 88)\n-    info!(\"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\", dfd, fname, flags, mode, ofd, fd);\n+    info!(\n+        \"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\",\n+        dfd, fname, flags, mode, ofd, fd\n+    );\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 110 to 111)\n-    error!(\"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n-          va, len, prot, flags, ofd, offset, result);\n+    error!(\n+        \"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n+        va, len, prot, flags, ofd, offset, result\n+    );\n"
    },
    {
      "cmd_idx": 76,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 117 to 120)\n-    let ret = mmap::mmap(va, len, prot, flags, *fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        });\n+    let ret = mmap::mmap(va, len, prot, flags, *fd, offset).unwrap_or_else(|e| linux_err_from!(e));\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 5 to 6)\n-use core::panic::PanicInfo;\n-use alloc::vec::Vec;\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 8 to 8)\n-use fileops::AT_FDCWD;\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 11 to 11)\n+use alloc::vec::Vec;\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 12 to 12)\n+use core::panic::PanicInfo;\n+use fileops::AT_FDCWD;\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 70 to 70)\n-        _ => {},\n+        _ => {}\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 88 to 88)\n-    info!(\"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\", dfd, fname, flags, mode, ofd, fd);\n+    info!(\n+        \"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\",\n+        dfd, fname, flags, mode, ofd, fd\n+    );\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 110 to 111)\n-    error!(\"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n-          va, len, prot, flags, ofd, offset, result);\n+    error!(\n+        \"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n+        va, len, prot, flags, ofd, offset, result\n+    );\n"
    },
    {
      "cmd_idx": 77,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 117 to 120)\n-    let ret = mmap::mmap(va, len, prot, flags, *fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        });\n+    let ret = mmap::mmap(va, len, prot, flags, *fd, offset).unwrap_or_else(|e| linux_err_from!(e));\n"
    },
    {
      "cmd_idx": 90,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:26:19.688777779 +08:00:00\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.95\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.19.15\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n10:26:27|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 91,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none\n// timestamp=2025-01-09 18:26:27.478795252 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.95\n   Compiling rustversion v1.0.19\n    Checking volatile v0.4.6\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n10:26:33|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 92,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 18:25:49.328339746 +08:00:00\n[2025-01-09T10:25:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T10:25:35Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n   Compiling static_assertions v1.1.0\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\n   Compiling bit_field v0.10.2\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 93,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2025-01-09 18:26:12.164629236 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n   Compiling syn v2.0.95\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking bitflags v2.6.0\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking tock-registers v0.8.1\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking aarch64-cpu v9.4.0\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking static_assertions v1.1.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n10:26:19|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 94,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none\n// timestamp=2025-01-09 18:25:49.993311423 +08:00:00\n[2025-01-09T10:25:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T10:25:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling x2apic v0.4.3\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 95,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_17/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:25:49.564582118 +08:00:00\n[2025-01-09T10:25:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T10:25:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling autocfg v1.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    }
  ]
}