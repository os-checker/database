{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1739478450126,
        "finish": 1739478451698,
        "duration_ms": 1571,
        "git_time": "2025-02-10 09:20:46 +0800",
        "git_sha": "459f626aa565e67d76b55bfd0c7fb1ff273c7f1c"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "rel4team",
        "repo": "sel4_vspace"
      },
      {
        "user": "shilei-massclouds",
        "repo": "arch_boot"
      }
    ],
    "packages": [
      {
        "name": "sel4_vspace",
        "repo": {
          "repo_idx": 0,
          "user": "rel4team",
          "repo": "sel4_vspace"
        }
      },
      {
        "name": "arch_boot",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "arch_boot"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 68,
      "duration_ms": 100,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 35,
      "duration_ms": 4785,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf ",
      "count": 1,
      "duration_ms": 14770,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 6145,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 5959,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 12888,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 14770,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 6,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 6,
      "duration_ms": 4451,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 5533,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 6,
      "duration_ms": 4634,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 5910,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 4745,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 242,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 1716,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 88,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 5533,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4745,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 4 to 5)\n-use sel4_common::{structures::exception_t, sel4_config::*, utils::convert_to_option_mut_type_ref, fault::*, BIT, MASK};\n-use sel4_cspace::interface::cap_t;\n+use super::{interface::set_vm_root, pte::pte_t};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 7 to 7)\n-use super::{pte::pte_t, interface::set_vm_root};\n+use sel4_common::{\n+    fault::*, sel4_config::*, structures::exception_t, utils::convert_to_option_mut_type_ref, BIT,\n+    MASK,\n+};\n+use sel4_cspace::interface::cap_t;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 27 to 27)\n-    \n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 52 to 52)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 60 to 60)\n-        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize)\n+        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 65 to 65)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 75 to 75)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 85 to 87)\n-    let poolPtr =  unsafe {\n-        riscvKSASIDTable[asid >> asidLowBits]\n-    };\n+    let poolPtr = unsafe { riscvKSASIDTable[asid >> asidLowBits] };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 94 to 96)\n-    let vspace_root = unsafe {\n-        (*poolPtr).array[asid & MASK!(asidLowBits)]\n-    };\n+    let vspace_root = unsafe { (*poolPtr).array[asid & MASK!(asidLowBits)] };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 123 to 123)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 125 to 125)\n-pub fn delete_asid_pool(asid_base: asid_t, pool: *mut asid_pool_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid_pool(\n+    asid_base: asid_t,\n+    pool: *mut asid_pool_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 137 to 137)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 139 to 139)\n-pub fn delete_asid(asid: asid_t, vspace: *mut pte_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid(\n+    asid: asid_t,\n+    vspace: *mut pte_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/asid.rs (original lines from 151 to 151)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 2 to 2)\n-use sel4_cspace::interface::{cap_t, CapTag};\n+use super::pte::pte_t;\n+use super::utils::{\n+    kpptr_to_paddr, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_PT_INDEX,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 4 to 4)\n-use sel4_common::{BIT, ROUND_DOWN};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 6 to 6)\n-use sel4_common::sel4_config::{KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET, PPTR_TOP, PT_INDEX_BITS, seL4_PageBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET,\n+    PPTR_TOP, PT_INDEX_BITS,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 9 to 10)\n-use super::pte::pte_t;\n-use super::utils::{RISCV_GET_PT_INDEX, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, kpptr_to_paddr};\n+use sel4_common::{BIT, ROUND_DOWN};\n+use sel4_cspace::interface::{cap_t, CapTag};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 12 to 12)\n-use super::{satp::{setVSpaceRoot, sfence}, asid::{find_vspace_for_asid, asid_t}, utils::pptr_to_paddr, structures::{vptr_t, pptr_t}};\n+use super::{\n+    asid::{asid_t, find_vspace_for_asid},\n+    satp::{setVSpaceRoot, sfence},\n+    structures::{pptr_t, vptr_t},\n+    utils::pptr_to_paddr,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 26 to 27)\n-/// 构建`reL4`的内核页表,主要完成了`PSpace`和`KERNEL ELF`两段虚拟地址空间的映射 \n-/// \n+/// 构建`reL4`的内核页表,主要完成了`PSpace`和`KERNEL ELF`两段虚拟地址空间的映射\n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 29 to 29)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 31 to 31)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 71 to 71)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 117 to 117)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 128 to 128)\n-/// Copy the whole kernel page table into a new page table. \n+/// Copy the whole kernel page table into a new page table.\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 143 to 143)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 157 to 157)\n-        find_ret.status != exception_t::EXCEPTION_NONE || find_ret.vspace_root.is_none() || find_ret.vspace_root.unwrap() != lvl1pt,\n+        find_ret.status != exception_t::EXCEPTION_NONE\n+            || find_ret.vspace_root.is_none()\n+            || find_ret.vspace_root.unwrap() != lvl1pt,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 171 to 171)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 173 to 173)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 175 to 175)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 178 to 178)\n-pub fn unmapPage(page_size: usize, asid: asid_t, vptr: vptr_t, pptr: pptr_t) -> Result<(), lookup_fault_t> {\n+pub fn unmapPage(\n+    page_size: usize,\n+    asid: asid_t,\n+    vptr: vptr_t,\n+    pptr: pptr_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 184 to 184)\n-    let lu_ret = unsafe {(*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr)};\n+    let lu_ret = unsafe { (*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr) };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 190 to 190)\n-    let slot = unsafe {&(*lu_ret.ptSlot)};\n+    let slot = unsafe { &(*lu_ret.ptSlot) };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 192 to 192)\n-    if slot.get_vaild() == 0 || slot.is_pte_table() || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr) {\n+    if slot.get_vaild() == 0\n+        || slot.is_pte_table()\n+        || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr)\n+    {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/interface.rs (original lines from 203 to 203)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/lib.rs (original lines from 6 to 10)\n-mod structures;\n-mod vm_rights;\n-mod satp;\n-mod utils;\n-mod pte;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/lib.rs (original lines from 13 to 13)\n+mod pte;\n+mod satp;\n+mod structures;\n+mod utils;\n+mod vm_rights;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/lib.rs (original lines from 14 to 16)\n-pub use structures::*;\n-pub use interface::{activate_kernel_vspace, rust_map_kernel_window, copyGlobalMappings, set_vm_root, unmapPage};\n-pub use vm_rights::{VMReadWrite, VMReadOnly, maskVMRights};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/lib.rs (original lines from 18 to 19)\n-    asid_t, asid_pool_t, riscvKSASIDTable, delete_asid_pool, delete_asid,\n-    find_vspace_for_asid, get_asid_pool_by_index, set_asid_pool_by_index\n+    asid_pool_t, asid_t, delete_asid, delete_asid_pool, find_vspace_for_asid,\n+    get_asid_pool_by_index, riscvKSASIDTable, set_asid_pool_by_index,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/lib.rs (original lines from 21 to 21)\n-pub use utils::{pptr_to_paddr, paddr_to_pptr, kpptr_to_paddr, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_LVL_PGSIZE, checkVPAlignment};\n+pub use interface::{\n+    activate_kernel_vspace, copyGlobalMappings, rust_map_kernel_window, set_vm_root, unmapPage,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/lib.rs (original lines from 23 to 23)\n-pub use satp::{sfence, setVSpaceRoot};\n+pub use satp::{setVSpaceRoot, sfence};\n+pub use structures::*;\n+pub use utils::{\n+    checkVPAlignment, kpptr_to_paddr, paddr_to_pptr, pptr_to_paddr, RISCV_GET_LVL_PGSIZE,\n+    RISCV_GET_LVL_PGSIZE_BITS,\n+};\n+pub use vm_rights::{maskVMRights, VMReadOnly, VMReadWrite};\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 3 to 4)\n-use sel4_common::MASK;\n-use sel4_common::sel4_config::{CONFIG_PT_LEVELS, PT_INDEX_BITS, seL4_PageBits, seL4_PageTableBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, seL4_PageTableBits, CONFIG_PT_LEVELS, PT_INDEX_BITS,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 7 to 7)\n+use sel4_common::MASK;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 8 to 10)\n-\n-use super::{structures::vptr_t, satp::sfence};\n-use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 12 to 12)\n-use super::vm_rights::{RISCVGetWriteFromVMRights, RISCVGetReadFromVMRights};\n+use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n+use super::vm_rights::{RISCVGetReadFromVMRights, RISCVGetWriteFromVMRights};\n+use super::{satp::sfence, structures::vptr_t};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 38 to 40)\n-    pub fn new(ppn: usize, sw: usize, dirty: usize, accessed: usize, global: usize, user: usize, execute: usize, write: usize,\n-               read: usize, valid: usize) -> Self {\n-\n+    pub fn new(\n+        ppn: usize,\n+        sw: usize,\n+        dirty: usize,\n+        accessed: usize,\n+        global: usize,\n+        user: usize,\n+        execute: usize,\n+        write: usize,\n+        read: usize,\n+        valid: usize,\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 87 to 88)\n-            ppn, 0, is_leaf as usize, is_leaf as usize, 1,\n-            0, exec as usize, write as usize,read as usize, 1\n+            ppn,\n+            0,\n+            is_leaf as usize,\n+            is_leaf as usize,\n+            1,\n+            0,\n+            exec as usize,\n+            write as usize,\n+            read as usize,\n+            1,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 132 to 132)\n-        self.get_vaild() != 0 && !(self.get_read() != 0 ||self.get_write() != 0 || self.get_execute() != 0)\n+        self.get_vaild() != 0\n+            && !(self.get_read() != 0 || self.get_write() != 0 || self.get_execute() != 0)\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 156 to 156)\n-        while unsafe {(*ret.ptSlot).is_pte_table()} && level > 0 {\n+        while unsafe { (*ret.ptSlot).is_pte_table() } && level > 0 {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/pte.rs (original lines from 159 to 159)\n-            pt = unsafe {(*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t};\n+            pt = unsafe { (*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/satp.rs (original lines from 1 to 1)\n+use super::structures::paddr_t;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/satp.rs (original lines from 3 to 3)\n-use super::structures::paddr_t;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/satp.rs (original lines from 45 to 46)\n-/// \n-/// Risc-v's sfence.vma \n+///\n+/// Risc-v's sfence.vma\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/satp.rs (original lines from 56 to 56)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/satp.rs (original lines from 68 to 68)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/structures.rs (original lines from 2 to 2)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/structures.rs (original lines from 6 to 6)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/structures.rs (original lines from 10 to 10)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/structures.rs (original lines from 15 to 15)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/structures.rs (original lines from 23 to 23)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/structures.rs (original lines from 32 to 34)\n-        Self {\n-            words: [w]\n-        }\n+        Self { words: [w] }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/structures.rs (original lines from 46 to 46)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/utils.rs (original lines from 25 to 25)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/utils.rs (original lines from 36 to 36)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/utils.rs (original lines from 73 to 73)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/vm_rights.rs (original lines from 19 to 19)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/vm_rights.rs (original lines from 31 to 31)\n-        }\n+        };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/rel4team/sel4_vspace/src/vm_rights.rs (original lines from 35 to 35)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `core_intrinsics` is internal to the compiler or standard library\n --> src/lib.rs:1:12\n  |\n1 | #![feature(core_intrinsics)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: using it is strongly discouraged\n  = note: `#[warn(internal_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/satp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `sel4_common::sbi::remote_sfence_vma`\n --> src/satp.rs:2:5\n  |\n2 | use sel4_common::sbi::remote_sfence_vma;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/satp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/satp.rs:15:20\n   |\n15 |               words: 0\n   |  ____________________^\n16 | |                 | (mode & 0xfusize) << 60\n17 | |                 | (asid & 0xffffusize) << 44\n18 | |                 | (ppn & 0xfffffffffffusize) << 0,\n   | |_________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n   = note: `#[warn(clippy::precedence)]` on by default\nhelp: consider parenthesizing your expression\n   |\n15 ~             words: 0\n16 +                 | (mode & 0xfusize) << 60\n17 ~                 | (asid & 0xffffusize) << 44 | ((ppn & 0xfffffffffffusize) << 0),\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/satp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/satp.rs:15:20\n   |\n15 |               words: 0\n   |  ____________________^\n16 | |                 | (mode & 0xfusize) << 60\n17 | |                 | (asid & 0xffffusize) << 44\n   | |____________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n15 ~             words: 0\n16 +                 | (mode & 0xfusize) << 60 | ((asid & 0xffffusize) << 44)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/satp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/satp.rs:15:20\n   |\n15 |               words: 0\n   |  ____________________^\n16 | |                 | (mode & 0xfusize) << 60\n   | |_________________________________________^ help: consider parenthesizing your expression: `0 | ((mode & 0xfusize) << 60)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n...  |\n51 | |                 | (read & 0x1usize) << 1\n52 | |                 | (valid & 0x1usize) << 0],\n   | |_________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8\n45 +                 | (dirty & 0x1usize) << 7\n46 +                 | (accessed & 0x1usize) << 6\n47 +                 | (global & 0x1usize) << 5\n48 +                 | (user & 0x1usize) << 4\n49 +                 | (execute & 0x1usize) << 3\n50 +                 | (write & 0x1usize) << 2\n51 ~                 | (read & 0x1usize) << 1 | ((valid & 0x1usize) << 0)],\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n...  |\n50 | |                 | (write & 0x1usize) << 2\n51 | |                 | (read & 0x1usize) << 1\n   | |________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8\n45 +                 | (dirty & 0x1usize) << 7\n46 +                 | (accessed & 0x1usize) << 6\n47 +                 | (global & 0x1usize) << 5\n48 +                 | (user & 0x1usize) << 4\n49 +                 | (execute & 0x1usize) << 3\n50 +                 | (write & 0x1usize) << 2 | ((read & 0x1usize) << 1)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n...  |\n49 | |                 | (execute & 0x1usize) << 3\n50 | |                 | (write & 0x1usize) << 2\n   | |_________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8\n45 +                 | (dirty & 0x1usize) << 7\n46 +                 | (accessed & 0x1usize) << 6\n47 +                 | (global & 0x1usize) << 5\n48 +                 | (user & 0x1usize) << 4\n49 +                 | (execute & 0x1usize) << 3 | ((write & 0x1usize) << 2)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n...  |\n48 | |                 | (user & 0x1usize) << 4\n49 | |                 | (execute & 0x1usize) << 3\n   | |___________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8\n45 +                 | (dirty & 0x1usize) << 7\n46 +                 | (accessed & 0x1usize) << 6\n47 +                 | (global & 0x1usize) << 5\n48 +                 | (user & 0x1usize) << 4 | ((execute & 0x1usize) << 3)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n46 | |                 | (accessed & 0x1usize) << 6\n47 | |                 | (global & 0x1usize) << 5\n48 | |                 | (user & 0x1usize) << 4\n   | |________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8\n45 +                 | (dirty & 0x1usize) << 7\n46 +                 | (accessed & 0x1usize) << 6\n47 +                 | (global & 0x1usize) << 5 | ((user & 0x1usize) << 4)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n46 | |                 | (accessed & 0x1usize) << 6\n47 | |                 | (global & 0x1usize) << 5\n   | |__________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8\n45 +                 | (dirty & 0x1usize) << 7\n46 +                 | (accessed & 0x1usize) << 6 | ((global & 0x1usize) << 5)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n46 | |                 | (accessed & 0x1usize) << 6\n   | |____________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8\n45 +                 | (dirty & 0x1usize) << 7 | ((accessed & 0x1usize) << 6)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n45 | |                 | (dirty & 0x1usize) << 7\n   | |_________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10\n44 +                 | (sw & 0x3usize) << 8 | ((dirty & 0x1usize) << 7)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n44 | |                 | (sw & 0x3usize) << 8\n   | |______________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n   |\n42 ~             words: [0\n43 +                 | (ppn & 0xfffffffffffusize) << 10 | ((sw & 0x3usize) << 8)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n   | |__________________________________________________^ help: consider parenthesizing your expression: `0 | ((ppn & 0xfffffffffffusize) << 10)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/structures.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/structures.rs:43:26\n   |\n43 |         self.words[0] |= (v64 << 0) & 0x1usize;\n   |                          ^^^^^^^^^^ help: consider reducing it to: `v64`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/vm_rights.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n --> src/vm_rights.rs:9:5\n  |\n9 |     return vm_rights == VMReadWrite;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n  = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n  |\n9 -     return vm_rights == VMReadWrite;\n9 +     vm_rights == VMReadWrite\n  |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/vm_rights.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/vm_rights.rs:14:5\n   |\n14 |     return vm_rights != VMKernelOnly;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n14 -     return vm_rights != VMKernelOnly;\n14 +     vm_rights != VMKernelOnly\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/satp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/satp.rs:15:20\n   |\n15 |               words: 0\n   |  ____________________^\n16 | |                 | (mode & 0xfusize) << 60\n   | |_________________________________________^ help: consider reducing it to: `((mode & 0xfusize) << 60)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/satp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/satp.rs:18:19\n   |\n18 |                 | (ppn & 0xfffffffffffusize) << 0,\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((ppn & 0xfffffffffffusize))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n  --> src/pte.rs:38:5\n   |\n38 | /     pub fn new(ppn: usize, sw: usize, dirty: usize, accessed: usize, global: usize, user: usize, execute: usize, write: usize,\n39 | |                read: usize, valid: usize) -> Self {\n   | |_________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/pte.rs:42:21\n   |\n42 |               words: [0\n   |  _____________________^\n43 | |                 | (ppn & 0xfffffffffffusize) << 10\n   | |__________________________________________________^ help: consider reducing it to: `((ppn & 0xfffffffffffusize) << 10)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/pte.rs:52:19\n   |\n52 |                 | (valid & 0x1usize) << 0],\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((valid & 0x1usize))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/pte.rs:81:19\n   |\n81 |         let ppn = (phys_addr >> 12) as usize;\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(phys_addr >> 12)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/pte.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/pte.rs:167:9\n    |\n167 |         (self.words[0] & 0x1) >> 0\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.words[0] & 0x1)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/asid.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/asid.rs:60:9\n   |\n60 |         return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n60 |         convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize)\n   |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/asid.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/asid.rs:106:5\n    |\n106 |     return ret;\n    |     ^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n106 -     return ret;\n106 +     ret\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/asid.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `0 as *mut _` detected\n   --> src/asid.rs:128:58\n    |\n128 |             riscvKSASIDTable[asid_base >> asidLowBits] = 0 as *mut asid_pool_t;\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `core::ptr::null_mut::<asid_pool_t>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\n    = note: `#[warn(clippy::zero_ptr)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/asid.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `0 as *mut _` detected\n   --> src/asid.rs:144:59\n    |\n144 |             (*poolPtr).array[asid & MASK!(asidLowBits)] = 0 as *mut pte_t;\n    |                                                           ^^^^^^^^^^^^^^^ help: try: `core::ptr::null_mut::<pte_t>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/asid.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/asid.rs:145:25\n    |\n145 |             set_vm_root(&default_vspace_cap)\n    |                         ^^^^^^^^^^^^^^^^^^^ help: change this to: `default_vspace_cap`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/interface.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: creating a shared reference to mutable static is discouraged\n  --> src/interface.rs:95:32\n   |\n95 |                 kpptr_to_paddr(kernel_image_level2_pt.as_ptr() as usize),\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/interface.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: creating a shared reference to mutable static is discouraged\n  --> src/interface.rs:99:28\n   |\n99 |             kpptr_to_paddr(kernel_image_level2_pt.as_ptr() as usize),\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/interface.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: creating a shared reference to mutable static is discouraged\n   --> src/interface.rs:122:38\n    |\n122 |         setVSpaceRoot(kpptr_to_paddr(kernel_root_pageTable.as_ptr() as usize), 0);\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/interface.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: creating a shared reference to mutable static is discouraged\n   --> src/interface.rs:148:42\n    |\n148 |             setVSpaceRoot(kpptr_to_paddr(kernel_root_pageTable.as_ptr() as usize), 0);\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/interface.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: creating a shared reference to mutable static is discouraged\n   --> src/interface.rs:163:42\n    |\n163 |             setVSpaceRoot(kpptr_to_paddr(kernel_root_pageTable.as_ptr() as usize), 0);\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=sel4_vspace, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_48/rel4team/sel4_vspace\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:14:47.411080772 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sel4_vspace v0.1.0 (current)\nerror: running cargo-doc on crate 'sel4_vspace' failed with output:\n-----\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v2.0.11\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n   Compiling ucd-trie v0.1.7\n   Compiling semver v0.9.0\n   Compiling rustix v0.38.44\n   Compiling regex-automata v0.4.9\n   Compiling once_cell v1.20.2\n   Compiling rustc_version v0.2.3\n   Compiling bitflags v2.8.0\n   Compiling linux-raw-sys v0.4.15\n   Compiling bare-metal v0.2.5\n   Compiling autocfg v1.4.0\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v2.0.11\n   Compiling riscv-target v0.1.2\n   Compiling home v0.5.11\n   Compiling either v1.13.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking log v0.4.25\n   Compiling pest v2.7.15\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking scopeguard v1.2.0\n   Compiling glob v0.3.2\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking driver-collect v0.1.0 (https://github.com/rel4team/driver-collect.git?branch=mi_dev#3667ef6a)\n    Checking aarch64-cpu v9.4.0\n   Compiling pest_meta v2.7.15\n   Compiling pest_generator v2.7.15\n    Checking sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git#70d9ea26)\n   Compiling pest_derive v2.7.15\n   Compiling sel4-bitfield-parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling rust_sel4_pbf_parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#bfc7c3c7)\nerror: failed to run custom build command for `sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#bfc7c3c7)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_48/rel4team/sel4_vspace/target/semver-checks/local-sel4_vspace-0_1_0-a03767e473d570c9/target/debug/build/sel4_common-61394c00ba7173a8/build-script-build` (exit status: 1)\n  --- stdout\n  dir /home/runner/check/batch_48/rel4team/sel4_vspace/target/semver-checks/local-sel4_vspace-0_1_0-a03767e473d570c9/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-120064b6f38c3783/out/pbf not exist, and no need to del\n  Directory created successfully: /home/runner/check/batch_48/rel4team/sel4_vspace/target/semver-checks/local-sel4_vspace-0_1_0-a03767e473d570c9/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-120064b6f38c3783/out/pbf\n\n  --- stderr\n  Failed to copy file: No such file or directory (os error 2)\n\n-----\n\nerror: failed to build rustdoc for crate sel4_vspace v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_48/rel4team/sel4_vspace --features ENABLE_SMP &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sel4_vspace v0.1.0\n"
    },
    {
      "cmd_idx": 6,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_vspace, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_48/rel4team/sel4_vspace\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:14:32.640485895 +08:00:00\n    Building sel4_vspace v0.1.0 (current)\nerror: running cargo-doc on crate 'sel4_vspace' failed with output:\n-----\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v2.0.11\n   Compiling lazy_static v1.5.0\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n   Compiling ucd-trie v0.1.7\n   Compiling semver v0.9.0\n   Compiling rustix v0.38.44\n   Compiling regex-automata v0.4.9\n   Compiling once_cell v1.20.2\n   Compiling rustc_version v0.2.3\n   Compiling bitflags v2.8.0\n   Compiling linux-raw-sys v0.4.15\n   Compiling bare-metal v0.2.5\n   Compiling autocfg v1.4.0\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v2.0.11\n   Compiling riscv-target v0.1.2\n   Compiling home v0.5.11\n   Compiling either v1.13.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking log v0.4.25\n   Compiling pest v2.7.15\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking scopeguard v1.2.0\n   Compiling glob v0.3.2\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking driver-collect v0.1.0 (https://github.com/rel4team/driver-collect.git?branch=mi_dev#3667ef6a)\n    Checking aarch64-cpu v9.4.0\n   Compiling pest_meta v2.7.15\n   Compiling pest_generator v2.7.15\n    Checking sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git#70d9ea26)\n   Compiling pest_derive v2.7.15\n   Compiling sel4-bitfield-parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling rust_sel4_pbf_parser v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#bfc7c3c7)\nerror: failed to run custom build command for `sel4_common v0.1.0 (https://github.com/rel4team/sel4_common.git?branch=mi_dev#bfc7c3c7)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_48/rel4team/sel4_vspace/target/semver-checks/local-sel4_vspace-0_1_0-a03767e473d570c9/target/debug/build/sel4_common-61394c00ba7173a8/build-script-build` (exit status: 1)\n  --- stdout\n  dir /home/runner/check/batch_48/rel4team/sel4_vspace/target/semver-checks/local-sel4_vspace-0_1_0-a03767e473d570c9/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-120064b6f38c3783/out/pbf not exist, and no need to del\n  Directory created successfully: /home/runner/check/batch_48/rel4team/sel4_vspace/target/semver-checks/local-sel4_vspace-0_1_0-a03767e473d570c9/target/riscv64gc-unknown-none-elf/debug/build/sel4_common-120064b6f38c3783/out/pbf\n\n  --- stderr\n  Failed to copy file: No such file or directory (os error 2)\n\n-----\n\nerror: failed to build rustdoc for crate sel4_vspace v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_48/rel4team/sel4_vspace --features ENABLE_SMP &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sel4_vspace v0.1.0\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/platform/aarch64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 1 to 1)\n+use super::desc::{DescriptorAttr, MappingFlags, MemAttr};\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/platform/aarch64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 2 to 2)\n-use tock_registers::interfaces::{ReadWriteable, Readable, Writeable};\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/platform/aarch64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/src/platform/aarch64_qemu_virt/boot.rs (original lines from 4 to 4)\n-use super::desc::{DescriptorAttr, MappingFlags, MemAttr};\n+use tock_registers::interfaces::{ReadWriteable, Readable, Writeable};\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/platform/riscv64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/src/platform/riscv64_qemu_virt/boot.rs (original lines from 1 to 1)\n-use riscv::register::satp;\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/platform/riscv64_qemu_virt/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/src/platform/riscv64_qemu_virt/boot.rs (original lines from 3 to 3)\n+use riscv::register::satp;\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/platform/x86_pc/boot.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/src/platform/x86_pc/boot.rs (original lines from 26 to 26)\n-    | Cr4Flags::OSFXSR.bits() | Cr4Flags::OSXMMEXCPT_ENABLE.bits();\n+    | Cr4Flags::OSFXSR.bits()\n+    | Cr4Flags::OSXMMEXCPT_ENABLE.bits();\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:4:38\n  |\n4 | if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:6:46\n  |\n6 | } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:8:46\n  |\n8 | } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/platform/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:50\n   |\n10 | } else if #[cfg(all(target_arch = \"loongarch64\", platform_family = \"loongarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"loongarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"loongarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:3:12\n  |\n3 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/lib.rs:10:5\n   |\n10 |     loop {}\n   |     ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-01-27 1:15:26.60099781 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\n       Built [   4.498s] (current)\n     Parsing arch_boot v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/target/semver-checks/local-arch_boot-0_1_0-ca3bb58f3e9486e4/target/x86_64-unknown-linux-gnu/doc/arch_boot.json\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/platform/mod.rs",
      "kind": "Mirai",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:4:38\n  |\n4 | if #[cfg(all(target_arch = \"x86_64\", platform_family = \"x86-pc\"))] {\n  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"x86-pc\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"x86-pc\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n  = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/platform/mod.rs",
      "kind": "Mirai",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:6:46\n  |\n6 | } else if #[cfg(all(target_arch = \"riscv64\", platform_family = \"riscv64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"riscv64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"riscv64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/platform/mod.rs",
      "kind": "Mirai",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n --> src/platform/mod.rs:8:46\n  |\n8 | } else if #[cfg(all(target_arch = \"aarch64\", platform_family = \"aarch64-qemu-virt\"))] {\n  |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-qemu-virt\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/platform/mod.rs",
      "kind": "Mirai",
      "raw": "warning: unexpected `cfg` condition name: `platform_family`\n  --> src/platform/mod.rs:10:50\n   |\n10 | } else if #[cfg(all(target_arch = \"loongarch64\", platform_family = \"loongarch64-qemu-virt\"))] {\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"loongarch64-qemu-virt\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"loongarch64-qemu-virt\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:3:12\n  |\n3 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/platform/mod.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible attempt to subtract with overflow\n  --> src/platform/mod.rs:21:68\n   |\n21 |         core::slice::from_raw_parts_mut(_sbss as usize as *mut u8, _ebss as usize - _sbss as usize)\n   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 1:15:44.074155166 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
    },
    {
      "cmd_idx": 16,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:15:21.067506645 +08:00:00\n    Building arch_boot v0.1.0 (current)\n       Built [   4.498s] (current)\n     Parsing arch_boot v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot/target/semver-checks/local-arch_boot-0_1_0-ca3bb58f3e9486e4/target/x86_64-unknown-linux-gnu/doc/arch_boot.json\n"
    },
    {
      "cmd_idx": 17,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_48/shilei-massclouds/arch_boot/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:15:37.367093552 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling rustversion v1.0.19\n   Compiling indexmap v2.7.1\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling paste v1.0.15\n    Checking bitflags v2.8.0\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.19.15\n    Checking volatile v0.4.6\n   Compiling x86 v0.52.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking bit v0.1.1\n    Checking raw-cpuid v11.3.0\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n17:15:42|RAP|ERROR|: Finished with non-zero exit code.\n"
    }
  ]
}