{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (243d2ca4d 2025-01-06)",
          "commit_hash": "243d2ca4db6f96d2d18aaf3a2381251d38eb6b0b",
          "commit_date": "2025-01-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.6"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-07-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1736601694493,
        "finish": 1736601696034,
        "duration_ms": 1541,
        "git_time": "2025-01-11 21:16:49 +0800",
        "git_sha": "75b8311a67f1171923e75534468ed4a155cf052a"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "os-module",
        "repo": "virt2slint"
      },
      {
        "user": "os-module",
        "repo": "visionfive2-sd"
      }
    ],
    "packages": [
      {
        "name": "virt2slint",
        "repo": {
          "repo_idx": 0,
          "user": "os-module",
          "repo": "virt2slint"
        }
      },
      {
        "name": "testos",
        "repo": {
          "repo_idx": 1,
          "user": "os-module",
          "repo": "visionfive2-sd"
        }
      },
      {
        "name": "visionfive2-sd",
        "repo": {
          "repo_idx": 1,
          "user": "os-module",
          "repo": "visionfive2-sd"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 2,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 28693,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 30662,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 29744,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 40535,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 32465,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 275,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 2414,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 523,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 30662,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 1,
      "duration_ms": 104,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 14,
      "duration_ms": 7433,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 6282,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 5710,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 1022,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7433,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6282,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 5710,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 23,
      "duration_ms": 4257,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 4409,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 5286,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 9080,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 354,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 4409,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/os-module/virt2slint/src/lib.rs (original lines from 87 to 87)\n-        \n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/os-module/virt2slint/src/lib.rs (original lines from 144 to 144)\n-    \n+\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=virt2slint, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_11/os-module/virt2slint\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\ntimestamp=2025-01-09 18:14:46.503049758 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building virt2slint v0.1.0 (current)\n       Built [  28.840s] (current)\n     Parsing virt2slint v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: virt2slint not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=virt2slint, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_11/os-module/virt2slint\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-09 18:14:15.840193239 +08:00:00\n    Building virt2slint v0.1.0 (current)\n       Built [  28.840s] (current)\n     Parsing virt2slint v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: virt2slint not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 10,
      "file": "build.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/os-module/visionfive2-sd/example/testos/build.rs (original lines from 38 to 38)\n+\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n  --> src/boot.rs:72:31\n   |\n72 |     read_time() / (VF2_FREQ / 1000_000)\n   |                               ^^^^^^^^ help: consider: `1_000_000`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n   = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n  --> src/boot.rs:94:49\n   |\n94 |     while read_time() - start < us * VF2_FREQ / 1000_000 {\n   |                                                 ^^^^^^^^ help: consider: `1_000_000`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/config.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n --> src/config.rs:4:29\n  |\n4 | pub const VF2_FREQ: usize = 4000_000;\n  |                             ^^^^^^^^ help: consider: `4_000_000`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/console.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/console.rs:21:32\n   |\n21 |             let ier = base.add(1 * W).read_volatile();\n   |                                ^^^^^ help: consider reducing it to: `W`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/console.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/console.rs:22:22\n   |\n22 |             base.add(1 * W).write_volatile(ier | 0x01);\n   |                      ^^^^^ help: consider reducing it to: `W`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/console.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n  --> src/console.rs:34:22\n   |\n34 |             base.add(W * 0).write_volatile(c);\n   |                      ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n   = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/console.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n  --> src/console.rs:41:36\n   |\n41 |             Some(unsafe { base.add(0 * W).read_volatile() })\n   |                                    ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/fatfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_block` doesn't need a mutable reference\n   --> src/fatfs.rs:111:48\n    |\n111 |                 self.mmc.write_block(block_id, &mut tmp_buf);\n    |                                                ^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/static_keys.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/static_keys.rs:141:1\n    |\n141 | const ARRAY_REPEAT_VALUE: FlagCache = FlagCache::new();\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n    | make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/static_keys.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `index` is only used to index `FLAGS`\n   --> src/static_keys.rs:151:22\n    |\n151 |         for index in 0..100 {\n    |                      ^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n151 |         for <item> in FLAGS.iter().take(100) {\n    |             ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/static_keys.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/static_keys.rs:161:23\n    |\n161 |     TIME_ATOMIC.store(end1 as usize, atomic::Ordering::SeqCst);\n    |                       ^^^^^^^^^^^^^ help: try: `end1`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/static_keys.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/static_keys.rs:180:21\n    |\n180 |     TIME_KEYS.store(end2 as usize, atomic::Ordering::SeqCst);\n    |                     ^^^^^^^^^^^^^ help: try: `end2`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/static_keys.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `data`\n   --> src/static_keys.rs:198:18\n    |\n198 |         for i in 0..data.len() {\n    |                  ^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n198 |         for <item> in &mut data {\n    |             ~~~~~~    ~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/static_keys.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> src/static_keys.rs:199:13\n    |\n199 |             data[i] = (data[i] + val as u64);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `data[i] += val as u64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=testos, checker=Outdated\ntoolchain=nightly-2024-05-01, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_11/os-module/visionfive2-sd/example/testos\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-09 18:17:37.91215162 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbuddy_system_allocator  0.8.0    ---     0.11.0  Normal  ---\n"
    },
    {
      "cmd_idx": 15,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=testos, checker=Clippy\n// toolchain=nightly-2024-05-01, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_11/os-module/visionfive2-sd/example/testos\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n// timestamp=2025-01-09 18:16:54.218940197 +08:00:00\n    Updating git repository `https://github.com/os-module/eebpf.git`\n    Updating git submodule `https://github.com/Godones/rbpf`\n Downloading crates ...\n  Downloaded spin v0.7.1\n  Downloaded preprint v0.1.0\n  Downloaded naked-function-macro v0.1.5\n  Downloaded naked-function v0.1.5\n  Downloaded buddy_system_allocator v0.8.0\n  Downloaded bitfield-struct v0.8.0\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling riscv v0.12.1\n    Checking log v0.4.22\n   Compiling naked-function v0.1.5\n    Checking riscv-pac v0.2.0\n    Checking cfg-if v1.0.0\n    Checking spin v0.7.1\n   Compiling lock_api v0.4.12\n    Checking preprint v0.1.0\n   Compiling quote v1.0.38\n   Compiling syn v2.0.95\n    Checking embedded-hal v1.0.0\n   Compiling testos v0.1.0 (/home/runner/check/batch_11/os-module/visionfive2-sd/example/testos)\n    Checking spin v0.9.8\n    Checking bitflags v1.3.2\n    Checking critical-section v1.2.0\n    Checking buddy_system_allocator v0.8.0\n    Checking fatfs v0.4.0 (https://github.com/os-module/rust-fatfs.git#55d0dbac)\n    Checking jtable v0.1.0 (https://github.com/os-module/eebpf.git#445247dc)\n   Compiling bitfield-struct v0.8.0\n   Compiling naked-function-macro v0.1.5\n   Compiling riscv-macros v0.1.0\n    Checking visionfive2-sd v0.1.0 (/home/runner/check/batch_11/os-module/visionfive2-sd)\nerror: could not compile `testos` (bin \"testos\") due to 3 previous errors; 12 warnings emitted\n"
    },
    {
      "cmd_idx": 16,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=testos, checker=Lockbud\n// toolchain=nightly-2024-05-01, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_11/os-module/visionfive2-sd/example/testos\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:17:10.326151968 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling autocfg v1.4.0\n   Compiling scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling riscv v0.12.1\n   Compiling log v0.4.22\n   Compiling naked-function v0.1.5\n[2025-01-09T10:17:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-09T10:17:10Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling preprint v0.1.0\n   Compiling spin v0.7.1\n   Compiling embedded-hal v1.0.0\n   Compiling lock_api v0.4.12\n   Compiling bitflags v1.3.2\n   Compiling testos v0.1.0 (/home/runner/check/batch_11/os-module/visionfive2-sd/example/testos)\n   Compiling quote v1.0.38\n   Compiling riscv-pac v0.2.0\n   Compiling spin v0.9.8\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.2.0\n   Compiling syn v2.0.95\n   Compiling fatfs v0.4.0 (https://github.com/os-module/rust-fatfs.git#55d0dbac)\n   Compiling buddy_system_allocator v0.8.0\n   Compiling jtable v0.1.0 (https://github.com/os-module/eebpf.git#445247dc)\n   Compiling bitfield-struct v0.8.0\n   Compiling naked-function-macro v0.1.5\n   Compiling riscv-macros v0.1.0\n   Compiling visionfive2-sd v0.1.0 (/home/runner/check/batch_11/os-module/visionfive2-sd)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n  --> src/boot.rs:26:5\n   |\n26 | /     core::arch::asm!(\n27 | |     \"   la sp, {stack}\n28 | |         li t0, {stack_size}\n29 | |         mv t1,a0\n...  |\n40 | |     options(noreturn),\n41 | |     )\n   | |_____^ consider using the `naked_asm!` macro instead\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/main.rs:5:12\n  |\n5 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> src/main.rs:4:12\n  |\n4 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/main.rs:99:28\n   |\n99 |             info.message().unwrap()\n   |                            ^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0599, E0787.\nFor more information about an error, try `rustc --explain E0599`.\nwarning: `testos` (bin \"testos\") generated 2 warnings\nerror: could not compile `testos` (bin \"testos\") due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 17,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=testos, checker=Rapx\n// toolchain=nightly-2024-05-01, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_11/os-module/visionfive2-sd/example/testos\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:17:22.092484966 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling autocfg v1.4.0\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n   Compiling naked-function v0.1.5\n   Compiling riscv v0.12.1\n    Checking critical-section v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling testos v0.1.0 (/home/runner/check/batch_11/os-module/visionfive2-sd/example/testos)\n    Checking preprint v0.1.0\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking spin v0.7.1\n    Checking riscv-pac v0.2.0\n   Compiling syn v2.0.95\n    Checking spin v0.9.8\n    Checking embedded-hal v1.0.0\n    Checking bitflags v1.3.2\n    Checking buddy_system_allocator v0.8.0\n    Checking jtable v0.1.0 (https://github.com/os-module/eebpf.git#445247dc)\n    Checking fatfs v0.4.0 (https://github.com/os-module/rust-fatfs.git#55d0dbac)\n   Compiling naked-function-macro v0.1.5\n   Compiling bitfield-struct v0.8.0\n   Compiling riscv-macros v0.1.0\n    Checking visionfive2-sd v0.1.0 (/home/runner/check/batch_11/os-module/visionfive2-sd)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n  --> src/boot.rs:26:5\n   |\n26 | /     core::arch::asm!(\n27 | |     \"   la sp, {stack}\n28 | |         li t0, {stack_size}\n29 | |         mv t1,a0\n...  |\n40 | |     options(noreturn),\n41 | |     )\n   | |_____^ consider using the `naked_asm!` macro instead\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/main.rs:5:12\n  |\n5 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> src/main.rs:4:12\n  |\n4 | #![feature(panic_info_message)]\n  |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/main.rs:99:28\n   |\n99 |             info.message().unwrap()\n   |                            ^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0599, E0787.\nFor more information about an error, try `rustc --explain E0599`.\nwarning: `testos` (bin \"testos\") generated 2 warnings\nerror: could not compile `testos` (bin \"testos\") due to 2 previous errors; 2 warnings emitted\n10:17:27|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/lib.rs:361:20\n    |\n361 |           let resp = resp[0] as u128\n    |  ____________________^\n362 | |             | (resp[1] as u128) << 32\n363 | |             | (resp[2] as u128) << 64\n364 | |             | (resp[3] as u128) << 96;\n    | |_____________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\nhelp: consider parenthesizing your expression\n    |\n361 ~         let resp = resp[0] as u128\n362 +             | (resp[1] as u128) << 32\n363 ~             | (resp[2] as u128) << 64 | ((resp[3] as u128) << 96);\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/lib.rs:361:20\n    |\n361 |           let resp = resp[0] as u128\n    |  ____________________^\n362 | |             | (resp[1] as u128) << 32\n363 | |             | (resp[2] as u128) << 64\n    | |_____________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\nhelp: consider parenthesizing your expression\n    |\n361 ~         let resp = resp[0] as u128\n362 +             | (resp[1] as u128) << 32 | ((resp[2] as u128) << 64)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/lib.rs:361:20\n    |\n361 |           let resp = resp[0] as u128\n    |  ____________________^\n362 | |             | (resp[1] as u128) << 32\n    | |_____________________________________^ help: consider parenthesizing your expression: `resp[0] as u128 | ((resp[1] as u128) << 32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/lib.rs:435:32\n    |\n435 |     let dma_desc_base: usize = dma_desc_base_lower as usize | (dma_desc_base_upper as usize) << 32;\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `dma_desc_base_lower as usize | ((dma_desc_base_upper as usize) << 32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/cmd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variant name ends with the enum's name\n  --> src/cmd.rs:22:5\n   |\n22 |     AppCmd,\n   |     ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names\n   = note: `#[warn(clippy::enum_variant_names)]` on by default\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/cmd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variant name ends with the enum's name\n  --> src/cmd.rs:23:5\n   |\n23 |     GenCmd,\n   |     ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/cmd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/cmd.rs:34:1\n   |\n34 | impl Into<u8> for Cmd {\n   | ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<cmd::Cmd>`\n   |\n34 ~ impl From<Cmd> for u8 {\n35 ~     fn from(val: Cmd) -> Self {\n36 ~         match val {\n37 |             Cmd::GoIdleState => 0,\n...\n65 |             _ => {\n66 ~                 panic!(\"Not implemented for cmd {:?}\", val);\n   |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n --> src/register.rs:6:29\n  |\n6 | pub const CTRL_REG: usize = SDIO_BASE + 0x00;\n  |                             ^^^^^^^^^^^^^^^^ help: consider reducing it to: `SDIO_BASE`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n  = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n50 | impl_into_u32!(CmdArg);\n   | ---------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::CmdArg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n56 | impl_into_u32!(ByteCountReg);\n   | ---------------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::ByteCountReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n60 | impl_into_u32!(BlkSizeReg);\n   | -------------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::BlkSizeReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n65 | impl_into_u32!(PowerReg);\n   | ------------------------ in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::PowerReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/register.rs:29:9\n   |\n29 |         impl Into<u32> for $name {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n...\n70 | impl_into_u32!(CDetectReg);\n   | -------------------------- in this macro invocation\n   |\n   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n   = help: replace the `Into` implementation with `From<register::CDetectReg>`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: this warning originates in the macro `impl_into_u32` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:506:9\n    |\n498 | /         let cmd = CmdReg::new()\n499 | |             .with_start_cmd(true)\n500 | |             .with_use_hold_reg(true)\n501 | |             .with_response_expect(true)\n...   |\n504 | |             .with_card_number(card_number as u16)\n505 | |             .with_cmd_index(cmd_number as u16);\n    | |_______________________________________________- unnecessary `let` binding\n506 |           cmd\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n498 ~         \n499 ~         CmdReg::new()\n500 +             .with_start_cmd(true)\n501 +             .with_use_hold_reg(true)\n502 +             .with_response_expect(true)\n503 +             .with_wait_prvdata_complete(true)\n504 +             .with_check_response_crc(true)\n505 +             .with_card_number(card_number as u16)\n506 +             .with_cmd_index(cmd_number as u16)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:510:9\n    |\n509 |         let cmd = CmdReg::default(card_number, cmd_number);\n    |         --------------------------------------------------- unnecessary `let` binding\n510 |         cmd\n    |         ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n509 ~         \n510 ~         CmdReg::default(card_number, cmd_number)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:515:9\n    |\n514 |         let cmd = CmdReg::default(card_number, cmd_number).with_data_expected(true);\n    |         ---------------------------------------------------------------------------- unnecessary `let` binding\n515 |         cmd\n    |         ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n514 ~         \n515 ~         CmdReg::default(card_number, cmd_number).with_data_expected(true)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:524:17\n    |\n523 |                 let cmd0 = CmdReg::with_no_data(0, value.into()).with_send_initialization(true);\n    |                 -------------------------------------------------------------------------------- unnecessary `let` binding\n524 |                 cmd0\n    |                 ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n523 ~                 \n524 ~                 CmdReg::with_no_data(0, value.into()).with_send_initialization(true)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:528:17\n    |\n527 |                 let cmd = CmdReg::with_no_data(0, value.into());\n    |                 ------------------------------------------------ unnecessary `let` binding\n528 |                 cmd\n    |                 ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n527 ~                 \n528 ~                 CmdReg::with_no_data(0, value.into())\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:532:17\n    |\n531 |                 let cmd41 = CmdReg::with_no_data(0, value.into()).with_check_response_crc(false);\n    |                 --------------------------------------------------------------------------------- unnecessary `let` binding\n532 |                 cmd41\n    |                 ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n531 ~                 \n532 ~                 CmdReg::with_no_data(0, value.into()).with_check_response_crc(false)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:536:17\n    |\n535 |                 let cmd9 = CmdReg::with_no_data(0, value.into()).with_check_response_crc(false);\n    |                 -------------------------------------------------------------------------------- unnecessary `let` binding\n536 |                 cmd9\n    |                 ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n535 ~                 \n536 ~                 CmdReg::with_no_data(0, value.into()).with_check_response_crc(false)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:542:17\n    |\n539 | /                 let cmd2 = CmdReg::with_no_data(0, value.into())\n540 | |                     .with_check_response_crc(false)\n541 | |                     .with_response_length(true);\n    | |________________________________________________- unnecessary `let` binding\n542 |                   cmd2\n    |                   ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n539 ~                 \n540 ~                 CmdReg::with_no_data(0, value.into())\n541 +                     .with_check_response_crc(false)\n542 +                     .with_response_length(true)\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:546:17\n    |\n545 |                 let cmd = CmdReg::with_data(0, value.into());\n    |                 --------------------------------------------- unnecessary `let` binding\n546 |                 cmd\n    |                 ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n545 ~                 \n546 ~                 CmdReg::with_data(0, value.into())\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/register.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/register.rs:550:17\n    |\n549 |                 let cmd = CmdReg::with_data(0, value.into()).with_transfer_dir(true);\n    |                 --------------------------------------------------------------------- unnecessary `let` binding\n550 |                 cmd\n    |                 ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n    |\n549 ~                 \n550 ~                 CmdReg::with_data(0, value.into()).with_transfer_dir(true)\n    |\n\n"
    },
    {
      "cmd_idx": 20,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=visionfive2-sd, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_11/os-module/visionfive2-sd\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\ntimestamp=2025-01-09 18:17:10.323466696 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building visionfive2-sd v0.1.0 (current)\n       Built [   4.046s] (current)\n     Parsing visionfive2-sd v0.1.0 (current)\n      Parsed [   0.006s] (current)\nerror: visionfive2-sd not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 23,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=visionfive2-sd, checker=Outdated\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_11/os-module/visionfive2-sd\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-09 18:17:38.267309157 +08:00:00\n\nName             Project  Compat  Latest  Kind    Platform\n----             -------  ------  ------  ----    --------\nbitfield-struct  0.8.0    ---     0.10.0  Normal  ---\n"
    },
    {
      "cmd_idx": 24,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=visionfive2-sd, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_11/os-module/visionfive2-sd\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 18:17:05.913732104 +08:00:00\n    Building visionfive2-sd v0.1.0 (current)\n       Built [   4.046s] (current)\n     Parsing visionfive2-sd v0.1.0 (current)\n      Parsed [   0.006s] (current)\nerror: visionfive2-sd not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    }
  ]
}