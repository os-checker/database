{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (243d2ca4d 2025-01-06)",
          "commit_hash": "243d2ca4db6f96d2d18aaf3a2381251d38eb6b0b",
          "commit_date": "2025-01-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.6"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-07-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-none",
              "rust-std-loongarch64-unknown-none",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1737318492011,
        "finish": 1737318493092,
        "duration_ms": 1080,
        "git_time": "2025-01-15 15:33:14 +0800",
        "git_sha": "78f7222ac5d4c452fdc3cabe360c2b1390fbe5e6"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "arceos-org",
        "repo": "kernel_guard"
      },
      {
        "user": "arceos-org",
        "repo": "kspin"
      }
    ],
    "packages": [
      {
        "name": "kernel_guard",
        "repo": {
          "repo_idx": 0,
          "user": "arceos-org",
          "repo": "kernel_guard"
        }
      },
      {
        "name": "kspin",
        "repo": {
          "repo_idx": 1,
          "user": "arceos-org",
          "repo": "kspin"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2992,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 164,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 169,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 165,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 163,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 6782,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 3750,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 3727,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 3718,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none",
      "count": 0,
      "duration_ms": 3731,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 2,
      "duration_ms": 3028,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 4044,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 107,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 0,
      "duration_ms": 99,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 92,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 3598,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 3721,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 3718,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 3716,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target loongarch64-unknown-none",
      "count": 0,
      "duration_ms": 3701,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 324,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 182,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 176,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 185,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 183,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 75,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 707,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 3942,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 206,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 200,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 207,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 7286,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 4014,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 3933,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 3954,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 3457,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 4215,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 127,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 132,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 4520,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 3976,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 3950,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 3976,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 263,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 200,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 183,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 199,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 181,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 77,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 5,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `NoOp`\n   --> src/lib.rs:121:5\n    |\n121 | /     pub const fn new() -> Self {\n122 | |         Self\n123 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n119 + impl Default for NoOp {\n120 +     fn default() -> Self {\n121 +         Self::new()\n122 +     }\n123 + }\n    |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/arch/x86.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n --> src/arch/x86.rs:9:14\n  |\n9 |     unsafe { asm!(\"pushf; pop {}; cli\", out(reg) flags) };\n  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/arch/x86.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> src/arch/x86.rs:16:18\n   |\n16 |         unsafe { asm!(\"sti\") };\n   |                  ^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    }
  ]
}