{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (1bc403daa 2024-10-11)",
          "commit_hash": "1bc403daadbebb553ccc211a0a8eebb73989665f",
          "commit_date": "2024-10-11",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-2024-10-12-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1732256340604,
        "finish": 1732256398241,
        "duration_ms": 57637,
        "git_time": "2024-11-22 14:00:44 +0800",
        "git_sha": "21a301e9e604b586c516c90bd47c035177435db2"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "ZR233",
        "repo": "arm-gic-driver"
      },
      {
        "user": "ZR233",
        "repo": "arm-pl011-rs"
      },
      {
        "user": "ZR233",
        "repo": "ostool"
      },
      {
        "user": "arceos-hypervisor",
        "repo": "arm_vcpu"
      },
      {
        "user": "arceos-hypervisor",
        "repo": "arm_vgic"
      },
      {
        "user": "arceos-hypervisor",
        "repo": "axaddrspace"
      },
      {
        "user": "arceos-hypervisor",
        "repo": "axdevice"
      },
      {
        "user": "arceos-hypervisor",
        "repo": "axvcpu"
      }
    ],
    "packages": [
      {
        "name": "arm-gic-driver",
        "repo": {
          "repo_idx": 0,
          "user": "ZR233",
          "repo": "arm-gic-driver"
        }
      },
      {
        "name": "arm-pl011-rs",
        "repo": {
          "repo_idx": 1,
          "user": "ZR233",
          "repo": "arm-pl011-rs"
        }
      },
      {
        "name": "ostool",
        "repo": {
          "repo_idx": 2,
          "user": "ZR233",
          "repo": "ostool"
        }
      },
      {
        "name": "arm_vcpu",
        "repo": {
          "repo_idx": 3,
          "user": "arceos-hypervisor",
          "repo": "arm_vcpu"
        }
      },
      {
        "name": "arm_vgic",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-hypervisor",
          "repo": "arm_vgic"
        }
      },
      {
        "name": "axaddrspace",
        "repo": {
          "repo_idx": 5,
          "user": "arceos-hypervisor",
          "repo": "axaddrspace"
        }
      },
      {
        "name": "axdevice",
        "repo": {
          "repo_idx": 6,
          "user": "arceos-hypervisor",
          "repo": "axdevice"
        }
      },
      {
        "name": "axvcpu",
        "repo": {
          "repo_idx": 7,
          "user": "arceos-hypervisor",
          "repo": "axvcpu"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p arm-gic-driver -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p arm-gic-driver -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 4008,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2021,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 4939,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 2427,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 8003,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 250,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 88,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4939,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p arm-pl011-rs -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p arm-pl011-rs -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 870,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 739,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 49,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 719,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 595,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 5388,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 67,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 65,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p ostool -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3709,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 4881,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 3690,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 199,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3709,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4881,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 3690,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p arm_vcpu -- --emit=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p arm_vcpu -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 4664,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1842,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 5795,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 2348,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 4885,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 87,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 121,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4664,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1842,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 5795,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 4885,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p arm_vgic -- --emit=json",
      "count": 9,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 31,
      "duration_ms": 6891,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 9190,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 7159,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 90,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axaddrspace -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axaddrspace -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axaddrspace -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axaddrspace -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1794,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1586,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 680,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1785,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 2419,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2208,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 691,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 2284,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 3631,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 112,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axdevice -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axdevice -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axdevice -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p axdevice -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 5927,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 2164,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1759,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1841,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 8031,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3130,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2475,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 2606,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 6165,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 246,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p axvcpu -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p axvcpu -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p axvcpu -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p axvcpu -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 4356,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1628,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 721,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1792,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 5527,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2169,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 748,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 2228,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 5114,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 256,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 65,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 5,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-08T08:34:47Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 6,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-08T08:34:47Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-08T08:34:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-08T08:34:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 12,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arm-gic-driver, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/ZR233/arm-gic-driver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling tock-registers v0.9.0\n   Compiling once_cell v1.20.2\n   Compiling aarch64-cpu v10.0.0\n   Compiling bitflags v2.6.0\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling log v0.4.22\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-08T08:34:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling quote v1.0.37\n   Compiling syn v2.0.87\n   Compiling enum_dispatch v0.3.13\n   Compiling arm-gic-driver v0.3.1 (/home/runner/check/batch_1/ZR233/arm-gic-driver)\nerror: ambiguous operand size for instruction 'mov'\n   --> src/version/v3.rs:368:5\n    |\n368 |     MOV   w0, #1\n    |     ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:3:11\n    |\n3   |     MOV   w0, #1\n    |           ^^\n\nerror: invalid instruction mnemonic 'msr'\n   --> src/version/v3.rs:369:5\n    |\n369 |     MSR   ICC_IGRPEN1_EL1, x0\n    |     ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:4:5\n    |\n4   |     MSR   ICC_IGRPEN1_EL1, x0\n    |     ^^^\n\nerror: invalid instruction mnemonic 'isb'\n   --> src/version/v3.rs:370:5\n    |\n370 |     ISB\"\n    |     ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:5:5\n    |\n5   |     ISB\n    |     ^^^\n\nerror: invalid instruction mnemonic 'mrs'\n   --> src/version/v3.rs:350:30\n    |\n350 |             core::arch::asm!(concat!(\"mrs {}, \", $name), out(reg) x);\n    |                              ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:2:2\n    |\n2   |     mrs rax, icc_iar1_el1\n    |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n   --> src/version/v3.rs:360:30\n    |\n360 |             core::arch::asm!(concat!(\"msr \", $name, \", {0:x}\"), in(reg) x);\n    |                              ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:2:2\n    |\n2   |     msr icc_eoir1_el1, ax\n    |     ^^^\n\nerror: invalid instruction mnemonic 'mrs'\n   --> src/version/v3.rs:350:30\n    |\n350 |             core::arch::asm!(concat!(\"mrs {}, \", $name), out(reg) x);\n    |                              ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:2:2\n    |\n2   |     mrs rax, ICC_SRE_EL1\n    |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n   --> src/version/v3.rs:360:30\n    |\n360 |             core::arch::asm!(concat!(\"msr \", $name, \", {0:x}\"), in(reg) x);\n    |                              ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:2:2\n    |\n2   |     msr ICC_SRE_EL1, ax\n    |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n   --> src/version/v3.rs:360:30\n    |\n360 |             core::arch::asm!(concat!(\"msr \", $name, \", {0:x}\"), in(reg) x);\n    |                              ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:2:2\n    |\n2   |     msr ICC_PMR_EL1, ax\n    |     ^^^\n\nerror: invalid instruction mnemonic 'msr'\n   --> src/version/v3.rs:360:30\n    |\n360 |             core::arch::asm!(concat!(\"msr \", $name, \", {0:x}\"), in(reg) x);\n    |                              ^\n    |\nnote: instantiated into assembly here\n   --> <inline asm>:2:2\n    |\n2   |     msr ICC_CTLR_EL1, ax\n    |     ^^^\n\nerror: could not compile `arm-gic-driver` (lib) due to 9 previous errors\n"
    },
    {
      "cmd_idx": 33,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=ostool, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/ZR233/ostool\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling serde v1.0.215\n    Checking cfg-if v1.0.0\n   Compiling libc v0.2.162\n   Compiling thiserror v1.0.69\n   Compiling pkg-config v0.3.31\n    Checking static_assertions v1.1.0\n    Checking memchr v2.7.4\n   Compiling quote v1.0.37\n   Compiling syn v2.0.87\n   Compiling autocfg v1.4.0\n    Checking adler2 v2.0.0\n    Checking miniz_oxide v0.8.0\n   Compiling libudev-sys v0.1.4\n    Checking twox-hash v1.6.3\n   Compiling num-traits v0.2.19\n    Checking crc32fast v1.4.2\n    Checking utf8parse v0.2.2\n    Checking ruzstd v0.7.2\n    Checking anstyle-parse v0.2.6\n    Checking flate2 v1.0.35\nerror: failed to run custom build command for `libudev-sys v0.1.4`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_3/ZR233/ostool/target/debug/build/libudev-sys-8ce792348ab024e9/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=LIBUDEV_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=LIBUDEV_STATIC\n  cargo:rerun-if-env-changed=LIBUDEV_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libudev-sys-0.1.4/build.rs:38:41:\n  called `Result::unwrap()` on an `Err` value: \"\\npkg-config exited with status code 1\\n> PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags libudev\\n\\nThe system library `libudev` required by crate `libudev-sys` was not found.\\nThe file `libudev.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\\nThe PKG_CONFIG_PATH environment variable is not set.\\n\\nHINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `libudev.pc`.\\n\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 34,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=ostool, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/ZR233/ostool\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling serde v1.0.215\n   Compiling libc v0.2.162\n   Compiling cfg-if v1.0.0\n   Compiling thiserror v1.0.69\n   Compiling static_assertions v1.1.0\n   Compiling autocfg v1.4.0\n   Compiling adler2 v2.0.0\n   Compiling pkg-config v0.3.31\n   Compiling quote v1.0.37\n   Compiling syn v2.0.87\n   Compiling memchr v2.7.4\n   Compiling libudev-sys v0.1.4\n   Compiling num-traits v0.2.19\n   Compiling miniz_oxide v0.8.0\n   Compiling twox-hash v1.6.3\n   Compiling crc32fast v1.4.2\n   Compiling utf8parse v0.2.2\n   Compiling anstyle-parse v0.2.6\n   Compiling flate2 v1.0.35\n   Compiling ruzstd v0.7.2\nerror: failed to run custom build command for `libudev-sys v0.1.4`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_3/ZR233/ostool/target/debug/build/libudev-sys-8ce792348ab024e9/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=LIBUDEV_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=LIBUDEV_STATIC\n  cargo:rerun-if-env-changed=LIBUDEV_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libudev-sys-0.1.4/build.rs:38:41:\n  called `Result::unwrap()` on an `Err` value: \"\\npkg-config exited with status code 1\\n> PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags libudev\\n\\nThe system library `libudev` required by crate `libudev-sys` was not found.\\nThe file `libudev.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\\nThe PKG_CONFIG_PATH environment variable is not set.\\n\\nHINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `libudev.pc`.\\n\"\n  stack backtrace:\n     0:     0x556796efa055 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x556796efa055 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x556796efa055 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x556796efa055 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x556796f1ca9b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x556796f1ca9b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x556796ef758f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x556796ef9e2e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x556796ef9e2e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x556796efb339 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x556796efb07d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x556796efb843 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x556796efb724 - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:664:13\n    13:     0x556796efa519 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x556796efb457 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x556796f1bb53 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x556796f1c096 - core::result::unwrap_failed::hcaf97cbd304b2b7c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1658:5\n    17:     0x556796ea6bf3 - core::result::Result<T,E>::unwrap::h7a3881a35dfac2ab\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/result.rs:1081:23\n    18:     0x556796ea6bf3 - build_script_build::main::h47b9ff1a8e5196c6\n                                 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libudev-sys-0.1.4/build.rs:38:5\n    19:     0x556796ea51bb - core::ops::function::FnOnce::call_once::hb69c5d95794888c6\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    20:     0x556796ea43ce - std::sys_common::backtrace::__rust_begin_short_backtrace::h38edff963a4be751\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    21:     0x556796ea4a01 - std::rt::lang_start::{{closure}}::had38cc725d730c3a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    22:     0x556796ef425d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    23:     0x556796ef425d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    24:     0x556796ef425d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    25:     0x556796ef425d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    26:     0x556796ef425d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    27:     0x556796ef425d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    28:     0x556796ef425d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    29:     0x556796ef425d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    30:     0x556796ef425d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    31:     0x556796ea49da - std::rt::lang_start::h96f23369d0aa31a0\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    32:     0x556796ea6d0e - main\n    33:     0x7fb346c29d90 - <unknown>\n    34:     0x7fb346c29e40 - __libc_start_main\n    35:     0x556796ea4285 - _start\n    36:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 35,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=ostool, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/ZR233/ostool\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling serde v1.0.215\n    Checking cfg-if v1.0.0\n   Compiling libc v0.2.162\n   Compiling thiserror v1.0.69\n    Checking memchr v2.7.4\n    Checking adler2 v2.0.0\n   Compiling autocfg v1.4.0\n    Checking static_assertions v1.1.0\n   Compiling pkg-config v0.3.31\n   Compiling quote v1.0.37\n   Compiling num-traits v0.2.19\n   Compiling syn v2.0.87\n    Checking twox-hash v1.6.3\n   Compiling libudev-sys v0.1.4\n    Checking miniz_oxide v0.8.0\n    Checking crc32fast v1.4.2\n    Checking utf8parse v0.2.2\nerror: failed to run custom build command for `libudev-sys v0.1.4`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_3/ZR233/ostool/target/debug/build/libudev-sys-298c6ac87633bf86/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-env-changed=LIBUDEV_NO_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG\n  cargo:rerun-if-env-changed=PKG_CONFIG\n  cargo:rerun-if-env-changed=LIBUDEV_STATIC\n  cargo:rerun-if-env-changed=LIBUDEV_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_PATH\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu\n  cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR\n  cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR\n\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libudev-sys-0.1.4/build.rs:38:41:\n  called `Result::unwrap()` on an `Err` value: \"\\npkg-config exited with status code 1\\n> PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags libudev\\n\\nThe system library `libudev` required by crate `libudev-sys` was not found.\\nThe file `libudev.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\\nThe PKG_CONFIG_PATH environment variable is not set.\\n\\nHINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `libudev.pc`.\\n\"\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n14:57:01|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/vcpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x11`: unknown register\n   --> src/vcpu.rs:221:13\n    |\n221 |             in(\"x11\") &self.host_stack_top as *const _ as usize,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/exception.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:234:5\n    |\n234 | /     core::arch::asm!(\n235 | |         \"bl {vcpu_running}\", // Check if vcpu is running.\n236 | |         // If vcpu_running returns true, jump to `return_run_guest`,\n237 | |         // after that the control flow is handed back to Aarch64VCpu.run(),\n...   |\n248 | |         options(noreturn),\n249 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/exception.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:290:5\n    |\n290 | /     core::arch::asm!(\n291 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n292 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n293 | |         // Currently `x9` points to `&Aarch64VCpu.host_stack_top`, see `run_guest()` in vcpu.rs.\n...   |\n298 | |         options(noreturn),\n299 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/exception.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:234:5\n    |\n234 | /     core::arch::asm!(\n235 | |         \"bl {vcpu_running}\", // Check if vcpu is running.\n236 | |         // If vcpu_running returns true, jump to `return_run_guest`,\n237 | |         // after that the control flow is handed back to Aarch64VCpu.run(),\n...   |\n248 | |         options(noreturn),\n249 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/exception.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:290:5\n    |\n290 | /     core::arch::asm!(\n291 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n292 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n293 | |         // Currently `x9` points to `&Aarch64VCpu.host_stack_top`, see `run_guest()` in vcpu.rs.\n...   |\n298 | |         options(noreturn),\n299 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 41,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T06:19:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 42,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T06:19:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:20Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 48,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arm_vcpu, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling rustversion v1.0.18\n   Compiling proc-macro2 v1.0.92\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n    Checking memory_addr v0.3.1\n   Compiling quote v1.0.37\n    Checking x86_64 v0.15.1\n   Compiling axerrno v0.1.0\n    Checking log v0.4.22\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.89\n    Checking cfg-if v1.0.0\n   Compiling percpu v0.1.5\n    Checking spin v0.9.8\n    Checking memory_set v0.3.1\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking page_table_entry v0.4.1\n    Checking page_table_multiarch v0.4.1\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n   Compiling percpu_macros v0.1.5\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#1e9fa523)\n    Checking arm_vcpu v0.1.0 (/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu)\nerror: could not compile `arm_vcpu` (lib) due to 3 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 49,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arm_vcpu, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.3.1\n    Checking bitflags v2.6.0\n    Checking log v0.4.22\n   Compiling axerrno v0.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking cfg-if v1.0.0\n   Compiling percpu v0.1.5\n    Checking memory_set v0.3.1\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.1\n    Checking bit_field v0.10.2\n    Checking page_table_entry v0.4.1\n    Checking page_table_multiarch v0.4.1\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#1e9fa523)\n    Checking arm_vcpu v0.1.0 (/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu)\nerror: could not compile `arm_vcpu` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 50,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arm_vcpu, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.92\n   Compiling rustversion v1.0.18\n   Compiling bit_field v0.10.2\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling bitflags v1.3.2\n   Compiling unicode-ident v1.0.14\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling memory_addr v0.3.1\n   Compiling bitflags v2.6.0\n   Compiling volatile v0.4.6\n   Compiling x86_64 v0.15.1\n   Compiling quote v1.0.37\n   Compiling axerrno v0.1.0\n   Compiling scopeguard v1.2.0\n   Compiling log v0.4.22\n[2024-11-22T06:19:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.89\n   Compiling percpu v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling spin v0.9.8\n   Compiling memory_set v0.3.1\n   Compiling numeric-enum-macro v0.2.0\n   Compiling lazyinit v0.2.1\n   Compiling tock-registers v0.8.1\n   Compiling page_table_entry v0.4.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling page_table_multiarch v0.4.1\n   Compiling axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n   Compiling percpu_macros v0.1.5\n   Compiling axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#1e9fa523)\n   Compiling arm_vcpu v0.1.0 (/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu)\nerror: invalid register `x11`: unknown register\n   --> src/vcpu.rs:221:13\n    |\n221 |             in(\"x11\") &self.host_stack_top as *const _ as usize,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: `arm_vcpu` (lib) generated 1 warning\nerror: could not compile `arm_vcpu` (lib) due to 1 previous error; 1 warning emitted\n"
    },
    {
      "cmd_idx": 51,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=arm_vcpu, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling proc-macro2 v1.0.92\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.18\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling autocfg v1.4.0\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.6.0\n    Checking volatile v0.4.6\n    Checking memory_addr v0.3.1\n    Checking x86_64 v0.15.1\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n   Compiling axerrno v0.1.0\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.89\n   Compiling percpu v0.1.5\n    Checking cfg-if v1.0.0\n    Checking spin v0.9.8\n    Checking page_table_entry v0.4.1\n    Checking memory_set v0.3.1\n    Checking page_table_multiarch v0.4.1\n    Checking numeric-enum-macro v0.2.0\n    Checking lazyinit v0.2.1\n    Checking tock-registers v0.8.1\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#0e4ddd0f)\n    Checking aarch64-cpu v9.4.0\n   Compiling percpu_macros v0.1.5\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#1e9fa523)\n    Checking arm_vcpu v0.1.0 (/home/runner/check/batch_3/arceos-hypervisor/arm_vcpu)\nerror: invalid register `x11`: unknown register\n   --> src/vcpu.rs:221:13\n    |\n221 |             in(\"x11\") &self.host_stack_top as *const _ as usize,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:234:5\n    |\n234 | /     core::arch::asm!(\n235 | |         \"bl {vcpu_running}\", // Check if vcpu is running.\n236 | |         // If vcpu_running returns true, jump to `return_run_guest`,\n237 | |         // after that the control flow is handed back to Aarch64VCpu.run(),\n...   |\n248 | |         options(noreturn),\n249 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> src/exception.rs:290:5\n    |\n290 | /     core::arch::asm!(\n291 | |         // Curretly `sp` points to the base address of `Aarch64VCpu.ctx`, which stores guest's `TrapFrame`.\n292 | |         \"add x9, sp, 34 * 8\", // Skip the exception frame.\n293 | |         // Currently `x9` points to `&Aarch64VCpu.host_stack_top`, see `run_guest()` in vcpu.rs.\n...   |\n298 | |         options(noreturn),\n299 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> src/lib.rs:4:12\n  |\n4 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nFor more information about this error, try `rustc --explain E0787`.\nwarning: `arm_vcpu` (lib) generated 1 warning\nerror: could not compile `arm_vcpu` (lib) due to 3 previous errors; 1 warning emitted\n06:19:27|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/lib.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/lib.rs (original lines from 11 to 11)\n+\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/vgic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/vgic.rs (original lines from 95 to 95)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/vgic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/vgic.rs (original lines from 98 to 101)\n-            },\n-            VGICD_ISENABLER_SPI..=VGICD_ICENABLER_SGI_PPI => {\n-                \n-            },\n+            }\n+            VGICD_ISENABLER_SPI..=VGICD_ICENABLER_SGI_PPI => {}\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/vgic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/vgic.rs (original lines from 113 to 113)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/vgic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/vgic.rs (original lines from 116 to 117)\n-            },\n-            \n+            }\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/vgic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/vgic.rs (original lines from 126 to 126)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/vgic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/vgic.rs (original lines from 129 to 130)\n-            },\n-            \n+            }\n"
    },
    {
      "cmd_idx": 52,
      "file": "src/vgicc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_3/arceos-hypervisor/arm_vgic/src/vgicc.rs (original lines from 1 to 1)\n-\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple patterns overlap on their endpoints\n  --> src/vgic.rs:99:13\n   |\n96 |             VGICD_ISENABLER_SGI_PPI..=VGICD_ISENABLER_SPI => {\n   |             --------------------------------------------- this range overlaps on `260_usize`...\n...\n99 |             VGICD_ISENABLER_SPI..=VGICD_ICENABLER_SGI_PPI => {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ... with this range\n   |\n   = note: you likely meant to write mutually exclusive ranges\n   = note: `#[warn(overlapping_range_endpoints)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgic.rs:17:5\n   |\n15 | struct VgicInner {\n   |        --------- fields in this struct\n16 |     used_irq: [u32; SPI_ID_MAX / 32],\n17 |     ptov: [u32; SPI_ID_MAX],\n   |     ^^^^\n18 |     vtop: [u32; SPI_ID_MAX],\n   |     ^^^^\n19 |     gicc: Vec<Vgicc>,\n   |     ^^^^\n...\n22 |     typer: u32,\n   |     ^^^^^\n23 |     iidr: u32,\n   |     ^^^^\n24 |\n25 |     gicd_igroupr: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^\n26 |     gicd_isenabler: [u32; SPI_ID_MAX / 32],\n   |     ^^^^^^^^^^^^^^\n27 |     gicd_ipriorityr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^^\n28 |     gicd_itargetsr: [u8; SPI_ID_MAX],\n   |     ^^^^^^^^^^^^^^\n29 |     gicd_icfgr: [u32; SPI_ID_MAX / 16],\n   |     ^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `VGICD_ICENABLER_SPI` is never used\n  --> src/consts.rs:11:18\n   |\n11 | pub(crate) const VGICD_ICENABLER_SPI: usize = 0x0184;\n   |                  ^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `VGICD_ISPENDR` is never used\n  --> src/consts.rs:13:18\n   |\n13 | pub(crate) const VGICD_ISPENDR: usize = 0x0200;\n   |                  ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `VGICD_ICPENDR` is never used\n  --> src/consts.rs:14:18\n   |\n14 | pub(crate) const VGICD_ICPENDR: usize = 0x5;\n   |                  ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `VGICD_ISACTIVER` is never used\n  --> src/consts.rs:15:18\n   |\n15 | pub(crate) const VGICD_ISACTIVER: usize = 0x6;\n   |                  ^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `VGICD_ICACTIVER` is never used\n  --> src/consts.rs:16:18\n   |\n16 | pub(crate) const VGICD_ICACTIVER: usize = 0x7;\n   |                  ^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `VGICD_ICFGR` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const VGICD_ICFGR: usize = 0x18;\n   |                  ^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `VGICD_SGIR` is never used\n  --> src/consts.rs:18:18\n   |\n18 | pub(crate) const VGICD_SGIR: usize = 0x1e;\n   |                  ^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgicc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: multiple fields are never read\n  --> src/vgicc.rs:4:5\n   |\n3  | pub(crate) struct Vgicc {\n   |                   ----- fields in this struct\n4  |     id: u32,\n   |     ^^\n5  |     pending_lr: [u32; SPI_ID_MAX],\n   |     ^^^^^^^^^^\n6  |     saved_lr: [u32; GICD_LR_NUM],\n   |     ^^^^^^^^\n7  |\n8  |     saved_elsr0: u32,\n   |     ^^^^^^^^^^^\n9  |     saved_apr: u32,\n   |     ^^^^^^^^^\n10 |     saved_hcr: u32,\n   |     ^^^^^^^^^\n11 |\n12 |     isenabler: u32, // 0..31\n   |     ^^^^^^^^^\n13 |     priorityr: [u8; PPI_ID_MAX],\n   |     ^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/devops_impl.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/devops_impl.rs:53:17\n   |\n53 |                 return self.handle_read8(addr);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n53 -                 return self.handle_read8(addr);\n53 +                 self.handle_read8(addr)\n   |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/devops_impl.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/devops_impl.rs:57:17\n   |\n57 |                 return self.handle_read16(addr);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n57 -                 return self.handle_read16(addr);\n57 +                 self.handle_read16(addr)\n   |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/devops_impl.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/devops_impl.rs:61:17\n   |\n61 |                 return self.handle_read32(addr);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n   |\n61 -                 return self.handle_read32(addr);\n61 +                 self.handle_read32(addr)\n   |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `Vgic`\n  --> src/vgic.rs:37:5\n   |\n37 | /     pub fn new() -> Vgic {\n38 | |         Vgic {\n39 | |             inner: Mutex::new(VgicInner {\n40 | |                 gicc: Vec::new(),\n...  |\n53 | |         }\n54 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n36 + impl Default for Vgic {\n37 +     fn default() -> Self {\n38 +         Self::new()\n39 +     }\n40 + }\n   |\n\n"
    },
    {
      "cmd_idx": 53,
      "file": "src/vgic.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: some ranges overlap\n  --> src/vgic.rs:96:13\n   |\n96 |             VGICD_ISENABLER_SGI_PPI..=VGICD_ISENABLER_SPI => {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: overlaps with this\n  --> src/vgic.rs:99:13\n   |\n99 |             VGICD_ISENABLER_SPI..=VGICD_ICENABLER_SGI_PPI => {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_overlapping_arm\n   = note: `#[warn(clippy::match_overlapping_arm)]` on by default\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 686 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (37 crate dependencies)\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n└── riscv 0.11.1\n    └── page_table_multiarch 0.4.1\n        └── axaddrspace 0.1.0\n            ├── axdevice_base 0.1.0\n            │   └── arm_vgic 0.0.0\n            └── arm_vgic 0.0.0\n\nwarning: 1 allowed warning found\n\n{\n  \"database\": {\n    \"advisory-count\": 686,\n    \"last-commit\": \"509528f6775ad69ab114f1e4b37b4359cae5cef4\",\n    \"last-updated\": \"2024-11-10T21:38:56+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 37\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 56,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:57:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:57:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 65,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/address_space/backend/mod.rs:48:17\n   |\n48 |                 populate: populate,\n   |                 ^^^^^^^^^^^^^^^^^^ help: replace it with: `populate`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n"
    },
    {
      "cmd_idx": 65,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n  --> src/address_space/backend/mod.rs:45:9\n   |\n45 | /         match self {\n46 | |             &Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 | |             &Self::Alloc { populate, .. } => Self::Alloc {\n48 | |                 populate: populate,\n49 | |                 _phantom: core::marker::PhantomData,\n50 | |             },\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n   = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n   |\n45 ~         match *self {\n46 ~             Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 ~             Self::Alloc { populate, .. } => Self::Alloc {\n   |\n\n"
    },
    {
      "cmd_idx": 66,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/address_space/backend/mod.rs:48:17\n   |\n48 |                 populate: populate,\n   |                 ^^^^^^^^^^^^^^^^^^ help: replace it with: `populate`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n"
    },
    {
      "cmd_idx": 66,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n  --> src/address_space/backend/mod.rs:45:9\n   |\n45 | /         match self {\n46 | |             &Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 | |             &Self::Alloc { populate, .. } => Self::Alloc {\n48 | |                 populate: populate,\n49 | |                 _phantom: core::marker::PhantomData,\n50 | |             },\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n   = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n   |\n45 ~         match *self {\n46 ~             Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 ~             Self::Alloc { populate, .. } => Self::Alloc {\n   |\n\n"
    },
    {
      "cmd_idx": 67,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/address_space/backend/mod.rs:48:17\n   |\n48 |                 populate: populate,\n   |                 ^^^^^^^^^^^^^^^^^^ help: replace it with: `populate`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n"
    },
    {
      "cmd_idx": 67,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n  --> src/address_space/backend/mod.rs:45:9\n   |\n45 | /         match self {\n46 | |             &Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 | |             &Self::Alloc { populate, .. } => Self::Alloc {\n48 | |                 populate: populate,\n49 | |                 _phantom: core::marker::PhantomData,\n50 | |             },\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n   = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n   |\n45 ~         match *self {\n46 ~             Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 ~             Self::Alloc { populate, .. } => Self::Alloc {\n   |\n\n"
    },
    {
      "cmd_idx": 68,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n  --> src/address_space/backend/mod.rs:48:17\n   |\n48 |                 populate: populate,\n   |                 ^^^^^^^^^^^^^^^^^^ help: replace it with: `populate`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n"
    },
    {
      "cmd_idx": 68,
      "file": "src/address_space/backend/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n  --> src/address_space/backend/mod.rs:45:9\n   |\n45 | /         match self {\n46 | |             &Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 | |             &Self::Alloc { populate, .. } => Self::Alloc {\n48 | |                 populate: populate,\n49 | |                 _phantom: core::marker::PhantomData,\n50 | |             },\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n   = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n   |\n45 ~         match *self {\n46 ~             Self::Linear { pa_va_offset } => Self::Linear { pa_va_offset },\n47 ~             Self::Alloc { populate, .. } => Self::Alloc {\n   |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:58:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 71,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:58:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 72,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:58:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 73,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:10Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n\u001b[1m\u001b[32m   Compiling\u001b[0m axerrno v0.1.0\n[2024-11-15T14:58:10Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 85,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n"
    },
    {
      "cmd_idx": 85,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n"
    },
    {
      "cmd_idx": 86,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n"
    },
    {
      "cmd_idx": 87,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 88,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 88,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "cmd_idx": 88,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n"
    },
    {
      "cmd_idx": 88,
      "file": "src/device.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 90,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:58:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 91,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:58:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 92,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:58:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 93,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-15T14:58:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-15T14:58:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 110,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T06:19:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 111,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T06:19:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 112,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T06:19:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 113,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T06:19:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T06:19:50Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    }
  ]
}